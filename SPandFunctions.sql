-- MySQL dump 10.13  Distrib 5.7.17, for Win64 (x86_64)
--
-- Host: 35.197.140.185    Database: nexat_uat
-- ------------------------------------------------------
-- Server version	5.7.23

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `attendance`
--

DROP TABLE IF EXISTS `attendance`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `attendance` (
  `AttendanceID` int(11) NOT NULL AUTO_INCREMENT,
  `UserID` int(11) NOT NULL,
  `LogInTime` datetime(3) DEFAULT NULL,
  `CheckInTime` datetime(3) DEFAULT NULL,
  `CheckOutTime` datetime(3) DEFAULT NULL,
  `LogOutTime` datetime(3) DEFAULT NULL,
  `LogInLocation` varchar(150) DEFAULT NULL,
  `CheckInLocation` varchar(150) DEFAULT NULL,
  `CheckOutLocation` varchar(150) DEFAULT NULL,
  `LogOutLocation` varchar(150) DEFAULT NULL,
  `LogTime` datetime(3) NOT NULL,
  `LogTimeType` char(5) DEFAULT NULL,
  `AutoCheckOut` char(1) DEFAULT NULL,
  PRIMARY KEY (`AttendanceID`),
  KEY `FK_UserIDUserPersonalInfo_idx` (`UserID`),
  CONSTRAINT `FK_UserIDUserPersonalInfo` FOREIGN KEY (`UserID`) REFERENCES `userpersonalinfo` (`UserID`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=10553 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `attendance`
--

LOCK TABLES `attendance` WRITE;
/*!40000 ALTER TABLE `attendance` DISABLE KEYS */;
INSERT INTO `attendance` VALUES (9836,933,NULL,'2017-04-17 10:58:17.000','2017-04-17 11:06:58.000',NULL,'','Kolkata','Kolkata',NULL,'2017-04-17 11:06:58.000',NULL,NULL),(9837,932,NULL,'2017-04-16 10:58:17.000','2017-04-16 21:06:58.000',NULL,'','Kolkata',NULL,NULL,'2017-04-16 10:59:18.000',NULL,NULL),(9838,974,NULL,'2017-04-08 10:58:17.000','2017-04-08 16:06:58.000',NULL,'','Kolkata',NULL,NULL,'2017-04-08 10:58:17.000',NULL,NULL),(9839,974,NULL,'2017-04-09 05:58:17.000','2017-04-09 15:06:58.000',NULL,'','Kolkata',NULL,NULL,'2017-04-09 05:58:17.000',NULL,NULL),(9840,974,NULL,'2017-04-05 03:40:17.000','2017-04-05 08:56:58.000',NULL,'','Kolkata',NULL,NULL,'2017-04-05 03:40:17.000',NULL,NULL),(9841,974,NULL,'2017-04-01 05:45:17.000','2017-04-01 14:00:58.000',NULL,'','Kolkata',NULL,NULL,'2017-04-01 05:45:17.000',NULL,NULL),(9842,932,NULL,'2017-04-15 10:58:17.000','2017-04-15 21:06:58.000',NULL,'','Kolkata',NULL,NULL,'2017-04-15 10:59:18.000',NULL,NULL),(9843,933,NULL,'2017-04-18 02:58:17.000','2017-04-18 11:06:58.000',NULL,'','Kolkata','eco space',NULL,'2017-04-18 11:06:58.000',NULL,NULL),(9844,933,NULL,'2017-04-19 02:58:17.000','2017-04-19 13:56:15.000',NULL,'','Kolkata',NULL,NULL,'2017-04-19 11:06:58.000',NULL,NULL),(9846,929,NULL,'2017-04-16 02:58:17.000','2017-04-16 13:56:15.000',NULL,'','Kolkata',NULL,NULL,'2017-04-16 11:06:58.000',NULL,NULL),(9847,1004,NULL,'2017-04-08 10:58:17.000','2017-04-08 16:06:58.000',NULL,'','Kolkata',NULL,NULL,'2017-04-08 10:58:17.000',NULL,NULL),(9848,1004,NULL,'2017-04-09 05:58:17.000','2017-04-09 15:06:58.000',NULL,'','Kolkata',NULL,NULL,'2017-04-09 05:58:17.000',NULL,NULL),(9849,1005,NULL,'2017-04-05 03:40:17.000','2017-04-05 12:56:58.000',NULL,'','Kolkata',NULL,NULL,'2017-04-05 03:40:17.000',NULL,NULL),(9850,1005,NULL,'2017-04-01 05:45:17.000','2017-04-01 15:00:58.000',NULL,'','Kolkata',NULL,NULL,'2017-04-01 05:45:17.000',NULL,NULL),(9851,1005,NULL,'2017-04-08 10:58:17.000','2017-04-08 20:06:58.000',NULL,'','Kolkata',NULL,NULL,'2017-04-08 10:58:17.000',NULL,NULL),(9852,1005,NULL,'2017-04-09 05:58:17.000','2017-04-09 15:06:58.000',NULL,'','Kolkata',NULL,NULL,'2017-04-09 05:58:17.000',NULL,NULL),(9853,930,NULL,'2017-04-16 02:58:17.000','2017-04-16 04:56:15.000',NULL,'','Kolkata',NULL,NULL,'2017-04-16 11:06:58.000',NULL,NULL),(9854,1006,NULL,'2017-04-08 10:58:17.000','2017-04-08 18:58:58.000',NULL,'','Kolkata',NULL,NULL,'2017-04-08 10:58:17.000',NULL,NULL),(9855,1006,NULL,'2017-04-09 10:58:17.000','2017-04-09 18:58:58.000',NULL,'','Kolkata',NULL,NULL,'2017-04-09 10:58:17.000',NULL,NULL),(9856,1005,NULL,'2017-04-25 10:06:58.000','2017-04-25 19:12:05.000',NULL,NULL,'Chakpachuria, West Bengal','Chakpachuria, West Bengal',NULL,'2017-04-25 10:06:58.000',NULL,NULL),(9857,1454,NULL,'2017-04-23 10:16:58.000','2017-04-23 19:11:58.000',NULL,NULL,'Kolkata','Kolkata',NULL,'2017-04-23 10:06:58.000',NULL,NULL),(9858,1464,NULL,'2017-04-24 10:16:58.000','2017-04-24 16:11:58.000',NULL,NULL,'kolkata','kolkata',NULL,'2017-04-24 10:16:58.000',NULL,NULL),(9859,1046,NULL,'2017-04-23 10:16:58.000','2017-04-23 16:11:58.000',NULL,NULL,'kolkata','kolkata',NULL,'2017-04-23 10:16:58.000',NULL,NULL),(9860,1047,NULL,'2017-04-23 10:16:58.000','2017-04-23 19:11:58.000',NULL,NULL,'kolkata','kolkata',NULL,'2017-04-23 10:16:58.000',NULL,NULL),(9861,933,NULL,'2017-04-24 10:22:50.000','2017-04-24 19:11:58.000',NULL,NULL,'kolkata','kolkata',NULL,'2017-04-24 10:16:53.000',NULL,NULL),(9862,933,NULL,'2017-04-25 10:16:58.000','2017-04-25 17:11:58.000',NULL,NULL,'kolkata','kolkata',NULL,'2017-04-25 10:16:58.000',NULL,NULL),(9863,933,NULL,'2017-04-26 10:16:58.000','2017-04-26 19:11:58.000',NULL,NULL,'kolkata','kolkata',NULL,'2017-04-26 10:16:58.000',NULL,NULL),(9864,933,NULL,'2017-04-27 10:16:58.000','2017-04-27 17:11:58.000',NULL,NULL,'kolkata','kolkata',NULL,'2017-04-27 09:16:58.000',NULL,NULL),(9865,933,NULL,'2017-04-29 10:16:58.000','2017-04-29 19:11:58.000',NULL,NULL,'kolkata','kolkata',NULL,'2017-04-29 08:16:58.000',NULL,NULL),(9866,933,NULL,'2017-04-30 10:16:58.000','2017-04-30 17:11:58.000',NULL,NULL,'kolkata','kolkata',NULL,'2017-04-30 10:16:58.000',NULL,NULL),(9867,933,NULL,'2017-05-02 10:43:36.000','2017-05-02 10:44:19.000',NULL,NULL,'Chakpachuria, West Bengal','Chakpachuria, West Bengal',NULL,'2017-05-02 10:43:36.000',NULL,NULL),(9868,933,NULL,'2017-04-01 10:16:58.000','2017-04-01 17:11:58.000',NULL,NULL,'kolkata','kolkata',NULL,'2017-04-01 10:16:58.000',NULL,NULL),(9869,933,NULL,'2017-04-02 10:16:58.000','2017-04-02 19:11:58.000',NULL,NULL,'kolkata','kolkata',NULL,'2017-04-02 10:16:58.000',NULL,NULL),(9870,933,NULL,'2017-04-03 10:16:58.000','2017-04-03 19:11:58.000',NULL,NULL,'kolkata','kolkata',NULL,'2017-04-03 10:16:58.000',NULL,NULL),(9871,934,NULL,'2017-05-02 11:23:19.000','2017-05-02 11:54:14.000',NULL,NULL,'Chakpachuria, West Bengal','Chakpachuria, West Bengal',NULL,'2017-05-02 11:23:19.000',NULL,NULL),(9872,942,NULL,'2017-05-02 02:27:16.000','2017-05-02 11:33:08.000',NULL,NULL,'Chakpachuria, West Bengal','Chakpachuria, West Bengal',NULL,'2017-05-02 02:27:16.000',NULL,NULL),(9873,933,NULL,'2017-05-03 05:28:29.000','2017-05-03 05:31:27.000',NULL,NULL,'Rajarhat,Kolkata','Rajarhat,Kolkata',NULL,'2017-05-03 05:28:29.000',NULL,NULL),(9874,934,NULL,'2017-05-03 05:37:56.000','2017-05-03 14:39:10.000',NULL,NULL,'Chakpachuria, West Bengal','Chakpachuria, West Bengal',NULL,'2017-05-03 05:37:56.000',NULL,NULL),(9875,933,NULL,'2017-05-04 06:09:42.000','2017-05-04 17:45:13.000',NULL,NULL,'Rajarhat,Kolkata','Chakpachuria, West Bengal',NULL,'2017-05-04 06:09:42.000',NULL,NULL),(9876,933,NULL,'2017-03-25 01:09:42.000','2017-03-25 06:10:26.000',NULL,NULL,'Rajarhat,Kolkata','Rajarhat,Kolkata',NULL,'2017-03-25 01:09:42.000',NULL,NULL),(9877,933,NULL,'2017-03-26 06:09:42.000','2017-03-26 20:10:26.000',NULL,NULL,'Rajarhat,Kolkata','Rajarhat,Kolkata',NULL,'2017-03-26 06:09:42.000',NULL,NULL),(9878,942,NULL,'2017-04-29 02:27:16.000','2017-04-29 11:33:08.000',NULL,NULL,'Chakpachuria, West Bengal','Chakpachuria, West Bengal',NULL,'2017-04-29 02:27:16.000',NULL,NULL),(9879,942,NULL,'2017-04-30 02:27:16.000','2017-04-30 11:33:08.000',NULL,NULL,'Chakpachuria, West Bengal','Chakpachuria, West Bengal',NULL,'2017-04-30 02:27:16.000',NULL,NULL),(9881,942,NULL,'2017-05-05 06:56:24.000','2017-05-05 07:24:31.000',NULL,NULL,'Rajarhat,Kolkata','Rajarhat,Kolkata',NULL,'2017-05-05 06:56:24.000',NULL,NULL),(9882,943,NULL,'2017-05-05 10:38:25.000','2017-05-05 13:54:06.000',NULL,NULL,'Rajarhat,Kolkata','Rajarhat,Kolkata',NULL,'2017-05-05 10:38:25.000',NULL,NULL),(9883,933,NULL,'2017-05-05 11:51:47.000','2017-05-05 11:53:30.000',NULL,NULL,'Chakpachuria, West Bengal','Chakpachuria, West Bengal',NULL,'2017-05-05 11:51:47.000',NULL,NULL),(9884,933,NULL,'2017-05-08 00:01:23.000','2017-05-08 10:03:07.000',NULL,NULL,'Rajarhat,Kolkata','Rajarhat,Kolkata',NULL,'2017-05-08 06:59:23.000',NULL,NULL),(9885,944,NULL,'2017-05-08 08:57:02.000','2017-05-08 09:09:09.000',NULL,NULL,'Rajarhat,Kolkata','Rajarhat,Kolkata',NULL,'2017-05-08 08:57:02.000',NULL,NULL),(9886,933,NULL,'2017-05-01 03:43:36.000','2017-05-01 10:44:19.000',NULL,NULL,'Chakpachuria, West Bengal','Chakpachuria, West Bengal',NULL,'2017-05-01 03:43:36.000',NULL,NULL),(9887,933,NULL,'2017-05-06 06:09:42.000','2017-05-06 17:45:13.000',NULL,NULL,'Rajarhat,Kolkata','Chakpachuria, West Bengal',NULL,'2017-05-06 06:09:42.000',NULL,NULL),(9888,933,NULL,'2017-05-07 06:09:42.000','2017-05-07 17:45:13.000',NULL,NULL,'Rajarhat,Kolkata','Chakpachuria, West Bengal',NULL,'2017-05-07 06:09:42.000',NULL,NULL),(9889,933,NULL,'2017-05-09 12:53:32.000','2017-05-09 17:55:30.000',NULL,NULL,'Rajarhat,Kolkata','Rajarhat,Kolkata',NULL,'2017-05-09 12:53:32.000',NULL,NULL),(9890,951,NULL,'2017-05-09 12:59:27.000','2017-05-10 02:59:27.000',NULL,NULL,'Rajarhat,Kolkata',NULL,NULL,'2017-05-09 12:59:27.000',NULL,'Y'),(9891,933,NULL,'2017-04-20 02:58:17.000','2017-04-20 13:56:15.000',NULL,'','Kolkata',NULL,NULL,'2017-04-20 13:55:58.000',NULL,NULL),(9892,933,NULL,'2017-05-25 07:04:29.000','2017-05-25 21:04:29.000',NULL,NULL,'Chakpachuria, West Bengal',NULL,NULL,'2017-05-25 07:04:37.000',NULL,'Y'),(9893,934,NULL,'2017-05-25 13:18:55.000','2017-05-25 13:20:22.000',NULL,NULL,'Chakpachuria, West Bengal','Chakpachuria, West Bengal',NULL,'2017-05-25 13:18:55.000',NULL,NULL),(9894,934,NULL,'2017-07-10 11:10:57.000','2017-07-10 12:17:37.000',NULL,NULL,'Bangalore','Bangalore',NULL,'2017-07-10 11:10:57.000',NULL,NULL),(9895,950,NULL,'2017-07-10 12:28:14.000','2017-07-11 02:28:14.000',NULL,NULL,'Chakpachuria, West Bengal',NULL,NULL,'2017-07-10 13:23:27.000',NULL,'Y'),(9896,951,NULL,'2017-07-10 13:24:27.000','2017-07-10 07:04:57.000',NULL,NULL,'Chakpachuria, West Bengal','WB',NULL,'2017-07-10 13:24:27.000',NULL,NULL),(9897,952,NULL,'2017-07-09 11:10:57.000','2017-07-10 01:10:57.000',NULL,NULL,'KOL',NULL,NULL,'2017-07-09 11:10:57.000',NULL,'Y'),(9901,953,NULL,'2017-07-10 14:02:36.000','2017-07-10 14:03:52.000',NULL,NULL,'Chakpachuria, West Bengal','Chakpachuria, West Bengal',NULL,'2017-07-10 14:02:36.000',NULL,NULL),(9902,933,NULL,'2017-07-12 14:04:32.000','2017-07-12 17:39:48.000',NULL,NULL,'No location','No location',NULL,'2017-07-12 14:04:32.000',NULL,NULL),(9903,934,NULL,'2017-07-12 15:45:29.000','2017-07-12 17:42:14.000',NULL,NULL,'No location','No location',NULL,'2017-07-12 15:45:29.000',NULL,NULL),(9904,935,NULL,'2017-07-12 17:51:56.000','2017-07-12 17:52:07.000',NULL,NULL,'No location','No location',NULL,'2017-07-12 17:51:56.000',NULL,NULL),(9905,937,NULL,'2017-07-12 17:53:25.000','2017-07-12 17:53:31.000',NULL,NULL,'No location','No location',NULL,'2017-07-12 17:53:25.000',NULL,NULL),(9906,936,NULL,'2017-07-12 17:55:00.000','2017-07-12 17:55:23.000',NULL,NULL,'No location','No location',NULL,'2017-07-12 17:55:00.000',NULL,NULL),(9907,938,NULL,'2017-07-12 17:57:36.000','2017-07-12 18:06:48.000',NULL,NULL,'No location','No location',NULL,'2017-07-12 17:57:36.000',NULL,NULL),(9908,938,NULL,'2017-07-13 12:32:41.000','2017-07-13 23:29:20.000',NULL,NULL,'No location','No location',NULL,'2017-07-13 12:32:41.000',NULL,NULL),(9909,938,NULL,'2017-07-14 00:24:56.000','2017-07-14 14:24:56.000',NULL,NULL,'No location',NULL,NULL,'2017-07-14 00:24:56.000',NULL,'Y'),(9910,933,NULL,'2017-07-17 14:45:38.000','2017-07-17 14:53:41.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2017-07-17 14:45:38.000',NULL,NULL),(9911,934,NULL,'2017-07-17 14:53:02.000','2017-07-17 14:54:13.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2017-07-17 14:53:02.000',NULL,NULL),(9912,935,NULL,'2017-07-17 14:56:07.000','2017-07-17 15:17:19.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2017-07-17 14:56:07.000',NULL,NULL),(9913,936,NULL,'2017-07-17 14:57:19.000','2017-07-17 15:20:43.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2017-07-17 14:57:19.000',NULL,NULL),(9914,937,NULL,'2017-07-17 14:58:28.000','2017-07-17 15:21:19.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2017-07-17 14:58:28.000',NULL,NULL),(9915,938,NULL,'2017-07-17 14:58:40.000','2017-07-17 15:21:30.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2017-07-17 14:58:40.000',NULL,NULL),(9916,934,NULL,'2017-07-25 14:44:24.000','2017-07-25 14:47:45.000',NULL,NULL,'No location','Rajarhat, Kolkata',NULL,'2017-07-25 14:44:24.000',NULL,NULL),(9917,944,NULL,'2017-07-25 15:02:22.000','2017-07-25 04:22:36.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2017-07-25 15:02:22.000',NULL,NULL),(9918,943,NULL,'2017-07-25 04:27:04.000','2017-07-25 18:27:04.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-07-25 04:27:04.000',NULL,'Y'),(9919,938,NULL,'2017-07-25 13:58:16.000','2017-07-26 03:58:16.000',NULL,NULL,'No location',NULL,NULL,'2017-07-25 13:58:16.000',NULL,'Y'),(9920,944,NULL,'2017-07-27 09:42:03.000','2017-07-27 09:44:32.000',NULL,NULL,'No location','PMO',NULL,'2017-07-27 09:42:03.000',NULL,NULL),(9921,933,NULL,'2017-07-27 10:37:25.000','2017-07-27 10:38:21.000',NULL,NULL,'PMO','PMO',NULL,'2017-07-27 10:37:25.000',NULL,NULL),(9922,934,NULL,'2017-07-27 10:39:51.000','2017-07-27 12:40:48.000',NULL,NULL,'PMO','Bangalore',NULL,'2017-07-27 10:39:51.000',NULL,NULL),(9923,935,NULL,'2017-07-27 10:39:51.000','2017-07-28 00:39:51.000',NULL,NULL,'PMO',NULL,NULL,'2017-07-27 10:39:51.000',NULL,'Y'),(9924,936,NULL,'2017-07-27 10:39:51.000','2017-07-28 00:39:51.000',NULL,NULL,'PMO',NULL,NULL,'2017-07-27 10:39:51.000',NULL,'Y'),(9925,937,NULL,'2017-07-27 10:39:51.000','2017-07-27 10:40:39.000',NULL,NULL,'PMO','PMO',NULL,'2017-07-27 10:39:51.000',NULL,NULL),(9926,938,NULL,'2017-07-31 08:37:16.000','2017-07-31 22:37:16.000',NULL,NULL,'No location',NULL,NULL,'2017-07-31 08:37:16.000',NULL,'Y'),(9927,938,NULL,'2017-08-02 08:03:42.000','2017-08-02 22:03:42.000',NULL,NULL,'No location',NULL,NULL,'2017-08-02 08:03:42.000',NULL,'Y'),(9928,934,NULL,'2017-08-02 08:41:39.000','2017-08-02 08:41:39.000',NULL,NULL,'Bangalore','Bangalore',NULL,'2017-08-02 08:41:39.000',NULL,NULL),(9929,944,NULL,'2017-08-03 10:06:22.000','2017-08-04 00:06:22.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-08-03 10:06:22.000',NULL,'Y'),(9930,933,NULL,'2017-08-03 12:35:37.000','2017-08-03 13:07:36.000',NULL,NULL,'Chakpachuria, West Bengal','test location',NULL,'2017-08-03 12:35:37.000',NULL,NULL),(9932,934,NULL,'2017-08-03 13:23:29.000','2017-08-03 13:28:34.000',NULL,NULL,'test location','Chakpachuria, West Bengal',NULL,'2017-08-03 13:23:29.000',NULL,NULL),(9933,936,NULL,'2017-08-03 13:24:58.000','2017-08-04 03:24:58.000',NULL,NULL,'',NULL,NULL,'2017-08-03 13:24:58.000',NULL,'Y'),(9935,933,NULL,'2017-08-04 07:24:18.000','2017-08-04 09:03:26.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2017-08-04 07:24:18.000',NULL,NULL),(9936,934,NULL,'2017-08-04 09:03:26.000','2017-08-04 12:30:12.000',NULL,NULL,'Rajarhat, Kolkata','Bangalore',NULL,'2017-08-04 09:03:26.000',NULL,NULL),(9937,939,NULL,'2017-08-04 09:04:09.000','2017-08-04 23:04:09.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-08-04 09:04:09.000',NULL,'Y'),(9938,942,NULL,'2017-08-04 09:10:01.000','2017-08-04 09:23:34.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2017-08-04 09:10:01.000',NULL,NULL),(9939,944,NULL,'2017-08-04 09:24:45.000','2017-08-04 09:25:48.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2017-08-04 09:24:45.000',NULL,NULL),(9941,934,NULL,'2017-08-07 06:35:45.000','2017-08-07 06:53:54.000',NULL,NULL,'Chakpachuria, West Bengal','Chakpachuria, West Bengal',NULL,'2017-08-07 06:35:45.000',NULL,NULL),(9942,935,NULL,'2017-08-07 07:23:22.000','2017-08-07 07:48:29.000',NULL,NULL,'new test','',NULL,'2017-08-07 07:23:22.000',NULL,NULL),(9943,936,NULL,'2017-08-07 07:23:22.000','2017-08-07 07:29:34.000',NULL,NULL,'new test','new test',NULL,'2017-08-07 07:23:22.000',NULL,NULL),(9944,937,NULL,'2017-08-07 07:23:22.000','2017-08-07 21:23:22.000',NULL,NULL,'new test',NULL,NULL,'2017-08-07 07:23:22.000',NULL,'Y'),(9945,939,NULL,'2017-08-07 07:23:22.000','2017-08-07 21:23:22.000',NULL,NULL,'new test',NULL,NULL,'2017-08-07 07:23:22.000',NULL,'Y'),(9946,940,NULL,'2017-08-07 07:29:34.000','2017-08-07 07:38:29.000',NULL,NULL,'new test','new test',NULL,'2017-08-07 07:29:34.000',NULL,NULL),(9947,941,NULL,'2017-08-07 07:29:34.000','2017-08-07 07:33:29.000',NULL,NULL,'new test','',NULL,'2017-08-07 07:29:34.000',NULL,NULL),(9948,933,NULL,'2017-08-07 06:35:45.000','2017-08-07 13:13:28.000',NULL,NULL,'Chakpachuria, West Bengal','new test',NULL,'2017-08-07 09:41:14.000',NULL,NULL),(9949,943,NULL,'2017-08-07 13:22:59.000','2017-08-07 14:30:46.000',NULL,NULL,'new test','new test',NULL,'2017-08-07 13:22:59.000',NULL,NULL),(9950,942,NULL,'2017-08-07 14:10:24.000','2017-08-08 04:10:24.000',NULL,NULL,'new test',NULL,NULL,'2017-08-07 14:10:24.000',NULL,'Y'),(9951,933,NULL,'2017-08-08 01:19:27.000','2017-08-08 10:44:05.000',NULL,NULL,'Chakpachuria, West Bengal','Rajarhat, Kolkata',NULL,'2017-08-08 07:21:32.000',NULL,NULL),(9952,944,NULL,'2017-08-08 08:24:28.000','2017-08-08 09:31:09.000',NULL,NULL,'Chakpachuria, West Bengal','Chakpachuria, West Bengal',NULL,'2017-08-08 08:24:28.000',NULL,NULL),(9953,933,NULL,'2017-08-06 04:30:27.000','2017-08-06 18:30:27.000',NULL,NULL,'Chakpachuria, West Bengal',NULL,NULL,'2017-08-06 04:45:27.000',NULL,'Y'),(9954,934,NULL,'2017-08-08 10:44:37.000','2017-08-08 19:50:21.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2017-08-08 10:44:37.000',NULL,NULL),(9955,935,NULL,'2017-08-08 10:49:15.000','2017-08-09 00:49:15.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-08-08 10:49:15.000',NULL,'Y'),(9956,936,NULL,'2017-08-08 10:49:26.000','2017-08-09 00:49:26.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-08-08 10:49:26.000',NULL,'Y'),(9957,937,NULL,'2017-08-08 10:49:39.000','2017-08-09 00:49:39.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-08-08 10:49:39.000',NULL,'Y'),(9958,939,NULL,'2017-08-08 10:50:02.000','2017-08-09 00:50:02.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-08-08 10:50:02.000',NULL,'Y'),(9959,940,NULL,'2017-08-08 10:50:45.000','2017-08-09 00:50:45.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-08-08 10:50:45.000',NULL,'Y'),(9960,941,NULL,'2017-08-08 10:50:51.000','2017-08-09 00:50:51.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-08-08 10:50:51.000',NULL,'Y'),(9961,942,NULL,'2017-08-08 11:15:45.000','2017-08-09 01:15:45.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-08-08 11:15:45.000',NULL,'Y'),(9962,943,NULL,'2017-08-08 11:17:23.000','2017-08-09 01:17:23.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-08-08 11:17:23.000',NULL,'Y'),(9963,933,NULL,'2017-08-09 07:40:23.000','2017-08-09 07:43:13.000',NULL,NULL,'test location1','test location1',NULL,'2017-08-09 07:40:23.000',NULL,NULL),(9964,934,NULL,'2017-08-09 07:40:54.000','2017-08-09 07:44:55.000',NULL,NULL,'test location1','test location1',NULL,'2017-08-09 07:40:54.000',NULL,NULL),(9965,935,NULL,'2017-08-09 07:41:40.000','2017-08-09 07:45:49.000',NULL,NULL,'test location1','test location1',NULL,'2017-08-09 07:41:40.000',NULL,NULL),(9966,936,NULL,'2017-08-09 07:46:16.000','2017-08-09 07:49:44.000',NULL,NULL,'test location1','test location1',NULL,'2017-08-09 07:46:16.000',NULL,NULL),(9967,937,NULL,'2017-08-09 07:52:03.000','2017-08-09 21:52:03.000',NULL,NULL,'test location1',NULL,NULL,'2017-08-09 07:52:03.000',NULL,'Y'),(9968,938,NULL,'2017-08-09 10:30:49.000','2017-08-09 10:36:11.000',NULL,NULL,'No location','No location',NULL,'2017-08-09 10:30:49.000',NULL,NULL),(9969,941,NULL,'2017-08-09 10:31:35.000','2017-08-09 10:35:36.000',NULL,NULL,'No location','No location',NULL,'2017-08-09 10:31:35.000',NULL,NULL),(9970,933,NULL,'2017-08-23 06:54:52.000','2017-08-23 07:01:22.000',NULL,NULL,'test1','test1',NULL,'2017-08-23 06:54:52.000',NULL,NULL),(9971,934,NULL,'2017-08-23 07:16:53.000','2017-08-23 07:19:11.000',NULL,NULL,'test1','test1',NULL,'2017-08-23 07:16:53.000',NULL,NULL),(9972,935,NULL,'2017-08-23 07:19:23.000','2017-08-23 08:39:45.000',NULL,NULL,'test1','test1',NULL,'2017-08-23 07:19:23.000',NULL,NULL),(9973,936,NULL,'2017-08-23 07:19:34.000','2017-08-23 21:19:34.000',NULL,NULL,'test1',NULL,NULL,'2017-08-23 07:19:34.000',NULL,'Y'),(9974,937,NULL,'2017-08-23 07:19:47.000','2017-08-23 21:19:47.000',NULL,NULL,'test1',NULL,NULL,'2017-08-23 07:19:47.000',NULL,'Y'),(9975,944,NULL,'2017-08-30 06:39:14.000','2017-08-30 20:39:14.000',NULL,NULL,'test1',NULL,NULL,'2017-08-30 06:39:14.000',NULL,'Y'),(9976,933,NULL,'2017-08-30 06:37:24.000','2017-08-30 20:37:24.000',NULL,NULL,'test1',NULL,NULL,'2017-08-30 06:37:24.000',NULL,'Y'),(9977,934,NULL,'2017-08-30 06:37:36.000','2017-08-30 20:37:36.000',NULL,NULL,'test1',NULL,NULL,'2017-08-30 06:37:36.000',NULL,'Y'),(9978,935,NULL,'2017-09-02 06:37:48.000','2017-09-02 14:37:48.000',NULL,NULL,'test1',NULL,NULL,'2017-09-02 06:37:48.000',NULL,NULL),(9979,936,NULL,'2017-08-30 06:37:57.000','2017-08-30 20:37:57.000',NULL,NULL,'test1',NULL,NULL,'2017-08-30 06:37:57.000',NULL,'Y'),(9980,937,NULL,'2017-08-30 06:38:11.000','2017-08-30 20:38:11.000',NULL,NULL,'test1',NULL,NULL,'2017-08-30 06:38:11.000',NULL,'Y'),(9981,939,NULL,'2017-08-30 06:38:19.000','2017-08-30 08:55:27.000',NULL,NULL,'test1','test2',NULL,'2017-08-30 06:38:19.000',NULL,NULL),(9982,941,NULL,'2017-08-30 06:38:32.000','2017-08-30 08:55:38.000',NULL,NULL,'test1','test2',NULL,'2017-08-30 06:38:32.000',NULL,NULL),(9983,940,NULL,'2017-08-30 06:38:53.000','2017-08-30 08:55:44.000',NULL,NULL,'test1','test2',NULL,'2017-08-30 06:38:53.000',NULL,NULL),(9984,942,NULL,'2017-08-30 06:39:01.000','2017-08-30 20:39:01.000',NULL,NULL,'test1',NULL,NULL,'2017-08-30 06:39:01.000',NULL,'Y'),(9985,943,NULL,'2017-08-30 06:39:06.000','2017-08-30 20:39:06.000',NULL,NULL,'test1',NULL,NULL,'2017-08-30 06:39:06.000',NULL,'Y'),(9986,933,NULL,'2017-09-01 09:19:28.000','2017-09-01 09:21:59.000',NULL,NULL,'test2','test2',NULL,'2017-09-01 09:19:28.000',NULL,NULL),(9987,934,NULL,'2017-09-01 09:19:39.000','2017-09-01 09:22:16.000',NULL,NULL,'test2','test2',NULL,'2017-09-01 09:19:39.000',NULL,NULL),(9988,935,NULL,'2017-09-01 09:19:46.000','2017-09-01 09:22:27.000',NULL,NULL,'test2','test2',NULL,'2017-09-01 09:19:46.000',NULL,NULL),(9989,936,NULL,'2017-09-01 09:19:57.000','2017-09-01 09:22:36.000',NULL,NULL,'test2','test2',NULL,'2017-09-01 09:19:57.000',NULL,NULL),(9990,1520,NULL,'2017-09-01 09:20:03.000','2017-09-01 09:22:48.000',NULL,NULL,'test2','test2',NULL,'2017-09-01 09:20:03.000',NULL,NULL),(9991,939,NULL,'2017-09-01 09:20:14.000','2017-09-01 19:23:00.000',NULL,NULL,'test2','test2',NULL,'2017-09-01 09:20:14.000',NULL,NULL),(9992,940,NULL,'2017-09-01 09:20:20.000','2017-09-01 19:30:00.000',NULL,NULL,'test2','test2',NULL,'2017-09-01 09:20:20.000',NULL,NULL),(9993,941,NULL,'2017-09-01 09:20:36.000','2017-09-01 09:23:16.000',NULL,NULL,'test2','test2',NULL,'2017-09-01 09:20:36.000',NULL,NULL),(9994,945,NULL,'2017-09-01 10:08:43.000','2017-09-01 10:29:58.000',NULL,NULL,'Action Area II, Newtown, New Town',' Action Area II, Newtown, New Town',NULL,'2017-09-01 10:08:43.000',NULL,NULL),(9995,933,NULL,'2017-09-13 18:47:59.000','2017-09-01 09:21:59.000',NULL,NULL,' Action Area II, Newtown, New Town','test2',NULL,'2017-09-13 06:47:59.000',NULL,NULL),(9996,934,NULL,'2017-09-12 20:00:00.000','2017-09-13 10:00:00.000',NULL,NULL,' Action Area II, Newtown, New Town',NULL,NULL,'2017-09-12 20:00:00.000',NULL,'Y'),(9997,935,NULL,'2017-09-12 02:07:00.000','2017-09-12 16:07:00.000',NULL,NULL,' Action Area II, Newtown, New Town',NULL,NULL,'2017-09-12 02:07:00.000',NULL,'Y'),(9998,936,NULL,'2017-09-13 00:00:00.000','2017-09-01 09:22:36.000',NULL,NULL,' Action Area II, Newtown, New Town','test2',NULL,'2017-09-13 00:00:00.000',NULL,NULL),(10000,935,NULL,'2017-09-13 00:57:36.000','2017-09-13 09:22:27.000',NULL,NULL,' Action Area II, Newtown, New Town','test2',NULL,'2017-09-13 14:15:23.000',NULL,NULL),(10001,934,NULL,'2017-09-14 19:00:00.000','2017-09-01 09:22:16.000',NULL,NULL,' Action Area II, Newtown, New Town','test2',NULL,'2017-09-14 00:00:00.000',NULL,NULL),(10002,938,NULL,'2017-09-14 09:35:24.000','2017-09-15 08:00:00.000',NULL,NULL,'test','test',NULL,'2017-09-14 09:35:24.000',NULL,NULL),(10003,939,NULL,'2017-09-13 15:00:00.000','2017-09-01 09:23:00.000',NULL,NULL,'test','test2',NULL,'2017-09-13 15:00:00.000',NULL,NULL),(10004,940,NULL,'2017-09-14 10:50:21.000','2017-09-01 19:30:00.000',NULL,NULL,'test','test2',NULL,'2017-09-14 10:50:21.000',NULL,NULL),(10005,941,NULL,'2017-09-13 11:58:03.000','2017-09-14 01:58:03.000',NULL,NULL,'test',NULL,NULL,'2017-09-13 11:58:03.000',NULL,'Y'),(10006,942,NULL,'2017-09-13 13:30:00.000','2017-09-14 12:13:41.000',NULL,NULL,'test','test',NULL,'2017-09-13 13:30:00.000',NULL,NULL),(10007,943,NULL,'2017-09-14 12:19:31.000','2017-09-15 02:19:31.000',NULL,NULL,'test',NULL,NULL,'2017-09-14 12:19:31.000',NULL,'Y'),(10008,944,NULL,'2017-09-14 06:30:00.000','2017-09-14 12:36:46.000',NULL,NULL,'test','test',NULL,'2017-09-14 06:30:00.000',NULL,NULL),(10009,944,NULL,'2017-09-13 06:30:00.000','2017-09-13 16:30:00.000',NULL,NULL,'test','test',NULL,'2017-09-13 06:30:00.000',NULL,NULL),(10010,944,NULL,'2017-09-12 06:30:00.000','2017-09-12 16:30:00.000',NULL,NULL,'test','test',NULL,'2017-09-12 06:30:00.000',NULL,NULL),(10011,933,NULL,'2017-09-14 16:30:00.000','2017-09-15 06:30:00.000',NULL,NULL,'test',NULL,NULL,'2017-09-14 16:30:00.000',NULL,'Y'),(10012,933,NULL,'2017-09-15 07:07:36.000','2017-09-15 21:07:36.000',NULL,NULL,'test',NULL,NULL,'2017-09-15 07:07:36.000',NULL,'Y'),(10013,940,NULL,'2017-09-18 09:43:01.000','2017-09-18 23:43:01.000',NULL,NULL,'Action Area II, Newtown, New Town',NULL,NULL,'2017-09-18 09:43:01.000',NULL,'Y'),(10014,940,NULL,'2017-09-19 09:21:02.000','2017-09-19 23:21:02.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-09-19 09:21:02.000',NULL,'Y'),(10015,939,NULL,'2017-09-19 02:27:04.000','2017-09-19 11:41:07.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2017-09-19 02:27:04.000',NULL,NULL),(10016,934,NULL,'2017-09-20 07:02:31.000','2017-09-20 08:28:38.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2017-09-20 07:02:31.000',NULL,NULL),(10017,933,NULL,'2017-09-20 08:28:02.000','2017-09-20 22:28:02.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-09-20 08:28:02.000',NULL,'Y'),(10018,935,NULL,'2017-09-20 08:28:16.000','2017-09-20 22:28:16.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-09-20 08:28:16.000',NULL,'Y'),(10019,936,NULL,'2017-09-20 08:28:27.000','2017-09-20 22:28:27.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-09-20 08:28:27.000',NULL,'Y'),(10020,934,NULL,'2017-09-09 20:00:00.000','2017-09-10 01:00:00.000',NULL,NULL,' Action Area II, Newtown, New Town',NULL,NULL,'2017-09-09 20:00:00.000',NULL,NULL),(10021,934,NULL,'2017-09-21 06:53:56.000','2017-09-21 08:51:57.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2017-09-21 06:53:56.000',NULL,NULL),(10022,935,NULL,'2017-09-21 11:38:17.000','2017-09-21 17:42:40.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-09-21 11:38:17.000',NULL,NULL),(10023,933,NULL,'2017-08-01 01:09:42.000','2017-08-01 10:10:26.000',NULL,NULL,'Rajarhat,Kolkata','Rajarhat,Kolkata',NULL,'2017-08-01 01:09:42.000',NULL,NULL),(10024,933,NULL,'2017-09-25 07:03:41.000','2017-09-25 21:03:41.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-09-25 07:03:41.000',NULL,'Y'),(10025,935,NULL,'2017-09-25 07:10:13.000','2017-09-25 11:52:00.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-09-25 07:10:13.000',NULL,NULL),(10026,939,NULL,'2017-09-25 09:37:37.000','2017-09-25 23:37:37.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-09-25 09:37:37.000',NULL,'Y'),(10027,940,NULL,'2017-09-25 10:09:13.000','2017-09-25 10:10:22.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-09-25 10:09:13.000',NULL,NULL),(10028,941,NULL,'2017-09-25 11:52:33.000','2017-09-25 17:00:00.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-09-25 11:52:33.000',NULL,NULL),(10029,935,NULL,'2017-09-26 05:52:22.000','2017-09-26 10:05:56.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-09-26 05:52:22.000',NULL,NULL),(10030,939,NULL,'2017-09-26 09:25:24.000','2017-09-26 19:48:37.000',NULL,NULL,'No Location Available...','Aliah University Rd, Action Area II, Newtown',NULL,'2017-09-26 09:25:24.000',NULL,NULL),(10031,937,NULL,'2017-09-26 09:44:34.000','2017-09-26 19:49:49.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-09-26 09:44:34.000',NULL,NULL),(10032,934,NULL,'2017-09-26 10:35:18.000','2017-09-26 19:36:36.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-09-26 10:35:18.000',NULL,NULL),(10033,938,NULL,'2017-09-26 10:40:57.000','2017-09-27 00:40:57.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-09-26 10:40:57.000',NULL,'Y'),(10034,942,NULL,'2017-09-26 11:03:01.000','2017-09-27 01:03:01.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-09-26 11:03:01.000',NULL,'Y'),(10035,940,NULL,'2017-09-26 11:07:07.000','2017-09-27 01:07:07.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-09-26 11:07:07.000',NULL,'Y'),(10036,936,NULL,'2017-09-26 21:53:46.000','2017-09-27 11:53:46.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-09-26 11:53:46.000',NULL,'Y'),(10037,933,NULL,'2017-09-26 13:12:16.000','2017-09-26 13:12:32.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2017-09-26 13:12:16.000',NULL,NULL),(10038,933,NULL,'2017-09-27 06:37:30.000','2017-09-27 16:43:57.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-09-27 06:37:30.000',NULL,NULL),(10039,934,NULL,'2017-09-27 07:23:27.000','2017-09-27 17:28:35.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-09-27 07:23:27.000',NULL,NULL),(10040,943,NULL,'2017-09-27 10:14:02.000','2017-09-27 10:22:09.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2017-09-27 10:14:02.000',NULL,NULL),(10041,944,NULL,'2017-09-27 10:19:29.000','2017-09-27 10:22:26.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2017-09-27 10:19:29.000',NULL,NULL),(10042,933,NULL,'2017-10-03 10:17:11.000','2017-10-03 08:08:33.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-03 10:17:11.000',NULL,NULL),(10043,935,NULL,'2017-10-03 10:18:42.000','2017-10-04 00:18:42.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-03 10:18:42.000',NULL,'Y'),(10045,934,NULL,'2017-10-04 05:18:36.000','2017-10-04 15:37:59.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-04 05:18:36.000',NULL,NULL),(10046,935,NULL,'2017-10-05 05:20:31.000','2017-10-05 15:24:32.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-05 05:20:31.000',NULL,NULL),(10047,936,NULL,'2017-10-05 05:58:15.000','2017-10-05 10:28:33.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-05 05:58:15.000',NULL,NULL),(10048,934,NULL,'2017-10-05 08:50:45.000','2017-10-05 08:53:00.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2017-10-05 08:50:45.000',NULL,NULL),(10049,941,NULL,'2017-10-05 09:01:27.000','2017-10-05 23:01:27.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-10-05 09:01:27.000',NULL,'Y'),(10050,1544,NULL,'2017-10-05 09:06:25.000','2017-10-05 13:36:34.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-05 09:06:25.000',NULL,NULL),(10051,942,NULL,'2017-10-05 10:51:24.000','2017-10-06 00:51:24.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-10-05 10:51:24.000',NULL,'Y'),(10052,940,NULL,'2017-10-05 11:13:55.000','2017-10-06 01:13:55.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-10-05 11:13:55.000',NULL,'Y'),(10053,934,NULL,'2017-10-06 10:38:16.000','2017-10-07 00:38:16.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-06 10:38:16.000',NULL,'Y'),(10054,935,NULL,'2017-10-06 11:13:47.000','2017-10-07 01:13:47.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-06 11:13:47.000',NULL,'Y'),(10055,942,NULL,'2017-10-06 14:00:32.000','2017-10-07 04:00:32.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-10-06 14:00:32.000',NULL,'Y'),(10056,934,NULL,'2017-10-09 08:45:29.000','2017-10-10 08:45:29.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-09 08:45:29.000',NULL,'Y'),(10057,933,NULL,'2017-10-09 08:50:12.000','2017-10-09 14:53:17.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-09 08:50:12.000',NULL,NULL),(10058,936,NULL,'2017-10-09 09:33:55.000','2017-10-09 19:05:42.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-09 09:33:55.000',NULL,NULL),(10060,942,NULL,'2017-10-09 10:59:37.000','2017-10-10 10:59:37.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-09 10:59:37.000',NULL,'Y'),(10061,944,NULL,'2017-10-10 06:01:55.000','2017-10-10 16:45:31.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-10 06:01:55.000',NULL,NULL),(10062,942,NULL,'2017-10-10 06:04:51.000','2017-10-10 06:42:56.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-10 06:04:51.000',NULL,NULL),(10063,943,NULL,'2017-10-10 06:05:06.000','2017-10-10 16:44:17.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-10 06:05:06.000',NULL,NULL),(10064,934,NULL,'2017-10-10 07:17:45.000','2017-10-11 07:17:45.000',NULL,NULL,'No Location Available...',NULL,NULL,'2017-10-10 07:17:45.000',NULL,'Y'),(10065,939,NULL,'2017-10-10 07:24:53.000','2017-10-11 07:24:53.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-10 07:24:53.000',NULL,'Y'),(10066,941,NULL,'2017-10-10 07:26:26.000','2017-10-11 07:26:26.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-10 07:26:26.000',NULL,'Y'),(10067,935,NULL,'2017-10-10 07:27:19.000','2017-10-11 07:27:19.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-10 07:27:19.000',NULL,'Y'),(10068,936,NULL,'2017-10-10 07:29:54.000','2017-10-11 07:29:54.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-10 07:29:54.000',NULL,'Y'),(10069,1544,NULL,'2017-10-10 08:11:54.000','2017-10-11 08:11:54.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-10 08:11:54.000',NULL,'Y'),(10070,1544,NULL,'2017-10-10 08:11:54.000','2017-10-11 08:11:54.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-10 08:11:54.000',NULL,'Y'),(10071,1545,NULL,'2017-10-10 08:12:57.000','2017-10-11 08:12:57.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-10 08:12:57.000',NULL,'Y'),(10072,1545,NULL,'2017-10-10 08:12:57.000','2017-10-11 08:12:57.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-10 08:12:57.000',NULL,'Y'),(10073,1547,NULL,'2017-10-10 08:14:49.000','2017-10-11 08:14:49.000',NULL,NULL,'No Location Available...',NULL,NULL,'2017-10-10 08:14:49.000',NULL,'Y'),(10074,1547,NULL,'2017-10-10 08:14:49.000','2017-10-11 08:14:49.000',NULL,NULL,'No Location Available...',NULL,NULL,'2017-10-10 08:14:49.000',NULL,'Y'),(10075,940,NULL,'2017-10-10 11:52:20.000','2017-10-10 11:58:53.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-10 11:52:20.000',NULL,NULL),(10076,936,NULL,'2017-10-12 08:31:09.000','2017-10-12 16:00:09.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-12 08:31:09.000',NULL,NULL),(10077,937,NULL,'2017-10-12 08:31:59.000','2017-10-12 13:02:59.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-12 08:31:59.000',NULL,NULL),(10078,936,NULL,'2017-10-13 05:00:32.000','2017-10-14 05:00:32.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-13 05:00:32.000',NULL,'Y'),(10079,933,NULL,'2017-10-13 05:35:16.000','2017-10-13 15:38:41.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-13 05:35:16.000',NULL,NULL),(10080,937,NULL,'2017-10-18 05:55:53.000','2017-10-18 15:55:53.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-13 05:55:53.000',NULL,NULL),(10081,933,NULL,'2017-10-16 09:34:51.000','2017-10-16 10:08:33.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2017-10-16 09:34:51.000',NULL,NULL),(10082,936,NULL,'2017-10-16 10:10:43.000','2017-10-17 10:10:43.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-10-16 10:10:43.000',NULL,'Y'),(10083,944,NULL,'2017-10-16 11:29:53.000','2017-10-17 11:29:53.000',NULL,NULL,'test',NULL,NULL,'2017-10-16 11:29:53.000',NULL,'Y'),(10084,941,NULL,'2017-10-16 11:29:59.000','2017-10-17 11:29:59.000',NULL,NULL,'test',NULL,NULL,'2017-10-16 11:29:59.000',NULL,'Y'),(10085,937,NULL,'2017-10-16 11:35:25.000','2017-10-16 21:35:25.000',NULL,NULL,'No location',NULL,NULL,'2017-10-16 11:35:25.000',NULL,NULL),(10086,937,NULL,'2017-10-20 05:34:47.000','2017-10-21 05:34:47.000',NULL,NULL,'No Location Available...',NULL,NULL,'2017-10-20 05:34:47.000',NULL,'Y'),(10087,940,NULL,'2017-10-20 05:35:20.000','2017-10-21 05:35:20.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-20 05:35:20.000',NULL,'Y'),(10088,934,NULL,'2017-10-20 05:35:26.000','2017-10-20 10:35:26.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-20 05:35:26.000',NULL,NULL),(10089,942,NULL,'2017-10-20 05:35:33.000','2017-10-21 05:35:33.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-20 05:35:33.000',NULL,'Y'),(10090,943,NULL,'2017-10-20 05:35:41.000','2017-10-21 05:35:41.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-20 05:35:41.000',NULL,'Y'),(10092,939,NULL,'2017-10-20 05:36:01.000','2017-10-21 05:36:01.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-20 05:36:01.000',NULL,'Y'),(10093,944,NULL,'2017-10-20 05:36:24.000','2017-10-21 05:36:24.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-20 05:36:24.000',NULL,'Y'),(10094,941,NULL,'2017-10-20 05:36:35.000','2017-10-21 05:36:35.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-20 05:36:35.000',NULL,'Y'),(10096,933,NULL,'2017-10-20 05:37:09.000','2017-10-21 05:37:09.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-20 05:37:09.000',NULL,'Y'),(10097,936,NULL,'2017-10-04 05:58:15.000','2017-10-04 07:59:33.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-04 05:58:15.000',NULL,NULL),(10098,936,NULL,'2017-10-23 07:21:54.000','2017-10-23 07:23:27.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-23 07:21:54.000',NULL,NULL),(10099,933,NULL,'2017-10-23 10:49:41.000','2017-10-23 10:50:08.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-23 10:49:41.000',NULL,NULL),(10100,937,NULL,'2017-10-24 12:08:35.000','2017-10-24 12:09:26.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-24 12:08:35.000',NULL,NULL),(10101,933,NULL,'2017-10-24 12:08:41.000','2017-10-24 12:09:20.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-24 12:08:41.000',NULL,NULL),(10102,941,NULL,'2017-10-24 12:08:47.000','2017-10-24 22:09:14.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-24 12:08:47.000',NULL,NULL),(10103,935,NULL,'2017-10-25 05:17:00.000','2017-10-25 05:17:56.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-25 05:17:00.000',NULL,NULL),(10104,935,NULL,'2017-10-02 10:18:42.000','2017-10-02 18:18:42.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-02 10:18:42.000',NULL,NULL),(10106,937,NULL,'2017-10-25 12:08:35.000','2017-10-25 16:09:26.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Test',NULL,'2017-10-25 12:08:35.000',NULL,NULL),(10107,939,NULL,'2017-10-25 11:55:26.000','2017-10-25 11:56:13.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-25 11:55:26.000',NULL,NULL),(10110,936,NULL,'2017-10-27 11:31:06.000','2017-10-27 17:56:13.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','test',NULL,'2017-10-27 07:09:48.000',NULL,NULL),(10111,936,NULL,'2017-09-19 07:09:48.000','2017-09-19 17:56:13.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','test',NULL,'2017-09-19 07:09:48.000',NULL,NULL),(10112,935,NULL,'2017-10-27 10:18:42.000','2017-10-27 19:18:42.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-27 10:18:42.000',NULL,NULL),(10113,935,NULL,'2017-10-30 10:18:42.000','2017-10-30 19:18:42.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-30 19:18:42.000',NULL,NULL),(10114,935,NULL,'2017-10-19 07:02:31.000','2017-10-19 08:28:38.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-19 07:02:31.000',NULL,NULL),(10115,936,NULL,'2017-10-28 07:02:31.000','2017-10-28 08:28:38.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2017-10-28 07:02:31.000',NULL,NULL),(10116,935,NULL,'2017-10-18 04:30:00.000','2017-10-18 09:00:00.000',NULL,NULL,NULL,NULL,NULL,'2017-10-18 04:30:00.000',NULL,NULL),(10117,939,NULL,'2017-10-28 05:36:01.000','2017-10-29 08:36:01.000',NULL,NULL,NULL,NULL,NULL,'2017-10-28 05:36:01.000',NULL,NULL),(10119,939,NULL,'2017-11-07 08:59:12.000','2017-11-08 08:59:12.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-07 08:59:12.000',NULL,'Y'),(10120,1571,NULL,'2017-11-07 09:35:23.000','2017-11-07 19:35:23.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-07 09:35:23.000',NULL,NULL),(10121,1574,NULL,'2017-11-07 09:55:15.000','2017-11-07 14:55:15.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-07 09:55:15.000',NULL,NULL),(10122,1574,NULL,'2017-11-07 09:55:15.000','2017-11-08 09:55:15.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-07 09:55:15.000',NULL,'Y'),(10123,1574,NULL,'2017-11-07 09:55:15.000','2017-11-08 09:55:15.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-07 09:55:15.000',NULL,'Y'),(10124,1574,NULL,'2017-11-07 09:55:15.000','2017-11-08 09:55:15.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-07 09:55:15.000',NULL,'Y'),(10125,1574,NULL,'2017-11-07 09:55:15.000','2017-11-08 09:55:15.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-07 09:55:15.000',NULL,'Y'),(10126,1574,NULL,'2017-11-07 09:55:15.000','2017-11-08 09:55:15.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-07 09:55:15.000',NULL,'Y'),(10127,1576,NULL,'2017-11-07 09:56:19.000','2017-11-07 10:59:34.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2017-11-07 09:56:19.000',NULL,NULL),(10128,1576,NULL,'2017-11-07 09:56:19.000','2017-11-08 09:56:19.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-07 09:56:19.000',NULL,'Y'),(10129,1576,NULL,'2017-11-07 09:56:19.000','2017-11-08 09:56:19.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-07 09:56:19.000',NULL,'Y'),(10130,1576,NULL,'2017-11-07 09:56:19.000','2017-11-08 09:56:19.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-07 09:56:19.000',NULL,'Y'),(10132,1574,NULL,'2017-11-04 09:56:19.000','2017-11-04 19:56:19.000',NULL,NULL,NULL,NULL,NULL,'2017-11-04 09:56:19.000',NULL,NULL),(10133,1574,NULL,'2017-11-06 09:56:19.000','2017-11-06 19:56:19.000',NULL,NULL,NULL,NULL,NULL,'2017-11-06 09:56:19.000',NULL,NULL),(10134,1575,NULL,'2017-11-06 09:34:44.000','2017-11-06 19:34:44.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-06 09:34:44.000',NULL,NULL),(10135,939,NULL,'2017-10-07 09:25:24.000','2017-10-07 19:48:37.000',NULL,NULL,NULL,NULL,NULL,'2017-10-07 09:25:24.000',NULL,NULL),(10136,939,NULL,'2017-10-06 09:25:24.000','2017-10-06 19:48:37.000',NULL,NULL,NULL,NULL,NULL,'2017-10-06 09:25:24.000',NULL,NULL),(10137,939,NULL,'2017-10-08 09:25:24.000','2017-10-08 19:48:37.000',NULL,NULL,NULL,NULL,NULL,'2017-10-08 09:25:24.000',NULL,NULL),(10138,939,NULL,'2017-11-09 11:11:06.000','2017-11-10 11:11:06.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-09 11:11:06.000',NULL,'Y'),(10139,937,NULL,'2017-11-09 11:11:25.000','2017-11-10 11:11:25.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-09 11:11:25.000',NULL,'Y'),(10140,942,NULL,'2017-11-09 11:11:42.000','2017-11-10 11:11:42.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-09 11:11:42.000',NULL,'Y'),(10141,944,NULL,'2017-11-09 11:12:01.000','2017-11-10 11:12:01.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-09 11:12:01.000',NULL,'Y'),(10142,1575,NULL,'2017-11-09 11:17:04.000','2017-11-10 11:17:04.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-09 11:17:04.000',NULL,'Y'),(10143,1572,NULL,'2017-11-09 11:23:49.000','2017-11-10 11:23:49.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-09 11:23:49.000',NULL,'Y'),(10144,941,NULL,'2017-11-09 12:20:55.000','2017-11-10 12:20:55.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-11-09 12:20:55.000',NULL,'Y'),(10145,933,NULL,'2017-11-09 12:21:32.000','2017-11-10 12:21:32.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-11-09 12:21:32.000',NULL,'Y'),(10146,1575,NULL,'2017-11-07 11:34:44.000','2017-11-08 11:34:44.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-07 11:34:44.000',NULL,'Y'),(10147,940,NULL,'2017-10-16 11:35:25.000','2017-10-17 11:35:25.000',NULL,NULL,'No location',NULL,NULL,'2017-10-16 11:35:25.000',NULL,'Y'),(10148,935,NULL,'2017-10-20 05:35:51.000','2017-10-21 05:35:51.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-20 05:35:51.000',NULL,'Y'),(10149,936,NULL,'2017-10-20 05:37:01.000','2017-10-21 05:37:01.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-20 05:37:01.000',NULL,'Y'),(10150,935,NULL,'2017-10-26 07:09:48.000','2017-10-27 07:09:48.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-10-26 07:09:48.000',NULL,'Y'),(10151,940,NULL,'2017-11-09 12:23:09.000','2017-11-10 12:23:09.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-09 12:23:09.000',NULL,'Y'),(10152,936,NULL,'2017-11-09 12:23:20.000','2017-11-10 12:23:20.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-09 12:23:20.000',NULL,'Y'),(10153,1571,NULL,'2017-11-10 05:15:04.000','2017-11-11 05:15:04.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-11-10 05:15:04.000',NULL,'Y'),(10154,1577,NULL,'2017-11-10 05:18:25.000','2017-11-11 05:18:25.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-11-10 05:18:25.000',NULL,'Y'),(10155,935,NULL,'2017-11-10 05:42:59.000','2017-11-10 10:53:49.000',NULL,NULL,'Matunga East, Mumbai','Matunga East, Mumbai',NULL,'2017-11-10 05:42:59.000',NULL,NULL),(10156,935,NULL,'2017-11-13 09:32:06.000','2017-11-14 09:32:06.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-11-13 09:32:06.000',NULL,'Y'),(10157,935,NULL,'2017-11-14 08:52:26.000','2017-11-14 11:57:40.000',NULL,NULL,'Matunga East, Mumbai',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-11-14 09:01:06.000',NULL,NULL),(10158,1573,NULL,'2017-11-16 06:31:56.000','2017-11-16 06:50:57.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-11-16 06:31:56.000',NULL,NULL),(10159,933,NULL,'2017-11-16 13:23:50.000','2017-11-16 13:25:55.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2017-11-16 13:23:50.000',NULL,NULL),(10160,1575,NULL,'2017-11-16 09:34:44.000','2017-11-16 19:34:44.000',NULL,NULL,NULL,NULL,NULL,'2017-11-16 09:34:44.000',NULL,NULL),(10161,944,NULL,'2017-11-20 06:18:53.000','2017-11-21 06:18:53.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-11-20 06:18:53.000',NULL,'Y'),(10162,934,NULL,'2017-11-20 08:41:54.000','2017-11-21 08:41:54.000',NULL,NULL,'Hatiyara, Kolkata',NULL,NULL,'2017-11-20 08:41:54.000',NULL,'Y'),(10163,933,NULL,'2017-11-20 08:43:08.000','2017-11-21 08:43:08.000',NULL,NULL,'Hatiyara, Kolkata',NULL,NULL,'2017-11-20 08:43:08.000',NULL,'Y'),(10164,939,NULL,'2017-11-20 12:21:50.000','2017-11-21 12:21:50.000',NULL,NULL,'No Location Available...',NULL,NULL,'2017-11-20 12:21:50.000',NULL,'Y'),(10165,941,NULL,'2017-11-23 07:37:00.000','2017-11-23 12:01:45.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2017-11-23 07:37:00.000',NULL,NULL),(10166,940,NULL,'2017-11-23 09:13:30.000','2017-11-24 09:13:30.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-11-23 09:13:30.000',NULL,'Y'),(10167,933,NULL,'2017-11-23 09:17:36.000','2017-11-24 09:17:36.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-11-23 09:17:36.000',NULL,'Y'),(10168,943,NULL,'2017-11-23 09:25:25.000','2017-11-24 09:25:25.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-11-23 09:25:25.000',NULL,'Y'),(10169,934,NULL,'2017-11-23 11:51:17.000','2017-11-24 11:51:17.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-11-23 11:51:17.000',NULL,'Y'),(10170,935,NULL,'2017-11-24 06:54:34.000','2017-11-25 06:54:34.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-11-24 06:54:34.000',NULL,'Y'),(10171,1050,NULL,'2017-11-20 02:15:04.000','2017-11-21 02:15:04.000',NULL,NULL,'Bengaluru, Karnataka',NULL,NULL,'2017-11-20 02:15:04.000',NULL,'Y'),(10196,935,NULL,'2017-12-06 06:51:58.000','2017-12-07 06:51:58.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-12-06 06:51:58.000',NULL,'Y'),(10197,936,NULL,'2017-12-07 05:52:00.000','2017-12-07 10:02:46.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-12-07 05:52:00.000',NULL,NULL),(10198,937,NULL,'2017-12-06 10:51:51.000','2017-12-07 10:00:41.000',NULL,NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,'2017-12-06 10:51:51.000',NULL,NULL),(10199,937,NULL,'2017-12-07 10:08:00.000','2017-12-07 10:11:24.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-12-07 10:08:00.000',NULL,NULL),(10200,935,NULL,'2017-12-08 06:48:20.000','2017-12-08 07:50:22.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-12-08 06:48:20.000',NULL,NULL),(10201,935,NULL,'2017-12-07 06:48:20.000','2017-12-08 06:48:20.000',NULL,NULL,NULL,NULL,NULL,'2017-12-07 06:48:20.000',NULL,'Y'),(10202,936,NULL,'2017-12-08 11:02:00.000','2017-12-09 11:02:00.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2017-12-08 11:02:00.000',NULL,'Y'),(10203,937,NULL,'2017-12-11 07:47:57.000','2017-12-11 07:56:46.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-12-11 07:47:57.000',NULL,NULL),(10204,936,NULL,'2017-12-13 05:15:32.000','2017-12-13 09:24:20.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-12-13 05:15:32.000',NULL,NULL),(10205,936,NULL,'2017-12-14 04:31:59.000','2017-12-14 05:54:03.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-12-14 04:31:59.000',NULL,NULL),(10206,941,NULL,'2017-12-14 06:16:48.000','2017-12-14 06:52:20.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2017-12-14 06:16:48.000',NULL,NULL),(10207,935,NULL,'2017-12-18 10:13:54.000','2017-12-18 10:20:08.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2017-12-18 10:13:54.000',NULL,NULL),(10208,1572,NULL,'2017-12-22 07:32:42.000','2017-12-22 07:46:34.000',NULL,NULL,'No location','Rajarhat, Kolkata',NULL,'2017-12-22 07:32:42.000',NULL,NULL),(10209,1589,NULL,'2017-12-22 07:41:29.000','2017-12-23 07:41:29.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-12-22 07:41:29.000',NULL,'Y'),(10210,1571,NULL,'2017-12-22 07:32:42.000','2017-12-22 17:32:42.000',NULL,NULL,NULL,NULL,NULL,'2017-12-22 07:32:42.000',NULL,NULL),(10211,1577,NULL,'2017-12-17 07:32:42.000','2017-12-17 17:32:42.000',NULL,NULL,NULL,NULL,NULL,'2017-12-17 07:32:42.000',NULL,NULL),(10212,1622,NULL,'2018-01-02 12:02:11.000','2018-01-02 12:11:33.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-01-02 12:02:11.000',NULL,NULL),(10213,1628,NULL,'2018-01-09 07:12:39.000','2018-01-09 07:32:46.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-01-09 07:12:39.000',NULL,NULL),(10214,1628,NULL,'2018-01-08 03:12:39.000','2018-01-08 13:32:46.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-08 03:12:39.000',NULL,NULL),(10215,1629,NULL,'2018-01-09 09:38:17.000','2018-01-10 06:28:42.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','No Location Available...',NULL,'2018-01-09 09:38:17.000',NULL,NULL),(10216,1629,NULL,'2018-01-10 06:30:48.000','2018-01-10 06:44:34.000',NULL,NULL,'No Location Available...','No Location Available...',NULL,'2018-01-10 06:30:48.000',NULL,NULL),(10217,1633,NULL,'2018-01-10 07:29:09.000','2018-01-11 07:29:09.000',NULL,NULL,'No location',NULL,NULL,'2018-01-10 07:29:09.000',NULL,'Y'),(10218,1633,NULL,'2018-01-07 03:12:39.000','2018-01-07 13:12:39.000',NULL,NULL,NULL,NULL,NULL,'2018-01-07 03:12:39.000',NULL,NULL),(10219,1633,NULL,'2018-01-01 03:12:39.000','2018-01-01 13:12:39.000',NULL,NULL,NULL,NULL,NULL,'2018-01-01 03:12:39.000',NULL,NULL),(10220,1631,NULL,'2018-01-07 03:12:39.000','2018-01-07 13:12:39.000',NULL,NULL,NULL,NULL,NULL,'2018-01-07 03:12:39.000',NULL,NULL),(10221,1631,NULL,'2018-01-01 03:12:39.000','2018-01-01 13:12:39.000',NULL,NULL,NULL,NULL,NULL,'2018-01-01 03:12:39.000',NULL,NULL),(10222,934,NULL,'2018-01-15 10:13:54.000','2018-01-15 20:13:54.000',NULL,NULL,NULL,NULL,NULL,'2018-01-15 10:13:54.000',NULL,NULL),(10223,935,NULL,'2018-01-15 10:13:54.000','2018-01-16 10:13:54.000',NULL,NULL,NULL,NULL,NULL,'2018-01-15 10:13:54.000',NULL,'Y'),(10224,936,NULL,'2018-01-16 05:15:32.000','2018-01-17 05:15:32.000',NULL,NULL,NULL,NULL,NULL,'2018-01-16 05:15:32.000',NULL,'Y'),(10225,939,NULL,'2018-01-16 06:21:50.000','2018-01-16 16:21:50.000',NULL,NULL,NULL,NULL,NULL,'2018-01-16 06:21:50.000',NULL,NULL),(10226,935,NULL,'2018-01-17 07:39:32.000','2018-01-17 13:52:20.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-01-17 07:39:32.000',NULL,NULL),(10227,935,NULL,'2018-01-19 10:38:57.000','2018-01-20 10:38:57.000',NULL,NULL,'No Location Available...',NULL,NULL,'2018-01-19 10:38:57.000',NULL,'Y'),(10228,935,NULL,'2018-01-23 06:52:42.000','2018-01-24 06:52:42.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-23 06:52:42.000',NULL,'Y'),(10229,935,NULL,'2018-01-23 06:52:42.000','2018-01-24 06:52:42.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-23 06:52:42.000',NULL,'Y'),(10230,933,NULL,'2018-01-23 12:00:44.000','2018-01-24 12:00:44.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-23 12:00:44.000',NULL,'Y'),(10231,933,NULL,'2018-01-23 12:00:44.000','2018-01-24 12:00:44.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-23 12:00:44.000',NULL,'Y'),(10232,935,NULL,'2018-01-24 05:45:49.000','2018-01-24 14:04:34.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-01-24 05:45:49.000',NULL,NULL),(10233,935,NULL,'2018-01-24 05:45:49.000','2018-01-25 05:45:49.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-24 05:45:49.000',NULL,'Y'),(10234,936,NULL,'2018-01-24 06:03:27.000','2018-01-24 14:24:09.000',NULL,NULL,'No location','Aliah University Rd, Action Area II, Newtown',NULL,'2018-01-24 06:03:27.000',NULL,NULL),(10235,936,NULL,'2018-01-24 06:03:27.000','2018-01-25 06:03:27.000',NULL,NULL,'No location',NULL,NULL,'2018-01-24 06:03:27.000',NULL,'Y'),(10236,934,NULL,'2018-01-24 06:14:04.000','2018-01-24 06:38:54.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Rajarhat, Kolkata',NULL,'2018-01-24 06:14:04.000',NULL,NULL),(10237,934,NULL,'2018-01-24 06:14:04.000','2018-01-25 06:14:04.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-24 06:14:04.000',NULL,'Y'),(10238,933,NULL,'2018-01-24 06:55:46.000','2018-01-25 06:55:46.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-01-24 06:55:46.000',NULL,'Y'),(10239,933,NULL,'2018-01-24 06:55:46.000','2018-01-25 06:55:46.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-01-24 06:55:46.000',NULL,'Y'),(10240,942,NULL,'2018-01-24 07:09:16.000','2018-01-25 07:09:16.000',NULL,NULL,'No location',NULL,NULL,'2018-01-24 07:09:16.000',NULL,'Y'),(10241,942,NULL,'2018-01-24 07:09:16.000','2018-01-25 07:09:16.000',NULL,NULL,'No location',NULL,NULL,'2018-01-24 07:09:16.000',NULL,'Y'),(10242,951,NULL,'2018-01-24 14:40:56.000','2018-01-25 14:40:56.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-24 14:40:56.000',NULL,'Y'),(10243,951,NULL,'2018-01-24 14:40:56.000','2018-01-25 14:40:56.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-24 14:40:56.000',NULL,'Y'),(10244,937,NULL,'2018-01-24 14:55:39.000','2018-01-24 15:02:47.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-01-24 14:55:39.000',NULL,NULL),(10245,923,NULL,'2018-01-25 07:38:59.000','2018-01-25 09:14:47.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-01-25 07:38:59.000',NULL,NULL),(10246,936,NULL,'2018-01-25 09:23:19.000','2018-01-26 09:23:19.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-25 09:23:19.000',NULL,'Y'),(10247,935,NULL,'2018-01-25 10:14:35.000','2018-01-25 11:02:13.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-01-25 10:14:35.000',NULL,NULL),(10248,938,NULL,'2018-01-25 11:08:41.000','2018-01-26 11:08:41.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-25 11:08:41.000',NULL,'Y'),(10249,1603,NULL,'2018-01-25 14:24:55.000','2018-01-26 14:24:55.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-25 14:24:55.000',NULL,'Y'),(10250,940,NULL,'2018-01-29 07:10:50.000','2018-01-30 07:10:50.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-29 07:10:50.000',NULL,'Y'),(10251,934,NULL,'2018-01-29 07:11:07.000','2018-01-29 15:18:06.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-01-29 07:11:07.000',NULL,NULL),(10252,936,NULL,'2018-01-29 07:11:17.000','2018-01-30 07:11:17.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-29 07:11:17.000',NULL,'Y'),(10253,935,NULL,'2018-01-29 07:11:26.000','2018-01-30 07:11:26.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-29 07:11:26.000',NULL,'Y'),(10254,1628,NULL,'2018-01-29 07:50:44.000','2018-01-30 07:50:44.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-29 07:50:44.000',NULL,'Y'),(10255,1629,NULL,'2018-01-29 07:51:21.000','2018-01-30 07:51:21.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-29 07:51:21.000',NULL,'Y'),(10256,941,NULL,'2018-01-29 10:31:58.000','2018-01-29 11:15:43.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-01-29 10:31:58.000',NULL,NULL),(10257,934,NULL,'2018-01-30 10:57:02.000','2018-01-31 10:57:02.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-30 10:57:02.000',NULL,'Y'),(10258,935,NULL,'2018-01-30 10:57:50.000','2018-01-31 10:57:50.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-30 10:57:50.000',NULL,'Y'),(10259,936,NULL,'2018-01-30 10:58:41.000','2018-01-31 10:58:41.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-30 10:58:41.000',NULL,'Y'),(10260,951,NULL,'2018-01-31 07:46:01.000','2018-02-01 07:46:01.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-31 07:46:01.000',NULL,'Y'),(10261,936,NULL,'2018-01-31 07:58:29.000','2018-01-31 08:23:44.000',NULL,NULL,'No Location Available...',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-01-31 07:58:29.000',NULL,NULL),(10262,935,NULL,'2018-01-31 09:11:41.000','2018-02-01 09:11:41.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-01-31 09:11:41.000',NULL,'Y'),(10263,936,NULL,'2018-02-01 06:55:18.000','2018-02-02 06:55:18.000',NULL,NULL,'No Location Available...',NULL,NULL,'2018-02-01 06:55:18.000',NULL,'Y'),(10264,951,NULL,'2018-02-09 09:08:08.000','2018-02-10 09:08:08.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-02-09 09:08:08.000',NULL,'Y'),(10265,936,NULL,'2018-02-09 13:42:35.000','2018-02-10 13:42:35.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-02-09 13:42:35.000',NULL,'Y'),(10266,923,NULL,'2018-02-12 10:15:50.000','2018-02-13 10:15:50.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-02-12 10:15:50.000',NULL,'Y'),(10267,935,NULL,'2018-02-12 10:18:32.000','2018-02-12 12:51:50.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-02-12 10:18:32.000',NULL,NULL),(10268,936,NULL,'2018-02-12 10:18:39.000','2018-02-13 10:18:39.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-02-12 10:18:39.000',NULL,'Y'),(10269,934,NULL,'2018-02-12 10:18:47.000','2018-02-12 13:11:44.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-02-12 10:18:47.000',NULL,NULL),(10270,940,NULL,'2018-02-12 10:18:55.000','2018-02-13 10:18:55.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-02-12 10:18:55.000',NULL,'Y'),(10271,937,NULL,'2018-02-12 10:19:02.000','2018-02-13 10:19:02.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-02-12 10:19:02.000',NULL,'Y'),(10272,1603,NULL,'2018-02-12 13:06:06.000','2018-02-13 13:06:06.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-02-12 13:06:06.000',NULL,'Y'),(10273,936,NULL,'2018-02-13 06:42:03.000','2018-02-14 06:42:03.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-02-13 06:42:03.000',NULL,'Y'),(10274,935,NULL,'2018-02-13 07:06:24.000','2018-02-14 07:06:24.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-02-13 07:06:24.000',NULL,'Y'),(10275,937,NULL,'2018-02-13 08:39:38.000','2018-02-14 08:39:38.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-02-13 08:39:38.000',NULL,'Y'),(10276,936,NULL,'2018-02-14 08:24:02.000','2018-02-14 09:40:29.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-02-14 08:24:02.000',NULL,NULL),(10277,935,NULL,'2018-02-14 08:24:09.000','2018-02-14 09:40:19.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-02-14 08:24:09.000',NULL,NULL),(10278,934,NULL,'2018-02-14 08:24:17.000','2018-02-15 07:00:26.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-02-14 08:24:17.000',NULL,NULL),(10279,943,NULL,'2018-02-14 08:24:37.000','2018-02-14 10:30:24.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-02-14 08:24:37.000',NULL,NULL),(10280,939,NULL,'2018-02-14 09:54:52.000','2018-02-15 09:54:52.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-02-14 09:54:52.000',NULL,'Y'),(10281,933,NULL,'2018-02-14 14:34:55.000','2018-02-15 06:24:13.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-02-14 14:34:55.000','GMT',NULL),(10282,933,NULL,'2018-02-15 06:51:00.000','2018-02-15 10:44:35.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-02-15 06:51:00.000','GMT',NULL),(10284,934,NULL,'2018-02-14 19:00:26.000','2018-02-15 19:00:26.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-02-15 00:30:26.000','LOCAL','Y'),(10285,934,NULL,'2018-02-16 06:50:40.000','2018-02-17 06:50:40.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-16 06:50:40.000','GMT','Y'),(10286,933,NULL,'2018-02-15 19:01:01.000','2018-02-16 19:01:01.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-16 00:31:01.000','LOCAL','Y'),(10287,939,NULL,'2018-02-16 11:34:19.000','2018-02-17 11:34:19.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-02-16 11:34:19.000','GMT','Y'),(10288,935,NULL,'2018-02-15 18:44:39.000','2018-02-16 12:30:49.000',NULL,NULL,'Rajarhat, Kolkata',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-02-16 00:14:39.000','LOCAL',NULL),(10289,944,NULL,'2018-02-16 13:46:30.000','2018-02-16 18:48:57.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-02-16 13:46:30.000','GMT',NULL),(10290,944,NULL,'2018-02-16 18:57:48.000','2018-02-17 09:07:22.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-02-17 00:27:48.000','LOCAL',NULL),(10291,944,NULL,'2018-02-05 07:24:34.000','2018-02-05 20:31:06.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-02-05 07:24:34.000','GMT',NULL),(10292,944,NULL,'2018-02-05 20:36:20.000','2018-02-06 00:01:47.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-02-06 02:06:20.000','LOCAL',NULL),(10293,944,NULL,'2018-02-03 05:13:50.000','2018-02-03 18:29:59.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-02-03 05:13:50.000','GMT',NULL),(10294,944,NULL,'2018-02-03 23:59:54.000','2018-02-04 23:56:12.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-02-04 05:29:54.000','LOCAL',NULL),(10295,944,NULL,'2018-01-31 18:57:08.000','2018-02-01 18:57:08.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-02-01 00:27:08.000','LOCAL','Y'),(10296,940,NULL,'2018-02-03 18:25:02.000','2018-02-04 18:25:02.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-02-03 18:25:02.000','GMT','Y'),(10297,937,NULL,'2018-02-19 08:06:43.000','2018-02-20 08:06:43.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-02-19 08:06:43.000','GMT','Y'),(10298,944,NULL,'2018-02-19 08:35:56.000','2018-02-19 08:36:06.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-02-19 08:35:56.000','GMT',NULL),(10299,943,NULL,'2018-02-19 09:03:13.000','2018-02-19 09:03:21.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-02-19 09:03:13.000','GMT',NULL),(10300,923,NULL,'2018-02-19 09:49:05.000','2018-02-19 09:51:06.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-02-19 09:49:05.000','GMT',NULL),(10301,943,NULL,'2018-02-20 11:15:19.000','2018-02-20 15:15:42.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-02-20 11:15:19.000','GMT',NULL),(10302,940,NULL,'2018-02-21 07:06:34.000','2018-02-21 15:06:24.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-02-21 07:06:34.000','GMT',NULL),(10303,935,NULL,'2018-02-01 13:48:10.000','2018-02-01 14:26:44.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-02-01 13:48:10.000','GMT',NULL),(10304,933,NULL,'2018-02-22 06:54:03.000','2018-02-22 06:57:30.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-02-22 06:54:03.000','GMT',NULL),(10305,936,NULL,'2018-02-22 07:11:05.000','2018-02-23 07:11:05.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-22 07:11:05.000','GMT','Y'),(10306,951,NULL,'2018-02-22 09:08:24.000','2018-02-23 09:08:24.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-22 09:08:24.000','GMT','Y'),(10307,934,NULL,'2018-02-22 09:48:26.000','2018-02-23 09:48:26.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-22 09:48:26.000','GMT','Y'),(10308,941,NULL,'2018-02-22 12:12:51.000','2018-02-23 12:12:51.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-22 12:12:51.000','GMT','Y'),(10309,937,NULL,'2018-02-22 12:50:47.000','2018-02-23 12:50:47.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-22 12:50:47.000','GMT','Y'),(10310,939,NULL,'2018-02-22 14:18:51.000','2018-02-23 14:18:51.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-22 14:18:51.000','GMT','Y'),(10311,935,NULL,'2018-02-22 14:27:22.000','2018-02-23 14:27:22.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-02-22 14:27:22.000','GMT','Y'),(10312,940,NULL,'2018-02-23 08:28:23.000','2018-02-24 08:28:23.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-02-23 08:28:23.000','GMT','Y'),(10313,923,NULL,'2018-02-23 08:43:15.000','2018-02-24 08:43:15.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-23 08:43:15.000','GMT','Y'),(10314,935,NULL,'2018-02-26 07:06:14.000','2018-02-27 07:06:14.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-26 07:06:14.000','GMT','Y'),(10315,937,NULL,'2018-02-25 23:17:19.000','2018-02-26 23:17:19.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-26 04:47:19.000','LOCAL','Y'),(10316,933,NULL,'2018-02-25 23:17:54.000','2018-02-26 23:17:54.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-26 04:47:54.000','LOCAL','Y'),(10317,939,NULL,'2018-02-25 23:18:17.000','2018-02-26 23:18:17.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-26 04:48:17.000','LOCAL','Y'),(10318,939,NULL,'2018-02-27 06:43:07.000','2018-02-28 06:43:07.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-27 06:43:07.000','GMT','Y'),(10319,935,NULL,'2018-02-27 06:43:18.000','2018-02-28 06:43:18.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-27 06:43:18.000','GMT','Y'),(10320,933,NULL,'2018-02-27 06:43:26.000','2018-02-27 12:08:56.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-02-27 06:43:26.000','GMT',NULL),(10321,937,NULL,'2018-02-27 06:43:34.000','2018-02-28 06:43:34.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-27 06:43:34.000','GMT','Y'),(10322,940,NULL,'2018-02-27 09:06:25.000','2018-02-27 12:08:44.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-02-27 09:06:25.000','GMT',NULL),(10323,942,NULL,'2018-02-27 12:54:40.000','2018-02-28 12:54:40.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-27 12:54:40.000','GMT','Y'),(10324,937,NULL,'2018-02-14 16:46:02.000','2018-02-15 16:46:02.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-14 16:46:02.000','GMT','Y'),(10325,933,NULL,'2018-02-28 12:10:55.000','2018-03-01 12:10:55.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-28 12:10:55.000','GMT','Y'),(10326,935,NULL,'2018-02-28 12:11:07.000','2018-03-01 12:11:07.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-28 12:11:07.000','GMT','Y'),(10327,943,NULL,'2018-02-28 12:11:15.000','2018-03-01 12:11:15.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-28 12:11:15.000','GMT','Y'),(10328,939,NULL,'2018-02-28 12:11:24.000','2018-03-01 12:11:24.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-28 12:11:24.000','GMT','Y'),(10329,937,NULL,'2018-02-28 12:11:32.000','2018-03-01 12:11:32.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-02-28 12:11:32.000','GMT','Y'),(10330,936,NULL,'2018-02-28 12:28:24.000','2018-02-28 12:36:11.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-02-28 12:28:24.000','GMT',NULL),(10331,923,NULL,'2018-03-02 07:45:13.000','2018-03-03 07:45:13.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-02 07:45:13.000','GMT','Y'),(10332,937,NULL,'2018-03-07 11:05:51.000','2018-03-08 11:05:51.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-07 11:05:51.000','GMT','Y'),(10333,941,NULL,'2018-03-07 11:06:16.000','2018-03-08 11:06:16.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-07 11:06:16.000','GMT','Y'),(10334,933,NULL,'2018-03-07 11:06:38.000','2018-03-08 11:06:38.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-07 11:06:38.000','GMT','Y'),(10335,939,NULL,'2018-03-07 11:07:01.000','2018-03-08 11:07:01.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-07 11:07:01.000','GMT','Y'),(10336,943,NULL,'2018-03-07 11:07:12.000','2018-03-08 11:07:12.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-07 11:07:12.000','GMT','Y'),(10337,935,NULL,'2018-03-07 11:07:25.000','2018-03-07 17:46:24.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-07 11:07:25.000','GMT',NULL),(10338,1764,NULL,'2018-03-07 12:32:28.000','2018-03-07 12:41:59.000',NULL,NULL,'No Location Available...',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-07 12:32:28.000','GMT',NULL),(10355,935,NULL,'2018-03-08 13:36:37.000','2018-03-08 13:42:18.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-08 13:36:37.000','GMT',NULL),(10356,935,NULL,'2018-03-09 08:50:34.000','2018-03-09 09:52:05.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-09 08:50:34.000','GMT',NULL),(10357,936,NULL,'2018-03-09 10:02:56.000','2018-03-09 11:23:56.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-09 10:02:56.000','GMT',NULL),(10358,934,NULL,'2018-03-09 11:38:47.000','2018-03-10 11:38:47.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-09 11:38:47.000','GMT','Y'),(10359,937,NULL,'2018-03-09 12:02:02.000','2018-03-09 12:22:04.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-09 12:02:02.000','GMT',NULL),(10360,941,NULL,'2018-03-09 14:11:35.000','2018-03-09 14:15:57.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','No Location Available...',NULL,'2018-03-09 14:11:35.000','GMT',NULL),(10361,944,NULL,'2018-03-09 14:28:05.000','2018-03-10 14:28:05.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-09 14:28:05.000','GMT','Y'),(10362,935,NULL,'2018-03-12 06:39:47.000','2018-03-12 06:48:35.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-12 06:39:47.000','GMT',NULL),(10363,933,NULL,'2018-03-12 12:26:59.000','2018-03-13 12:26:59.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-12 12:26:59.000','GMT','Y'),(10364,941,NULL,'2018-03-14 04:53:54.000','2018-03-14 14:42:35.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-14 04:53:54.000','GMT',NULL),(10365,936,NULL,'2018-03-12 13:20:51.000','2018-03-12 13:31:16.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-12 13:20:51.000','GMT',NULL),(10366,937,NULL,'2018-03-12 13:41:47.000','2018-03-12 13:57:01.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-12 13:41:47.000','GMT',NULL),(10367,941,NULL,'2018-03-12 05:10:40.000','2018-03-12 14:50:16.000',NULL,NULL,'No Location Available...','Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-12 05:10:40.000','GMT',NULL),(10370,934,NULL,'2018-03-13 07:00:17.000','2018-03-13 07:13:41.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-13 07:00:17.000','GMT',NULL),(10371,935,NULL,'2018-03-13 07:21:30.000','2018-03-13 07:26:40.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-13 07:21:30.000','GMT',NULL),(10372,935,NULL,'2018-03-04 11:28:22.000','2018-03-04 17:28:22.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-04 11:28:22.000','GMT',NULL),(10373,943,NULL,'2018-03-14 11:32:43.000','2018-03-14 11:56:57.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-14 11:32:43.000','GMT',NULL),(10374,942,NULL,'2018-03-14 11:32:53.000','2018-03-15 11:32:53.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-14 11:32:53.000','GMT','Y'),(10375,939,NULL,'2018-03-14 11:33:00.000','2018-03-15 11:33:00.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-14 11:33:00.000','GMT','Y'),(10376,936,NULL,'2018-03-14 11:33:17.000','2018-03-15 11:33:17.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-14 11:33:17.000','GMT','Y'),(10377,933,NULL,'2018-03-14 11:33:32.000','2018-03-15 11:33:32.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-14 11:33:32.000','GMT','Y'),(10378,934,NULL,'2018-03-14 11:33:39.000','2018-03-15 11:33:39.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-14 11:33:39.000','GMT','Y'),(10379,937,NULL,'2018-03-14 11:33:45.000','2018-03-15 11:33:45.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-14 11:33:45.000','GMT','Y'),(10380,935,NULL,'2018-03-14 11:33:52.000','2018-03-15 11:33:52.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-14 11:33:52.000','GMT','Y'),(10381,933,NULL,'2018-03-17 10:24:08.000','2018-03-18 10:24:08.000',NULL,NULL,'Dum Dum, Kolkata',NULL,NULL,'2018-03-17 10:24:08.000','GMT','Y'),(10382,934,NULL,'2018-03-17 12:44:43.000','2018-03-17 12:57:37.000',NULL,NULL,'Dum Dum, Kolkata','Dum Dum, Kolkata',NULL,'2018-03-17 12:44:43.000','GMT',NULL),(10383,935,NULL,'2018-03-18 08:50:34.000','2018-03-18 18:50:34.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-18 08:50:34.000','GMT',NULL),(10384,934,NULL,'2018-03-20 04:00:17.000','2018-03-20 14:00:17.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-03-20 04:00:17.000',NULL,NULL),(10385,935,NULL,'2018-03-22 10:30:37.000','2018-03-23 10:30:37.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-03-22 10:30:37.000','GMT','Y'),(10386,923,NULL,'2018-03-26 12:50:41.000','2018-03-27 12:50:41.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-26 12:50:41.000','GMT','Y'),(10387,935,NULL,'2018-03-27 06:12:21.000','2018-03-27 07:23:07.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-03-27 06:12:21.000','GMT',NULL),(10388,933,NULL,'2018-03-27 06:12:41.000','2018-03-27 07:36:56.000',NULL,NULL,'Rajarhat, Kolkata','Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-27 06:12:41.000','GMT',NULL),(10389,937,NULL,'2018-03-27 06:12:52.000','2018-03-27 07:40:22.000',NULL,NULL,'Rajarhat, Kolkata',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-27 06:12:52.000','GMT',NULL),(10390,936,NULL,'2018-03-27 10:21:42.000','2018-03-28 10:21:42.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-27 10:21:42.000','GMT','Y'),(10391,935,NULL,'2018-03-28 11:55:32.000','2018-03-29 11:55:32.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-03-28 11:55:32.000','GMT','Y'),(10392,936,NULL,'2018-03-28 11:57:19.000','2018-03-28 12:01:49.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-28 11:57:19.000','GMT',NULL),(10393,934,NULL,'2018-03-28 12:06:42.000','2018-03-28 12:15:59.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-28 12:06:42.000','GMT',NULL),(10394,933,NULL,'2018-03-28 12:17:35.000','2018-03-28 12:32:51.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-28 12:17:35.000','GMT',NULL),(10395,937,NULL,'2018-03-28 12:34:01.000','2018-03-28 13:19:00.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-28 12:34:01.000','GMT',NULL),(10396,935,NULL,'2018-03-29 06:24:35.000','2018-03-29 06:47:53.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-03-29 06:24:35.000','GMT',NULL),(10397,935,NULL,'2018-03-30 08:01:38.000','2018-03-30 09:00:06.000',NULL,NULL,'Rajarhat, Kolkata',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-30 08:01:38.000','GMT',NULL),(10398,934,NULL,'2018-03-30 08:51:21.000','2018-03-30 10:45:32.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-03-30 08:51:21.000','GMT',NULL),(10399,935,NULL,'2018-04-02 07:09:53.000','2018-04-02 12:41:40.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-04-02 07:09:53.000','GMT',NULL),(10400,936,NULL,'2018-04-02 07:24:28.000','2018-04-02 12:43:19.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-04-02 07:24:28.000','GMT',NULL),(10401,937,NULL,'2018-04-02 07:27:42.000','2018-04-03 07:27:42.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-04-02 07:27:42.000','GMT','Y'),(10402,943,NULL,'2018-04-02 07:42:42.000','2018-04-03 07:42:42.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-04-02 07:42:42.000','GMT','Y'),(10403,934,NULL,'2018-04-02 12:43:53.000','2018-04-02 13:16:13.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-04-02 12:43:53.000','GMT',NULL),(10404,941,NULL,'2018-04-02 13:17:56.000','2018-04-02 13:33:58.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-04-02 13:17:56.000','GMT',NULL),(10405,941,NULL,'2018-04-03 11:11:23.000','2018-04-03 11:16:34.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-03 11:11:23.000','GMT',NULL),(10406,935,NULL,'2018-04-05 06:22:33.000','2018-04-05 06:32:20.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-05 06:22:33.000','GMT',NULL),(10407,951,NULL,'2018-04-05 06:50:18.000','2018-04-06 06:50:18.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-04-05 06:50:18.000','GMT','Y'),(10408,935,NULL,'2018-04-01 05:18:32.000','2018-04-01 15:18:32.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-01 05:18:32.000','GMT',NULL),(10409,935,NULL,'2018-04-04 05:18:32.000','2018-04-04 15:18:32.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-04 15:18:32.000',NULL,NULL),(10410,1805,NULL,'2018-04-05 10:50:19.000','2018-04-05 11:00:14.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-05 10:50:19.000','GMT',NULL),(10411,934,NULL,'2018-04-05 11:18:07.000','2018-04-05 11:21:16.000',NULL,NULL,'No Location Available...',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-05 11:18:07.000','GMT',NULL),(10412,1810,NULL,'2018-04-05 12:21:41.000','2018-04-06 12:21:41.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-04-05 12:21:41.000','GMT','Y'),(10413,936,NULL,'2018-04-05 12:39:13.000','2018-04-05 12:45:39.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-04-05 12:39:13.000','GMT',NULL),(10414,935,NULL,'2018-04-06 12:00:57.000','2018-04-06 13:00:30.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-06 12:00:57.000','GMT',NULL),(10415,935,NULL,'2018-04-09 04:52:21.000','2018-04-09 14:36:26.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Rajarhat, Kolkata',NULL,'2018-04-09 04:52:21.000','GMT',NULL),(10416,934,NULL,'2018-04-09 10:24:50.000','2018-04-09 10:28:38.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-09 10:24:50.000','GMT',NULL),(10417,936,NULL,'2018-04-09 10:53:02.000','2018-04-09 10:53:37.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-09 10:53:02.000','GMT',NULL),(10418,944,NULL,'2018-04-09 14:40:58.000','2018-04-09 14:43:24.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-04-09 14:40:58.000','GMT',NULL),(10419,935,NULL,'2018-04-10 07:12:26.000','2018-04-10 07:17:58.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-04-10 07:12:26.000','GMT',NULL),(10420,935,NULL,'2018-04-03 12:00:57.000','2018-04-03 15:00:57.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-04-03 12:00:57.000','GMT',NULL),(10421,935,NULL,'2018-04-07 05:30:00.000','2018-04-07 15:30:58.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-04-07 05:30:00.000',NULL,NULL),(10422,935,NULL,'2018-03-24 04:52:21.000','2018-03-24 13:52:21.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-03-24 04:52:21.000','GMT',NULL),(10423,935,NULL,'2018-03-25 05:56:21.000','2018-03-25 15:52:21.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-03-25 05:56:21.000','GMT',NULL),(10424,935,NULL,'2018-03-25 05:56:21.000','2018-03-25 15:52:21.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-03-25 05:56:21.000','GMT',NULL),(10425,935,NULL,'2018-01-22 05:30:00.000','2018-01-22 15:00:00.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-01-22 05:30:00.000','GMT',NULL),(10426,935,NULL,'2018-01-20 05:30:00.000','2018-01-20 15:00:00.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-01-20 05:30:00.000','GMT',NULL),(10427,935,NULL,'2018-04-08 15:30:00.000','2018-04-08 17:30:00.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-04-08 15:30:00.000','GMT',NULL),(10428,935,NULL,'2018-03-31 15:00:00.000','2018-03-31 16:30:00.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-03-31 15:00:00.000','GMT',NULL),(10429,935,NULL,'2018-03-20 05:30:00.000','2018-03-20 15:00:00.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-03-20 05:30:00.000',NULL,NULL),(10430,951,NULL,'2018-04-08 12:00:18.000','2018-04-08 22:00:18.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-08 12:00:18.000','GMT',NULL),(10431,935,NULL,'2018-03-17 05:00:00.000','2018-03-17 07:00:00.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-03-17 05:00:00.000','GMT',NULL),(10432,936,NULL,'2018-04-11 10:29:43.000','2018-04-11 10:44:15.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-11 10:29:43.000','GMT',NULL),(10433,935,NULL,'2018-04-11 11:10:15.000','2018-04-12 11:10:15.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-04-11 11:10:15.000','GMT','Y'),(10434,936,NULL,'2018-04-10 03:33:46.000','2018-04-10 03:39:14.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-10 03:33:46.000','GMT',NULL),(10435,936,NULL,'2018-04-08 04:19:46.000','2018-04-08 04:25:21.000',NULL,NULL,'No Location Available...',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-08 04:19:46.000','GMT',NULL),(10436,937,NULL,'2018-04-10 12:32:22.000','2018-04-10 12:36:36.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-10 12:32:22.000','GMT',NULL),(10437,933,NULL,'2018-04-10 13:02:53.000','2018-04-10 13:19:09.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','No Location Available...',NULL,'2018-04-10 13:02:53.000','GMT',NULL),(10438,934,NULL,'2018-04-10 13:24:40.000','2018-04-11 13:24:40.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-04-10 13:24:40.000','GMT','Y'),(10439,939,NULL,'2018-04-10 03:30:53.000','2018-04-10 13:32:05.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-10 03:30:53.000','GMT',NULL),(10440,940,NULL,'2018-04-10 03:47:07.000','2018-04-11 03:47:07.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-04-10 03:47:07.000','GMT','Y'),(10441,1820,NULL,'2018-04-12 00:15:25.000','2018-04-12 17:50:27.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-12 00:15:25.000','GMT',NULL),(10442,1820,NULL,'2018-04-13 07:57:34.000','2018-04-14 03:42:15.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-13 07:57:34.000','GMT',NULL),(10443,1820,NULL,'2018-04-10 00:32:49.000','2018-04-10 17:34:09.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-10 00:32:49.000','GMT',NULL),(10444,1820,NULL,'2018-04-03 00:36:49.000','2018-04-03 15:29:44.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-03 00:36:49.000','GMT',NULL),(10445,941,NULL,'2018-04-10 04:53:54.000','2018-04-10 14:53:54.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-10 04:53:54.000','GMT',NULL),(10446,941,NULL,'2018-04-09 04:53:54.000','2018-04-09 14:53:54.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','No Location Available...',NULL,'2018-04-09 04:53:54.000','GMT',NULL),(10447,941,NULL,'2018-04-05 19:50:01.000','2018-04-06 19:50:01.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-04-06 01:20:01.000','LOCAL','Y'),(10448,941,NULL,'2018-04-13 06:14:11.000','2018-04-13 07:38:06.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-13 06:14:11.000','GMT',NULL),(10449,941,NULL,'2018-04-12 06:21:08.000','2018-04-12 16:30:16.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-12 06:21:08.000','GMT',NULL),(10450,934,NULL,'2018-04-12 04:38:10.000','2018-04-13 04:38:10.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-04-12 04:38:10.000','GMT','Y'),(10451,937,NULL,'2018-04-13 07:42:05.000','2018-04-13 07:46:59.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-13 07:42:05.000','GMT',NULL),(10452,1820,NULL,'2018-04-04 00:17:36.000','2018-04-04 20:09:22.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-04 00:17:36.000','GMT',NULL),(10453,933,NULL,'2018-04-12 03:33:46.000','2018-04-12 10:36:53.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','No Location Available...',NULL,'2018-04-12 03:33:46.000','GMT',NULL),(10454,936,NULL,'2018-04-12 03:30:42.000','2018-04-12 14:32:27.000',NULL,NULL,'No Location Available...','No Location Available...',NULL,'2018-04-12 03:30:42.000','GMT',NULL),(10455,935,NULL,'2018-04-13 03:31:12.000','2018-04-13 14:35:43.000',NULL,NULL,'No Location Available...',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-13 03:31:12.000','GMT',NULL),(10456,939,NULL,'2018-04-13 03:32:56.000','2018-04-13 10:34:34.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','No Location Available...',NULL,'2018-04-13 03:32:56.000','GMT',NULL),(10457,934,NULL,'2018-04-13 03:31:40.000','2018-04-14 03:31:40.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-04-13 03:31:40.000','GMT','Y'),(10458,937,NULL,'2018-04-14 03:31:19.000','2018-04-14 10:30:17.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-14 03:31:19.000','GMT',NULL),(10459,935,NULL,'2018-04-16 07:22:05.000','2018-04-16 07:24:55.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-04-16 07:22:05.000','GMT',NULL),(10460,941,NULL,'2018-04-16 07:32:04.000','2018-04-16 07:34:42.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-04-16 07:32:04.000','GMT',NULL),(10461,933,NULL,'2018-04-17 07:53:55.000','2018-04-17 08:04:19.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-17 07:53:55.000','GMT',NULL),(10462,935,NULL,'2018-04-19 09:33:39.000','2018-04-19 09:38:05.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-19 09:33:39.000','GMT',NULL),(10463,936,NULL,'2018-04-19 10:34:02.000','2018-04-19 10:36:48.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-19 10:34:02.000','GMT',NULL),(10464,951,NULL,'2018-04-19 11:21:53.000','2018-04-20 11:21:53.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-04-19 11:21:53.000','GMT','Y'),(10465,935,NULL,'2018-04-20 10:06:52.000','2018-04-20 22:30:14.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-20 10:06:52.000','GMT',NULL),(10466,935,NULL,'2018-04-20 22:58:54.000','2018-04-21 22:58:54.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-04-21 04:28:54.000','LOCAL','Y'),(10467,936,NULL,'2018-04-20 23:06:14.000','2018-04-21 23:06:14.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-04-21 04:36:14.000','LOCAL','Y'),(10468,936,NULL,'2018-04-20 03:30:15.000','2018-04-20 10:40:59.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-20 03:30:15.000','GMT',NULL),(10469,935,NULL,'2018-04-23 07:06:59.000','2018-04-23 09:37:56.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-23 07:06:59.000','GMT',NULL),(10470,1626,NULL,'2018-04-23 09:50:44.000','2018-04-23 17:30:30.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-23 09:50:44.000','GMT',NULL),(10471,935,NULL,'2018-03-03 10:04:35.000','2018-03-03 15:14:21.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-03-03 10:04:35.000','GMT',NULL),(10472,1628,NULL,'2018-04-23 17:43:19.000','2018-04-24 00:45:18.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-23 17:43:19.000','GMT',NULL),(10473,935,NULL,'2018-04-17 06:01:15.000','2018-04-17 07:05:24.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-17 06:01:15.000','GMT',NULL),(10474,935,NULL,'2018-04-18 03:07:18.000','2018-04-19 03:07:18.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-04-18 03:07:18.000','GMT','Y'),(10475,935,NULL,'2018-04-25 07:22:31.000','2018-04-25 08:55:10.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-25 07:22:31.000','GMT',NULL),(10476,939,NULL,'2018-04-25 05:46:42.000','2018-04-25 14:07:21.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-25 05:46:42.000','GMT',NULL),(10477,942,NULL,'2018-04-25 05:02:35.000','2018-04-25 12:02:25.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-25 05:02:35.000','GMT',NULL),(10478,939,NULL,'2018-04-26 05:05:37.000','2018-04-26 14:25:15.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-26 05:05:37.000','GMT',NULL),(10479,942,NULL,'2018-04-26 06:28:32.000','2018-04-26 13:30:09.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-26 06:28:32.000','GMT',NULL),(10480,936,NULL,'2018-04-26 06:27:07.000','2018-04-26 13:30:10.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-26 06:27:07.000','GMT',NULL),(10481,935,NULL,'2018-04-26 06:29:11.000','2018-04-26 13:59:10.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-26 06:29:11.000','GMT',NULL),(10482,934,NULL,'2018-04-26 05:04:38.000','2018-04-26 15:15:13.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-26 05:04:38.000','GMT',NULL),(10483,941,NULL,'2018-04-26 11:35:07.000','2018-04-26 15:30:12.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-26 11:35:07.000','GMT',NULL),(10484,944,NULL,'2018-04-26 05:32:24.000','2018-04-26 09:36:16.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-04-26 05:32:24.000','GMT',NULL),(10485,934,NULL,'2018-05-02 08:32:39.000','2018-05-03 08:32:39.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-05-02 08:32:39.000','GMT','Y'),(10486,1831,NULL,'2018-05-04 06:08:00.000','2018-05-04 07:22:16.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-05-04 06:08:00.000','GMT',NULL),(10487,939,NULL,'2018-05-04 06:09:18.000','2018-05-04 07:02:16.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-05-04 06:09:18.000','GMT',NULL),(10488,942,NULL,'2018-05-04 06:11:31.000','2018-05-04 07:02:45.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-05-04 06:11:31.000','GMT',NULL),(10489,933,NULL,'2018-05-08 07:01:22.000','2018-05-09 07:01:22.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-05-08 07:01:22.000','GMT','Y'),(10490,935,NULL,'2018-05-18 12:54:16.000','2018-05-19 12:54:16.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-05-18 12:54:16.000','GMT','Y'),(10491,935,NULL,'2018-05-17 04:55:41.000','2018-05-17 15:10:06.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-05-17 04:55:41.000','GMT',NULL),(10492,941,NULL,'2018-05-25 10:26:53.000','2018-05-26 10:26:53.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',NULL,NULL,'2018-05-25 10:26:53.000','GMT','Y'),(10493,941,NULL,'2018-05-21 05:10:28.000','2018-05-21 14:31:14.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-05-21 05:10:28.000','GMT',NULL),(10494,935,NULL,'2018-05-28 11:39:41.000','2018-05-29 11:39:41.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-05-28 11:39:41.000','GMT','Y'),(10495,934,NULL,'2018-05-31 07:15:21.000','2018-05-31 07:39:05.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-05-31 07:15:21.000','GMT',NULL),(10496,941,NULL,'2018-05-31 10:21:22.000','2018-06-01 10:21:22.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Rajarhat, Kolkata',NULL,'2018-05-31 10:21:22.000','GMT','Y'),(10497,935,NULL,'2018-05-31 10:36:03.000','2018-05-31 16:45:14.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-05-31 14:36:03.000','GMT',NULL),(10498,934,NULL,'2018-05-30 05:00:26.000','2018-05-30 14:32:42.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-05-30 05:00:26.000','GMT',NULL),(10499,936,NULL,'2018-05-31 05:00:26.000','2018-05-31 14:35:12.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-05-31 05:00:26.000','GMT',NULL),(10500,937,NULL,'2018-05-31 05:00:18.000','2018-05-31 14:35:12.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-05-31 05:00:18.000','GMT',NULL),(10501,933,NULL,'2018-05-31 05:00:14.000','2018-05-31 12:32:37.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-05-31 05:00:14.000','GMT',NULL),(10502,936,NULL,'2018-06-04 05:30:18.000','2018-06-04 08:30:39.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-06-04 05:30:18.000','GMT',NULL),(10503,1844,NULL,'2018-06-06 07:56:01.000','2018-06-06 07:57:26.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-06-06 07:56:01.000','GMT',NULL),(10504,1844,NULL,'2018-06-04 06:15:05.000','2018-06-04 15:20:22.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-06-04 06:15:05.000','GMT',NULL),(10505,1844,NULL,'2018-06-03 05:31:08.000','2018-06-03 07:31:36.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-06-03 05:31:08.000','GMT',NULL),(10506,937,NULL,'2018-06-06 08:48:06.000','2018-06-06 18:05:12.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-06-06 08:48:06.000','GMT',NULL),(10507,935,NULL,'2018-06-07 07:30:21.000','2018-06-07 20:00:23.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-06-07 07:30:21.000','GMT',NULL),(10509,936,NULL,'2018-06-06 06:55:36.000','2018-06-07 00:57:57.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown',' Aliah University Rd, Action Area II, Newtown',NULL,'2018-06-06 06:55:36.000','GMT',NULL),(10510,937,NULL,'2018-06-06 19:01:16.000','2018-06-07 03:05:22.000',NULL,NULL,' Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-06-07 00:31:16.000','LOCAL',NULL),(10511,935,NULL,'2018-06-06 17:00:30.000','2018-06-06 17:25:49.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-06-06 17:00:30.000','GMT',NULL),(10512,941,NULL,'2018-06-09 19:05:46.000','2018-06-10 03:06:11.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-06-10 00:35:46.000','LOCAL',NULL),(10513,936,NULL,'2018-06-19 05:00:00.000','2018-06-20 05:00:00.000',NULL,NULL,'Rajarhat, Kolkata','',NULL,'2018-06-19 05:00:00.000','GMT','Y'),(10514,934,NULL,'2018-06-19 08:11:59.000','2018-06-20 08:11:59.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-06-19 08:11:59.000','GMT','Y'),(10515,934,NULL,'2018-06-17 06:19:58.000','2018-06-17 16:20:37.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-06-17 06:19:58.000','GMT',NULL),(10516,934,NULL,'2018-06-20 08:29:49.000','2018-06-20 09:31:03.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-06-20 08:29:49.000','GMT',NULL),(10517,934,NULL,'2017-12-31 08:56:34.000','2018-01-01 08:56:34.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-12-31 08:56:34.000','GMT','Y'),(10518,934,NULL,'2017-12-30 08:57:07.000','2017-12-31 08:57:07.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2017-12-30 08:57:07.000','GMT','Y'),(10519,937,NULL,'2018-06-19 09:18:46.000','2018-06-20 09:18:46.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-06-19 09:18:46.000','GMT','Y'),(10520,939,NULL,'2018-06-20 14:27:59.000','2018-06-21 14:27:59.000',NULL,NULL,'Rajarhat, Kolkata',NULL,NULL,'2018-06-20 14:27:59.000','GMT','Y'),(10521,934,NULL,'2018-06-21 10:52:06.000','2018-06-21 10:52:20.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-06-21 10:52:06.000','GMT',NULL),(10522,943,NULL,'2018-06-21 06:39:35.000','2018-06-21 10:08:46.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-06-21 06:39:35.000','GMT',NULL),(10523,943,NULL,'2018-06-20 07:10:37.000','2018-06-20 12:11:05.000',NULL,NULL,'Rajarhat, Kolkata','Rajarhat, Kolkata',NULL,'2018-06-20 07:10:37.000','GMT',NULL),(10524,942,NULL,'2018-06-28 06:59:21.000','2018-06-28 07:00:33.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Aliah University Rd, Action Area II, Newtown',NULL,'2018-06-28 06:59:21.000','GMT',NULL),(10525,933,NULL,'2018-06-28 09:32:49.000','2018-06-28 10:53:35.000',NULL,NULL,'ICICI BANK','Nexval Ecospace',NULL,'2018-06-28 09:32:49.000','GMT',NULL),(10526,923,NULL,'2018-06-28 12:37:51.000','2018-06-28 12:43:30.000',NULL,NULL,'1b Aliah University Road, Chakpachuria, Newtown','1b Aliah University Road, Chakpachuria, Newtown',NULL,'2018-06-28 12:37:51.000','GMT',NULL),(10527,923,NULL,'2018-06-29 06:24:35.000','2018-06-29 08:00:53.000',NULL,NULL,'1b Aliah University Road, Chakpachuria, Newtown','Nexval testing',NULL,'2018-06-29 06:24:35.000','GMT',NULL),(10528,942,NULL,'2018-06-29 14:09:26.000','2018-06-29 14:13:25.000',NULL,NULL,'Icici','314, Street Number 314, Action Area I, Newtown, New Town, West Bengal 700156, India',NULL,'2018-06-29 14:09:26.000','GMT',NULL),(10529,934,NULL,'2018-07-02 09:27:16.000','2018-07-02 10:00:35.000',NULL,NULL,'Nexval Test','Nexval Test',NULL,'2018-07-02 09:27:16.000','GMT',NULL),(10530,923,NULL,'2018-07-02 11:49:29.000','2018-07-02 12:25:03.000',NULL,NULL,'Nexval','road1',NULL,'2018-07-02 11:49:29.000','GMT',NULL),(10531,935,NULL,'2018-07-03 09:00:03.000','2018-07-04 09:00:03.000',NULL,NULL,'Nexval final address',NULL,NULL,'2018-07-03 09:00:03.000','GMT','Y'),(10532,935,NULL,'2018-07-02 09:26:53.000','2018-07-03 09:26:53.000',NULL,NULL,'tcs gp road',NULL,NULL,'2018-07-02 09:26:53.000','GMT','Y'),(10533,934,NULL,'2018-07-03 13:05:01.000','2018-07-03 13:44:18.000',NULL,NULL,'Nexval 456','Test Cd',NULL,'2018-07-03 13:05:01.000','GMT',NULL),(10534,923,NULL,'2018-07-04 07:50:34.000','2018-07-04 13:36:20.000',NULL,NULL,'Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat','Ambuja',NULL,'2018-07-04 07:50:34.000','GMT',NULL),(10535,934,NULL,'2018-07-04 13:57:49.000','2018-07-05 13:57:34.000',NULL,NULL,'Eden Court,Plot No. 2, G/1, Action Area II','Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat',NULL,'2018-07-04 13:57:49.000','GMT',NULL),(10536,935,NULL,'2018-07-05 10:11:01.000','2018-07-06 10:11:01.000',NULL,NULL,'Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat',NULL,NULL,'2018-07-05 10:11:01.000','GMT','Y'),(10537,939,NULL,'2018-07-05 10:36:00.000','2018-07-05 10:41:12.000',NULL,NULL,'1b Aliah University Road, Chakpachuria, Newtown','Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat',NULL,'2018-07-05 10:36:00.000','GMT',NULL),(10538,944,NULL,'2018-07-05 10:43:32.000','2018-07-05 10:48:36.000',NULL,NULL,'1b Aliah University Road, Chakpachuria, Newtown','1b Aliah University Road, Chakpachuria, Newtown',NULL,'2018-07-05 10:43:32.000','GMT',NULL),(10539,941,NULL,'2018-07-05 11:01:58.000','2018-07-05 13:56:17.000',NULL,NULL,'Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat','Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat',NULL,'2018-07-05 11:01:58.000','GMT',NULL),(10540,934,NULL,'2018-07-05 14:00:37.000','2018-07-06 07:24:56.000',NULL,NULL,'1b Aliah University Road, Chakpachuria, Newtown','Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat',NULL,'2018-07-05 14:00:37.000','GMT',NULL),(10541,923,NULL,'2018-07-06 06:57:19.000','2018-07-06 11:10:50.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','22.585550,88.490473',NULL,'2018-07-06 06:57:19.000','GMT',NULL),(10542,934,NULL,'2018-07-06 07:26:17.000','2018-07-06 12:37:00.000',NULL,NULL,'Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat','Aliah University Rd, Action Area II, Newtown',NULL,'2018-07-06 07:26:17.000','GMT',NULL),(10543,935,NULL,'2018-07-06 10:50:20.000','2018-07-06 10:52:13.000',NULL,NULL,'Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat','22.585460,88.490401',NULL,'2018-07-06 10:50:20.000','GMT',NULL),(10544,937,NULL,'2018-07-06 10:54:26.000','2018-07-06 10:56:11.000',NULL,NULL,'Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat','Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat',NULL,'2018-07-06 10:54:26.000','GMT',NULL),(10545,944,NULL,'2018-07-06 11:25:31.000','2018-07-06 14:36:43.000',NULL,NULL,'Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat','Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat',NULL,'2018-07-06 11:25:31.000','GMT',NULL),(10546,936,NULL,'2018-07-06 13:25:22.000','2018-07-07 13:25:22.000',NULL,NULL,'Ambuja',NULL,NULL,'2018-07-06 13:25:22.000','GMT','Y'),(10547,923,NULL,'2018-07-09 10:46:34.000','2018-07-10 10:46:34.000',NULL,NULL,'McKinsey & Company,1 Jermyn St, St. James\'s, London SW1Y 4UH',NULL,NULL,'2018-07-09 10:46:34.000','GMT','Y'),(10548,936,NULL,'2018-07-09 11:56:52.000','2018-07-09 15:52:25.000',NULL,NULL,'Aliah University Rd, Action Area II, Newtown','Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat',NULL,'2018-07-09 11:56:52.000','GMT',NULL),(10549,1628,NULL,'2018-07-09 14:41:19.000','2018-07-09 14:42:08.000',NULL,NULL,'Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat','Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat',NULL,'2018-07-09 14:41:19.000','GMT',NULL),(10550,933,NULL,'2018-07-09 16:19:37.000','2018-07-09 17:02:29.000',NULL,NULL,'Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat','Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat',NULL,'2018-07-09 16:19:37.000','GMT',NULL),(10551,935,NULL,'2018-07-09 16:21:07.000','2018-07-09 17:03:28.000',NULL,NULL,'Finding Location...','Aliah University Rd, Action Area II, Newtown',NULL,'2018-07-09 16:21:07.000','GMT',NULL),(10552,1630,NULL,'2018-07-22 07:13:34.000','2018-07-22 16:32:19.000',NULL,NULL,'Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat','Ecospace Business Park,Ecospace Business Park Premises, Action Area II, Rajarhat',NULL,'2018-07-22 07:13:34.000','GMT',NULL);
/*!40000 ALTER TABLE `attendance` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping routines for database 'nexat_uat'
--
/*!50003 DROP FUNCTION IF EXISTS `stringSplit` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `stringSplit`(
	x TEXT,
	delim VARCHAR(12),
	pos INT
) RETURNS varchar(255) CHARSET latin1
RETURN REPLACE(SUBSTRING(SUBSTRING_INDEX(x, delim, pos),
LENGTH(SUBSTRING_INDEX(x, delim, pos -1)) + 1), delim, '') ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `substrCount` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `substrCount`(s TEXT, ss TEXT) RETURNS int(5) unsigned
    READS SQL DATA
BEGIN
	DECLARE count INT(5) UNSIGNED;
	DECLARE offset INT(5) UNSIGNED;
	DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET s = NULL;
	SET count = 0;
	SET offset = 1;
	REPEAT
	IF NOT ISNULL(s) AND offset > 0 THEN
	SET offset = LOCATE(ss, s, offset);
	IF offset > 0 THEN
	SET count = count + 1;
	SET offset = offset + 1;
	END IF;
	END IF;
	UNTIL ISNULL(s) OR offset = 0 END REPEAT;
	RETURN count;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `new_Show_Notifications` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `new_Show_Notifications`(
	IN	pUserID int(11),
	IN  pDeptID text,
    IN  pOnDate date
)
BEGIN
	DECLARE DeptMngUserID,SupervisorApprovalCount,EarlycheckoutApprovalCount,VisitorcheckoutApprovalCount,
    PendingLeaveCount,AppliedCmofCount,OdCount INT;
    
	SELECT group_concat(DM.DeptManagerID) INTO DeptMngUserID from deptmanager DM where DM.DeptID IN (pDeptID);

	/*Get all hierarchy sub department ids*/
	CALL nex_GetDeptTree(pDeptID,@AllHrcyDept);
	CREATE TEMPORARY TABLE temp_AllDept
	SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
	  FROM (select @AllHrcyDept as Dept_Id) t CROSS JOIN
	  (
	   SELECT a.N + b.N * 10 + 1 n
		 FROM
		(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
	   ,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
		ORDER BY n
	   ) n
	WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));


	select count(SAPV.SupervisorApprvID) INTO SupervisorApprovalCount
	from supervisorapproval SAPV
	LEFT JOIN userpersonalinfo UP ON SAPV.UserID = UP.UserID
	where SAPV.RequestStatus = 'Applied' and SAPV.SupervisorID = pUserID;

	select count(ECOA.EarlyCheckoutApprvID) INTO EarlycheckoutApprovalCount
	from earlycheckoutapproval ECOA
	LEFT JOIN attendance A ON ECOA.AttendanceID = A.AttendanceID
	LEFT JOIN userpersonalinfo UP ON ECOA.UserID = UP.UserID
	where ECOA.SupervisorUserID = pUserID and ECOA.RequestStatus = 'Applied';

	select count(VA.VisitorAttendanceID) INTO VisitorcheckoutApprovalCount
	from visitorattendance VA
	where VA.MeetToUserID = pUserID and VA.VisitAttenStatus IN ('CheckedIn','CheckedOut-NotVarified');

	SELECT count(LA.LeavAppID) INTO PendingLeaveCount
	FROM leaveapplied LA
	LEFT JOIN leaveappliedstatuslog LLOG ON LLOG.LeavAppID = LA.LeavAppID
	LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
	LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
	LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
	LEFT JOIN department D ON U.DeptID = D.DeptID
	WHERE LA.LeaveStatusID = LLOG.LeaveStatusID AND LA.StatusUpdateDate = LLOG.StatusAppliedDate 
	AND U.DeptID IN (select * from temp_AllDept)
	AND LA.UserID NOT IN (DeptMngUserID)
	AND LS.LeaveMasterStatusID = 1;

	SELECT count(CMOF.CompOffID) INTO AppliedCmofCount
	FROM compoffapplied CMOF
	LEFT JOIN userpersonalinfo U ON CMOF.UserID = U.UserID
	LEFT JOIN department D ON U.DeptID = D.DeptID
	WHERE CMOF.RequestStatus = 'Applied'
	AND U.DeptID IN (select * from temp_AllDept)
	AND CMOF.UserID NOT IN (DeptMngUserID);
			
	SELECT count(OD.OdID) INTO OdCount
	FROM odapplied OD
	LEFT JOIN userpersonalinfo U ON OD.UserID = U.UserID
	LEFT JOIN department D ON U.DeptID = D.DeptID
	where OD.RequestStatus = 'Applied'
	AND U.DeptID IN (select * from temp_AllDept)
	AND OD.UserID NOT IN (DeptMngUserID);
    
    select SupervisorApprovalCount,EarlycheckoutApprovalCount,VisitorcheckoutApprovalCount,
    PendingLeaveCount,AppliedCmofCount,OdCount;
    
     DROP TEMPORARY TABLE temp_AllDept;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_addAttendance_log` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_addAttendance_log`(
	in  pAttendanceLogID bigint(20),
	in  pOrgID int(11),
    in	pAttendanceLog	TEXT,
	in	pLogTime DATETIME,
    in  pIsProcessed char(1),
    in  pProcessedTime DATETIME,
    in  pTypeFlg int(1)
)
BEGIN
	if pTypeFlg=1 then 
		INSERT INTO attendance_log
		(
			AttendanceLog,
            OrgID,
			LogTime,
			IsProcessed,
			ProcessedTime
		)
		VALUES
		(
			pAttendanceLog,
            pOrgID,
			pLogTime,
			pIsProcessed,
			NULL
		);
    elseif pTypeFlg=2 then
		UPDATE attendance_log AL SET 
        AL.IsProcessed= pIsProcessed, 
        AL.ProcessedTime= pProcessedTime 
        WHERE AL.AttendanceLogID= pAttendanceLogID;
    elseif  pTypeFlg=3 then
		select AL.AttendanceLogID,AL.AttendanceLog 
        from attendance_log AL 
        where AL.OrgID = pOrgID and AL.IsProcessed = 'N' order by AL.LogTime asc limit 0,30;
    end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_addOrganization` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_addOrganization`(



        IN  pOrgName                     VARCHAR(15)  , 



        IN  pContactEmail               VARCHAR(15)   , 



        IN  pWorkPhone                   VARCHAR(10)     , 



        IN  pCellPhone                   VARCHAR(10)   , 



        IN  pAddress                     VARCHAR(20)   , 



        IN  pReferenceName                 VARCHAR(20)   



        



     )
BEGIN 







DECLARE pCreatedDate datetime;



SET pCreatedDate=Now();



  INSERT INTO nexorganization



         (



           OrgName                    , 



           ContactEmail               , 



           WorkPhone                  , 



           CellPhone                  , 



           Address                    , 



           ReferenceName                   



          



                          



         )



    VALUES 



         ( 



           pOrgName                    , 



           pContactEmail               , 



           pWorkPhone                    , 



           pCellPhone                      , 



           pAddress                     , 



           pReferenceName                  



           



         ) ; 







SELECT * from nexorganization where CreatedDate =pCreatedDate and OrgName=pOrgName and ContactEmail=pContactEmail and WorkPhone=pWorkPhone and CellPhone= pCellPhone and Address=pAddress;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_addOrganizationRole` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_addOrganizationRole`(



in `@pRoleName` varchar(50),



in `@OrgID` int(11)



)
BEGIN







INSERT INTO userrole(RoleName,OrigId)



VALUES(pRoleName,OrgID);



 



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_addOrganizationSignup` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_addOrganizationSignup`(



        IN  pFName                 VARCHAR(30),

		IN  pLName                 VARCHAR(30),

        IN  pOrgName               VARCHAR(500), 

        IN  pContactEmail          VARCHAR(150),

        IN  pWorkPhone             VARCHAR(50), 

        IN  pCellPhone             VARCHAR(50), 

        IN  pAddress               VARCHAR(200), 

        IN  pReferenceName         VARCHAR(200),

        IN  pPassword               VARCHAR(50) 



     )
BEGIN 



DECLARE pCreatedDate datetime;

SET pCreatedDate=Now();



INSERT INTO nexorganization



         (



           OrgName                    , 



           ContactEmail               , 



           WorkPhone                  , 



           CellPhone                  , 



           Address                    , 



           ReferenceName 



         )



    VALUES 



         ( 



           pOrgName                    , 



           pContactEmail               , 



           pWorkPhone                    , 



           pCellPhone                      , 



           pAddress                     , 



           pReferenceName                  



         ) ; 







SELECT OrgID  INTO @lpOrgID from nexorganization where CreatedDate =pCreatedDate and OrgName=pOrgName and ContactEmail=pContactEmail;



INSERT INTO userpersonalinfo (OrgID,FName,LName,Address,Email,WorkPhone,CellNo,Pwd,CreatedByUserID,PwdResetRequired)

VALUES(@lpOrgID,pFName,pLName,pAddress,pContactEmail,pWorkPhone,pCellPhone,pPassword,0,1);



Select UserID Into @lpUserID From userpersonalinfo where OrgID = @lpOrgID and Email = pContactEmail;



INSERT Into userrole (RoleName, OrgID) values ('ADMIN', @lpOrgID);



Select RoleID into @lpRoleID from userrole where RoleName = 'ADMIN' and OrgID = @lpOrgID;



INSERT Into UserworkInfo(UserID, RoleID, Designation) values (@lpUserID, @lpRoleID, 'CEO');



/*Additional Queries*/

INSERT INTO department (DeptPrtID, DepartmentName, OrgID) VALUES ('0', pOrgName, @lpOrgID);

SET @lpDeptID = LAST_INSERT_ID();

INSERT INTO deptmanager (DeptID, DeptManagerID) VALUES (@lpDeptID, @lpUserID);

UPDATE userpersonalinfo SET DeptID =  @lpDeptID WHERE UserID = @lpUserID;



Select Org.OrgID,Org.OrgName,Org.ContactEmail,Org.WorkPhone,Org.CellPhone,Org.Address, Org.ReferenceName,pi.FName,pi.LName, pi.Pwd as AdminPass from 

  nexorganization as Org JOIN userpersonalinfo pi on Org.OrgID=pi.OrgID where Org.OrgID=@lpOrgID;







END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShowMaterial` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShowMaterial`(
	IN pMaterialID int(11),
    IN pOrgID int(11),
    IN pMaterialType char(4),
    IN pDescription text,
    IN pQuantity float(11,2),
    IN pChallanNo varchar(255),
	IN pSenderName varchar(255),
    IN pTransporterType char(4),
    IN pVehicleNumber varchar(55),
    IN pDriverName varchar(55),
    IN pTypeFlg varchar(45) 
)
BEGIN
DECLARE LASTMATERIALID int(11);
 if pTypeFlg= 'ADD' Then 
	
    IF pMaterialType= 'I' THEN
    INSERT INTO material
				(

					OrgID,
                    MaterialType,
                    Description,
					Quantity,
					ChallanNo,
					SenderName,
                    GatePassNo,
                    TransporterType,
                    VehicleNumber,
                    DriverName
				)

				VALUES

				(

					pOrgID,
					pMaterialType,
                    pDescription,
					pQuantity,
					pChallanNo,
					pSenderName,
                    '',
                    pTransporterType,
                    pVehicleNumber,
                    pDriverName
				);
		ELSE 
        INSERT INTO material
				(

					OrgID,
                    MaterialType,
                    Description,
					Quantity,
					ChallanNo,
					GatePassNo,
                    SenderName,
                    TransporterType,
                    VehicleNumber,
                    DriverName
				)

				VALUES

				(

					pOrgID,
					pMaterialType,
                    pDescription,
					pQuantity,
					pChallanNo,
					pSenderName,
                    '',
                    pTransporterType,
                    pVehicleNumber,
                    pDriverName
				);
	END IF;
        
	 SET LASTMATERIALID = LAST_INSERT_ID();
	 select LASTMATERIALID as 'MATERIALID';
     
     elseif pTypeFlg='FETCH' Then 
      SELECT M.MaterialType,M.ChallanNo,M.SenderName,M.GatePassNo,M.Modified FROM material M WHERE M.OrgID = pOrgID AND M.MaterialID = pMaterialID;
   elseif pTypeFlg='FETCHALL_BY_ORG' Then 
      SELECT m.* FROM material m 
		 WHERE m.OrgID = pOrgID
         ORDER BY m.Modified DESC,m.SenderName ASC;
   elseif pTypeFlg='FETCH_FIRST_GOODS' Then 
      SELECT MaterialImageID FROM materialimages
         WHERE MaterialID = pMaterialID AND ImageType='G' ORDER BY MaterialImageID ASC limit 0,1;
                
	END IF;

       
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShowMaterialImage` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShowMaterialImage`(
	IN pMaterialImageID int(11),
    IN pOrgID int(11),
    IN pMaterialID int(11),
    IN pImageType char(4),
    IN pImageContent longblob,
    IN pTypeFlg varchar(50) 
)
BEGIN
DECLARE EXIT HANDLER FOR 1452 SELECT 'InvalidMaterialID';
 if pTypeFlg= 'ADD' THEN 
	
    INSERT INTO materialimages
				(
					OrgID,
                    MaterialID,
                    ImageType,
                    ImageContent
				)

				VALUES
				(
					pOrgID,
                    pMaterialID,
                    pImageType,
                    pImageContent
				);
	SELECT LAST_INSERT_ID() AS 'MATERIAL_IMAGE_ID';
 elseif  pTypeFlg='FETCH_BY_MATERIALID' THEN
   SELECT M.*,MI.MaterialImageID,MI.ImageType,MI.Created  FROM material M 
    LEFT JOIN  materialimages MI ON M.MaterialID=MI.MaterialID
		 WHERE  M.OrgID = pOrgID AND
          M.MaterialID = pMaterialID 
        ORDER BY MI.ImageType ASC,MI.Created DESC;
 elseif  pTypeFlg='FETCH_BY_MATERIAL_IMAGE_ID' THEN
   SELECT MI.MaterialImageID,MI.ImageContent FROM materialimages MI 
    	 WHERE   MI.MaterialImageID = pMaterialImageID ;
   elseif  pTypeFlg='DEL' THEN
		DELETE FROM materialimages WHERE MaterialImageID=pMaterialImageID and OrgID=pOrgID;
   END IF;

       
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShowMaterialNotifiedUser` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShowMaterialNotifiedUser`(
	IN pMaterialNotifiedUserID int(11),
    IN pOrgID int(11),
    IN pMaterialID int(11),
    IN pUserID text,
    IN pCreatedOn datetime,
    IN pTypeFlg varchar(30) 
)
BEGIN
	DECLARE i,NOOFUSER int;
	IF pTypeFlg= 'ADD' THEN 
    	call splitter(pUserID,',');
		select count(SplitValue) INTO NOOFUSER from splitResultsTmpTable;
		set i = 1;
		WHILE i <= NOOFUSER DO
            INSERT INTO materialnotifieduser
				(
					OrgID,
					MaterialID,
					UserID,
					CreatedOn
				)
				VALUES
				(
					pOrgID,
                    pMaterialID,
                    (select SplitValue from splitResultsTmpTable where TmpID = i),
					pCreatedOn
				);
			SET i = i + 1;
		END WHILE; 
	ELSEIF pTypeFlg= 'FETCH_NOTIFIED' THEN
			SELECT UPI.UserID,UPI.FName,UPI.LName,UPI.Email,UPI.EmployeeID,UPI.DeptID
            FROM materialnotifieduser MNU  LEFT JOIN userpersonalinfo UPI ON MNU.UserID=UPI.UserID
            WHERE MNU.MaterialID=pMaterialID AND MNU.OrgID=pOrgID ORDER BY MaterialNotifiedUserID ASC;
            
	ELSEIF pTypeFlg= 'FETCH_MY_MATERIAL' THEN
			SELECT M.* FROM material M JOIN materialnotifieduser MNU ON M.MaterialID=MNU.MaterialID
			WHERE MNU.UserID=pUserID   ORDER BY MNU.CreatedOn DESC;
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShowMaterialVisitor` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShowMaterialVisitor`(
        in	pMaterialVisitorID int(11),
		in  pOrgID int(11),
		in  pMaterialID int(11), 
        in  pVisitorAttendanceID int(11),  
        in	pCreatedOn datetime,
		in  pTypeFlg varchar(10) 
     )
BEGIN
    if pTypeFlg= 'ADD' Then
			start transaction;	
			INSERT INTO materialvisitor
				(
					OrgID,
					MaterialID,
					VisitorAttendanceID,
					CreatedOn
				)
				VALUES
				(
					pOrgID,
					pMaterialID,
					pVisitorAttendanceID,
					pCreatedOn
				);
				commit;
	 elseif pTypeFlg='FETCH' Then 
		  select V.VisitorID,V.FullName,V.CompanyName,V.Address,V.MobileNo,V.Email,V.Photo,
          VA.MeetingID,VA.VisitorType,VA.MeetToUserID,VA.CheckInTime,VA.CheckInLocation,VA.CheckOutTime,VA.CheckOutLocation
          from materialvisitor MV 
          LEFT JOIN visitorattendance VA ON MV.VisitorAttendanceID = VA.VisitorAttendanceID
          LEFT JOIN visitor V ON V.VisitorID = VA.VisitorID
          where MV.MaterialID = pMaterialID and MV.OrgID = pOrgID
          order by MV.CreatedOn desc;
	end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShowPolicyNoticePeriod` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `nex_AddUpdateShowPolicyNoticePeriod`(
IN `pPolicyNPID` INT(11), 
IN `pOrgID` INT(11), 
IN `pNoticeDay` INT(11), 
IN `pIsNormalOrBusiness` CHAR(1),
IN `pIsActive` char(1),
IN `pTypeFlg` INT(11)
)
BEGIN
DECLARE EXIT HANDLER FOR 1452 SELECT 'InvalidOrganizationID';
if pTypeFlg= 1 Then
	select * from policy_notice_period where OrgID=pOrgID;
elseif pTypeFlg= 2 Then
 INSERT INTO policy_notice_period
				(
					OrgID,
                    NoticeDay,
                    IsNormalOrBusiness,
                    IsActive
				)
				VALUES
				(
					pOrgID,
                    pNoticeDay,
                    pIsNormalOrBusiness,
                    pIsActive
				);
	select 'inserted' as result;
	elseif pTypeFlg= 3 Then
		if(pIsActive='Y') Then
			Update policy_notice_period SET 
					OrgID = pOrgID,
					NoticeDay= pNoticeDay,
					IsNormalOrBusiness=pIsNormalOrBusiness,
                    IsActive=pIsActive
					Where PolicyNPID = pPolicyNPID;
		else 
			Update policy_notice_period SET 
					IsActive='N'
					Where PolicyNPID = pPolicyNPID;
		end if;
	select 'updated' as result;
 
    end if;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShowPolicyPayrollClosing` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `nex_AddUpdateShowPolicyPayrollClosing`(
IN `pPolicyPCID` INT(11), 
IN `pOrgID` INT(11), 
IN `pClosingOption` CHAR(3), 
IN `pNoOfDays` INT(11), 
IN `pIsActive` CHAR(1), 
IN `pModified` DATETIME, 
IN `pTypeFlg` INT(11)
)
BEGIN
if pTypeFlg= 1 Then
	select * from policy_payroll_closing where OrgID=pOrgID;
elseif pTypeFlg= 2 Then
 INSERT INTO policy_payroll_closing
				(
					OrgID,
                    ClosingOption,
                    NoOfDays,
                    IsActive,
                    Modified
				)
				VALUES
				(
					pOrgID,
                    pClosingOption,
                    pNoOfDays,
                    pIsActive,
                    pModified
				);
	
    elseif pTypeFlg= 3 Then
		Update policy_payroll_closing SET 
				OrgID = pOrgID,
                ClosingOption= pClosingOption,
                NoOfDays=pNoOfDays,
                IsActive= pIsActive,
                Modified = pModified
				Where PolicyPCID = pPolicyPCID;
	elseif pTypeFlg= 4 Then
		Update policy_payroll_closing SET 
                IsActive= pIsActive,
                Modified = pModified
				Where OrgID = pOrgID;
 
    end if;
    
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShowPolicyPayrollDuration` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShowPolicyPayrollDuration`(
IN `pPolicyPDID` INT(11), 
IN `pOrgID` INT(11),
IN `pForYear` INT(11), 
IN `pMonth1Start` DATE,
IN `pMonth1End` DATE, 
IN `pMonth2Start` DATE, 
IN `pMonth2End` DATE,
IN `pMonth3Start` DATE, 
IN `pMonth3End` DATE,
IN `pMonth4Start` DATE, 
IN `pMonth4End` DATE,
IN `pMonth5Start` DATE, 
IN `pMonth5End` DATE,
IN `pMonth6Start` DATE, 
IN `pMonth6End` DATE,
IN `pMonth7Start` DATE, 
IN `pMonth7End` DATE,
IN `pMonth8Start` DATE, 
IN `pMonth8End` DATE,
IN `pMonth9Start` DATE, 
IN `pMonth9End` DATE,
IN `pMonth10Start` DATE, 
IN `pMonth10End` DATE,
IN `pMonth11Start` DATE, 
IN `pMonth11End` DATE,
IN `pMonth12Start` DATE, 
IN `pMonth12End` DATE,
IN `pIsActive` CHAR(1), 
IN `pTypeFlg` INT(11)
)
BEGIN
declare CURMONTH,CURYEAR,CURRENTCOUNT int(11);
declare startMonthField,endMonthField varchar(50);
DECLARE varEndDate,resultEndDate,finalEndDate DATE DEFAULT NULL;


DECLARE EXIT HANDLER FOR 1452 SELECT 'InvalidOrganizationID';
if pTypeFlg= 1 Then
	select * from policy_payroll_duration where OrgID=pOrgID AND ForYear = pForYear;
 elseif pTypeFlg= 2 Then
 INSERT INTO policy_payroll_duration
				(
					OrgID,
                    ForYear,
                    Month1Start,
                    Month1End,
                    Month2Start,
                    Month2End,
                    Month3Start,
                    Month3End,
                    Month4Start,
                    Month4End,
                    Month5Start,
                    Month5End,
                    Month6Start,
                    Month6End,
                    Month7Start,
                    Month7End,
                    Month8Start,
                    Month8End,
                    Month9Start,
                    Month9End,
                    Month10Start,
                    Month10End,
                    Month11Start,
                    Month11End,
                    Month12Start,
                    Month12End,
                    IsActive
				)
				VALUES
				(
					pOrgID,
                    pForYear,
                    pMonth1Start,
                    pMonth1End,
                    pMonth2Start,
                    pMonth2End,
                    pMonth3Start,
                    pMonth3End,
                    pMonth4Start,
                    pMonth4End,
                    pMonth5Start,
                    pMonth5End,
                    pMonth6Start,
                    pMonth6End,
                    pMonth7Start,
                    pMonth7End,
                    pMonth8Start,
                    pMonth8End,
                    pMonth9Start,
                    pMonth9End,
                    pMonth10Start,
                    pMonth10End,
                    pMonth11Start,
                    pMonth11End,
                    pMonth12Start,
                    pMonth12End,
                    pIsActive
				);
		select 'inserted' as  'result';
	
    elseif pTypeFlg= 3 Then
		Update policy_payroll_duration SET 
				 OrgID        = pOrgID,
                 ForYear      = pForYear,
                 Month1Start  = pMonth1Start,
                 Month1End    =  pMonth1End,
                 Month2Start  = pMonth2Start,
				 Month2End    = pMonth2End,
                 Month3Start  = pMonth3Start,
                 Month3End    = pMonth3End,
				 Month4Start  = pMonth4Start,
                 Month4End    = pMonth4End,
				 Month5Start  = pMonth5Start,
                 Month5End    = pMonth5End,
                 Month6Start  = pMonth6Start,
                 Month6End    = pMonth6End,
				 Month7Start  = pMonth7Start,
                 Month7End    = pMonth7End,
				 Month8Start  = pMonth8Start,
                 Month8End    = pMonth8End,
                 Month9Start  = pMonth9Start,
                 Month9End    = pMonth9End,
                 Month10Start = pMonth10Start,
                 Month10End   = pMonth10End,
                 Month11Start = pMonth11Start,
                 Month11End   = pMonth11End,
                 Month12Start = pMonth12Start,
                 Month12End   = pMonth12End,
                 IsActive = pIsActive
				Where PolicyPDID = pPolicyPDID;
                select 'updated' as  'result';
    /* 4 for for only current month duration */
    elseif pTypeFlg= 4 Then
    	SELECT MONTH(CONVERT_TZ(NOW(),'+00:00','+05:30')) INTO CURMONTH;
        SELECT YEAR(CONVERT_TZ(NOW(),'+00:00','+05:30')) INTO CURYEAR;
                
        SET startMonthField= (concat("Month",CURMONTH,"Start"));
        SET endMonthField = (concat("Month",CURMONTH,"End"));
       
      /*  SET @stmtCurentChk = concat("SELECT COUNT(PolicyPDID)  INTO @CURRENTCOUNT_TMP FROM policy_payroll_duration 
        WHERE DATE(CONVERT_TZ(NOW(),'+00:00','+05:30')) BETWEEN ",startMonthField," AND ",endMonthField," AND  OrgID=",pOrgID);
		PREPARE currentDurationExistStmt FROM @stmtCurentChk;
		EXECUTE currentDurationExistStmt;
        SET CURRENTCOUNT = @CURRENTCOUNT_TMP;
        IF CURRENTCOUNT = 1 THEN*/
				SET @stmt = CONCAT('SELECT OrgID,',startMonthField," as `Start`, ",endMonthField," as `End`, IsActive FROM policy_payroll_duration  WHERE 
				OrgID=",pOrgID,' AND ForYear=',CURYEAR);
				PREPARE currentDurationStmt FROM @stmt;
				EXECUTE currentDurationStmt;
               /* select @stmt;*/
		
     elseif pTypeFlg= 5 Then   
	   SET CURMONTH=1;
      myWhileLoop: WHILE (CURMONTH <= 12) DO
			
            SET startMonthField= (concat("Month",CURMONTH,"Start"));
			SET endMonthField = (concat("Month",CURMONTH,"End"));
           
            
            SET @stmt2 = CONCAT("SET @varEndDate=","(SELECT  `",endMonthField,"` ","  FROM policy_payroll_duration  
            WHERE OrgID='",pOrgID,"' AND '",pMonth1Start,"' BETWEEN ",startMonthField," AND ",endMonthField," ORDER BY ForYear DESC limit 0,1)");
			/*select @stmt2;*/
				PREPARE endDateStmt FROM @stmt2;
				EXECUTE endDateStmt;
                DEALLOCATE PREPARE endDateStmt;
                SET resultEndDate = @varEndDate;
				
			IF(resultEndDate IS NOT NULL) THEN
            SELECT resultEndDate INTO finalEndDate;
            	 LEAVE myWhileLoop;
            END IF;
			SET CURMONTH = CURMONTH + 1;
		END WHILE;
			IF(finalEndDate IS NOT NULL) THEN
			  SELECT finalEndDate AS EndDate;
			  ELSE SELECT '' AS EndDate;
			END IF;
    
    end if;
    
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShowPolicySandwich` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShowPolicySandwich`(
IN `pPolicySWID` INT(11), 
IN `pOrgID` INT(11),
IN `pApplicableFor` VARCHAR(50),
IN `pIsActive` CHAR(1), 
IN `pCreated` DATETIME,
IN `pModified` DATETIME,
IN `pTypeFlg` INT(11)
)
BEGIN
DECLARE EXIT HANDLER FOR 1452 SELECT 'InvalidOrganizationID';
IF pTypeFlg= 1 THEN
	SELECT * from policy_leave_sandwich where OrgID=pOrgID;
 ELSEIF pTypeFlg= 2 THEN
 INSERT INTO policy_leave_sandwich
				(
					OrgID,
                    ApplicableFor,
                    IsActive,
                    Created,
                    Modified
				)
				VALUES
				(
					pOrgID,
                    pApplicableFor,
                    pIsActive,
                    pCreated,
                    pModified
				);
		select 'inserted' as  'result';
	
    ELSEIF pTypeFlg= 3 THEN
		Update policy_leave_sandwich SET 
				OrgID = pOrgID,
                ApplicableFor = pApplicableFor,
                IsActive= pIsActive,
                Modified= pModified
				Where PolicySWID = pPolicySWID;
                select 'updated' as  'result';
    END IF;
    
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShowPolicyShiftDuration` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `nex_AddUpdateShowPolicyShiftDuration`(
IN `pPolicyShiftID` INT(11), 
IN `pOrgID` INT(11),
IN `pHasDoubleShift` CHAR(1), 
in `pDblShiftDuration` varchar(10),
IN `pShiftDuration` varchar(10), 
IN `pModified` DATETIME, 
IN `pIsActive` CHAR(1), 
IN `pTypeFlg` INT(11)
)
BEGIN
DECLARE EXIT HANDLER FOR 1452 SELECT 'InvalidOrganizationID';
if pTypeFlg= 1 Then
	select * from policy_shift_duration where OrgID=pOrgID;
 elseif pTypeFlg= 2 Then
 INSERT INTO policy_shift_duration
				(
					OrgID,
                    ShiftDuration,
                    Modified,
                    IsActive
				)
				VALUES
				(
					pOrgID,
                    pShiftDuration,
                    pModified,
                    pIsActive
				);
		select 'inserted' as  'result';
	
    elseif pTypeFlg= 3 Then
		Update policy_shift_duration SET 
				OrgID = pOrgID,
                ShiftDuration= pShiftDuration,
                Modified= pModified,
                IsActive = pIsActive
				Where PolicyShiftID = pPolicyShiftID;
                select 'updated' as  'result';
    /* 4 for All fields of Dbl Shift */
    elseif pTypeFlg= 4 Then
		Update policy_shift_duration SET 
                DblShiftDuration= pDblShiftDuration,
                HasDoubleShift = pHasDoubleShift,
                Modified= pModified
				Where PolicyShiftID = pPolicyShiftID;
                select 'updated' as  'result';
	elseif pTypeFlg= 5 Then
		Update policy_shift_duration SET 
                HasDoubleShift = pHasDoubleShift,
                Modified= pModified
				Where PolicyShiftID = pPolicyShiftID;
                select 'updated' as  'result';
 
    end if;
    
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShowVisitorSettings` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShowVisitorSettings`(
IN `pVisitorSettingID` INT(11),
IN `pOrgID` INT(11) ,
IN `pDynamicQR` char(1),
IN `pStaticQR` char(1),
IN `pTypeFlag` varchar(30)
)
BEGIN
	CASE pTypeFlag
       WHEN 'GET' THEN
			SELECT * FROM visitorsetting WHERE OrgID=pOrgID;
	    WHEN 'INSERT' THEN
			INSERT INTO visitorsetting (OrgID,DynamicQR,StaticQR) VALUES (pOrgID, pDynamicQR, pStaticQR);
		WHEN  'UPDATE' THEN
			UPDATE visitorsetting SET DynamicQR=pDynamicQR, StaticQR=pStaticQR WHERE VisitorSettingID=pVisitorSettingID;
      END CASE;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShowVisitorStaticQrOption` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShowVisitorStaticQrOption`(
IN `pVisitorStaticQrOptionID` INT(11),
IN `pOrgID` INT(11) ,
IN `pNoOfQrCard` char(10),
IN `pCardNoStart` char(10),
IN `pTypeFlag` varchar(30)
)
BEGIN
	CASE pTypeFlag
       WHEN 'INSERT' THEN
       INSERT INTO visitorstaticqroption (OrgID,NoOfQrCard,CardNoStart)  VALUES (pOrgID,pNoOfQrCard,pCardNoStart);
	   WHEN 'GET' THEN
			SELECT * FROM visitorstaticqroption WHERE OrgID=pOrgID; 
       WHEN 'CHK_STC_CARD_IN_USE' THEN 
				Select VA.StaticQrCardNo,VA.VisitAttenStatus
                FROM visitorattendance VA
                LEFT JOIN visitor V ON VA.VisitorID = V.VisitorID
                WHERE VA.StaticQrCardNo = pCardNoStart  AND V.OrgID=pOrgID 
                AND VA.VisitAttenStatus NOT IN('CheckedOut-NotVarified','CheckedOut','Cancelled');
	  WHEN 'UPDATE_QR_CARDNO' THEN
       UPDATE visitorattendance SET StaticQrCardNo=pCardNoStart 
			WHERE VisitorAttendanceID=pVisitorStaticQrOptionID;
	  WHEN 'UPDATE' THEN 
		UPDATE visitorstaticqroption SET NoOfQrCard=pNoOfQrCard, CardNoStart=pCardNoStart WHERE VisitorStaticQrOptionID=pVisitorStaticQrOptionID;
	  END CASE;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_calendar` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_calendar`(
        In	pCalendarID	int(11),
        in	pCalendarName varchar(255),
        IN	pCalendarDesc text,
        IN	pOrgID int(11),
        IN	pHolidayID varchar(255),
        IN	pWeekendID varchar(255),
        IN	pUserID text,
        in	pEffectedFrom datetime,
        in	pAddedOn datetime,
        in	pTypeFlg int(11)
     )
BEGIN
	
	DECLARE i,NOOFHLDY,HLDY,NOOFHWEND,WEND,NOOFUSERCAL,EXTCALCOUNT int;
    DECLARE USERCAL text;
    
    /*Insert into calendar table*/
    if pTypeFlg= 1 Then
        INSERT INTO calendar
		(
			CalendarName,
			CalendarDesc,
			OrgID
		)
		VALUES
		(
			pCalendarName,
			pCalendarDesc,
			pOrgID
		);
		select LAST_INSERT_ID() as CalendarID;
	/*Update calendar table*/
    elseif pTypeFlg= 2 Then
		UPDATE calendar C SET 
		C.CalendarName = pCalendarName,
		C.CalendarDesc = pCalendarDesc
		WHERE C.CalendarID = pCalendarID;
    /*Delete calender*/    
	elseif pTypeFlg = 3 Then
		delete from calendarholiday where CalendarID = pCalendarID;
        delete from calendarweekends where CalendarID = pCalendarID;
        delete from usercalendar where CalendarID = pCalendarID;
		delete from calendar where CalendarID = pCalendarID;
	/*View calender by CalendarID*/ 
    elseif pTypeFlg = 4 Then
		select C.CalendarID,C.CalendarName,C.CalendarDesc from calendar C
        where C.CalendarID = pCalendarID;
    /*Search by calender by CalendarName*/ 
    elseif pTypeFlg = 5 Then
		select * from calendar where CalendarName = pCalendarName and OrgID = pOrgID;    
	/*List of all calender*/ 
    elseif  pTypeFlg = 6 Then
		select * from calendar where OrgID = pOrgID order by CalendarID desc;
     /*List of all Holidays of a calender*/ 
     elseif  pTypeFlg = 7 Then
		select H.HolidayID,H.HolidayName,H.StartDate from calendarholiday CH
        LEFT JOIN holiday H ON CH.HolidayID = H.HolidayID
        where CH.CalendarID = pCalendarID;
     /*List of all Weekends of a calender*/ 
     elseif  pTypeFlg = 8 Then
		select W.WeekendsID,W.DayName from calendarweekends CW
        LEFT JOIN weekends W ON CW.WeekendID = W.WeekendsID
        where CW.CalendarID = pCalendarID;  
	/*List of all Users of a calender*/ 
     elseif  pTypeFlg = 9 Then
		select U.UserID,concat(U.FName,' ',U.LName) UName, U.EmployeeID,UC.EffectedFrom
        from usercalendar UC
        LEFT JOIN userpersonalinfo U ON UC.UserID = U.UserID
        where UC.CalendarID = pCalendarID;   
    /*Insert into related tables*/ 
    elseif  pTypeFlg = 10 Then
		start transaction;	
            /*Delete from all related tables*/
			delete from calendarholiday where CalendarID = pCalendarID;
			delete from calendarweekends where CalendarID = pCalendarID;
			delete from usercalendar where CalendarID = pCalendarID;
            
            /*Insert into calendarholiday table*/
			if pHolidayID != '' then 
				call splitter(pHolidayID,',');
				select count(SplitValue) INTO NOOFHLDY from splitResultsTmpTable;
				set i = 1;
				WHILE i <= NOOFHLDY DO
					select SplitValue INTO HLDY from splitResultsTmpTable where TmpID = i;
					INSERT INTO calendarholiday
					(
						CalendarID,
						HolidayID
					)
					VALUES
					(
						pCalendarID,
						HLDY
					);
					SET i = i + 1;
				END WHILE;
			end if;
            
            if pWeekendID != '' then 
				/*Insert into calendarweekends table*/
				call splitter(pWeekendID,',');
				select count(SplitValue) INTO NOOFHWEND from splitResultsTmpTable;
				set i = 1;
				WHILE i <= NOOFHWEND DO
					select SplitValue INTO WEND from splitResultsTmpTable where TmpID = i;
					INSERT INTO calendarweekends
					(
						CalendarID,
						WeekendID
					)
					VALUES
					(
						pCalendarID,
						WEND
					);
					SET i = i + 1;
				END WHILE;
			end if;
            
			/*Insert into usercalendar table*/
            if pUserID!='' then
				call splitter(pUserID,',');
				select count(SplitValue) INTO NOOFUSERCAL from splitResultsTmpTable;
				set i = 1;
				WHILE i <= NOOFUSERCAL DO
					select SplitValue INTO USERCAL from splitResultsTmpTable where TmpID = i;
					INSERT INTO usercalendar
					(
						CalendarID,
						UserID,
						EffectedFrom,
						AddedOn
					)
					VALUES
					(
						pCalendarID,
						stringSplit(USERCAL,'~',1),
						stringSplit(USERCAL,'~',2),
						pAddedOn
					);
					SET i = i + 1;
				END WHILE;
            end if; 
        commit;
	elseif  pTypeFlg = 11 Then
		if pCalendarID != 0 then 
			select if(count(UC.CalendarID)>0,'Y','N') as isCalendar,concat(U.FName,' ',U.LName) FullName,U.EmployeeID
            from usercalendar UC LEFT JOIN userpersonalinfo U ON UC.UserID = U.UserID
            where UC.UserID = pUserID and UC.EffectedFrom = pEffectedFrom and UC.CalendarID != pCalendarID;
		else
			select if(count(UC.CalendarID)>0,'Y','N') as isCalendar,concat(U.FName,' ',U.LName) FullName,U.EmployeeID
            from usercalendar UC LEFT JOIN userpersonalinfo U ON UC.UserID = U.UserID
            where UC.UserID = pUserID and UC.EffectedFrom = pEffectedFrom;
		end if;
    elseif  pTypeFlg = 12 Then
		call splitter(pUserID,',');
		select count(SplitValue) INTO NOOFUSERCAL from splitResultsTmpTable;
		set i = 1;
		WHILE i <= NOOFUSERCAL DO
			select SplitValue INTO USERCAL from splitResultsTmpTable where TmpID = i;
            
            select count(UserCalendarID) INTO EXTCALCOUNT from usercalendar UC where UC.CalendarID=pCalendarID 
            and UC.UserID=stringSplit(USERCAL,'~',1) and date(UC.EffectedFrom)=date(stringSplit(USERCAL,'~',2));
            
            if EXTCALCOUNT = 0 then 
				INSERT INTO usercalendar
				(
					CalendarID,
					UserID,
					EffectedFrom,
					AddedOn
				)
				VALUES
				(
					pCalendarID,
					stringSplit(USERCAL,'~',1),
					stringSplit(USERCAL,'~',2),
					pAddedOn
				);
             end if;   
			SET i = i + 1;
		END WHILE;
    End If;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_calendarholiday` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_calendarholiday`(
	IN pCalHolidayID int(11),
    IN pCalendarID int(11),
    IN pHolidayID int(11),
    IN pTypeFlg int(11)
)
BEGIN
	DECLARE CALHOLIDAYID int;
	if pTypeFlg= 1 Then
		INSERT INTO calendarholiday
		(
			CalendarID,
			HolidayID 
		)
		VALUES
		(
			pCalendarID,
			pHolidayID
		);
		SET CALHOLIDAYID = LAST_INSERT_ID();
		select CALHOLIDAYID;
    elseif pTypeFlg= 2 Then
		delete from calendarholiday where CalHolidayID= pCalHolidayID;
	elseif pTypeFlg= 3 Then
        select count(CalHolidayID) as NoOfCalendar from calendarholiday where CalendarID = pCalendarID and HolidayID = pHolidayID;
    elseif pTypeFlg= 4 Then
		delete from calendarholiday where CalendarID= pCalendarID;
     elseif pTypeFlg= 5 Then
		select CalendarID from calendarholiday where HolidayID = pHolidayID;
    End if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_calendarweekends` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_calendarweekends`(
	IN pCalWeekendID int(11),
    IN pCalendarID int(11),
    IN pWeekendID int(11),
    IN pTypeFlg int(11)
)
BEGIN
	DECLARE CALWEEKENDID int;
	if pTypeFlg= 1 Then
		INSERT INTO calendarweekends
		(
			CalendarID,
			WeekendID 
		)
		VALUES
		(
			pCalendarID,
			pWeekendID
		);
		SET CALWEEKENDID = LAST_INSERT_ID();
		select CALWEEKENDID;
    elseif pTypeFlg= 2 Then
		delete from calendarweekends where CalWeekendID= pCalWeekendID;
    elseif pTypeFlg= 3 Then
        select count(CalWeekendID) from calendarweekends where CalendarID = pCalendarID and WeekendID = pWeekendID;
    elseif pTypeFlg= 4 Then
		delete from calendarweekends where CalendarID= pCalendarID;
    End if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_compoffapplied` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_compoffapplied`(
        in	pCompOffID text,
        in	pUserID int(11),
		in	pCompOffDate date,
		in  pRequestType varchar(6),
		in  pCompOffReason text,
        in	pAppliedDate datetime,
        in  pRequestStatus varchar(10),
        in	pStatusUpdateDate datetime,
        in	pStatusUpdteBy int(11),
        in	pTypeFlg smallint(1)
     )
BEGIN
	DECLARE COMPOFID int;
    DECLARE i,NOOFCOMP,SELCOMPOFF int;
	start transaction;
    if pTypeFlg= 1 Then
			 if pRequestType = 'Payout' then
				INSERT INTO compoffapplied
					(
						UserID,
						CompOffDate,
						RequestType,
						CompOffReason,
						AppliedDate,
						RequestStatus,
						StatusUpdateDate,
						StatusUpdteBy
					)
					VALUES
					(
						pUserID,
						pCompOffDate,
						pRequestType,
						pCompOffReason,
						pAppliedDate,
						pRequestStatus,
						pStatusUpdateDate,
						pStatusUpdteBy
					);
					/*SET COMPOFID = LAST_INSERT_ID();*/
			 elseif pRequestType = 'Leave' then
				select CompOffID INTO SELCOMPOFF from compoffapplied CMOF where CMOF.UserID=pUserID AND CMOF.CompOffDate =pCompOffDate;
                
                if SELCOMPOFF > 0 then
					/*If this is approved Off-day(Payout)*/
						INSERT INTO compoffappliedlog
						(
							CompOffID,
							RequestType,
							AppliedDate,
							RequestStatus,
							StatusUpdateDate,
							StatusUpdteBy
						)
						select CompOffID,'Payout',AppliedDate,RequestStatus,StatusUpdateDate,StatusUpdteBy from compoffapplied where CompOffID=SELCOMPOFF;

						UPDATE compoffapplied SET 
						RequestType='Leave', 
						AppliedDate=pAppliedDate, 
						RequestStatus=pRequestStatus,
						StatusUpdateDate=pStatusUpdateDate, 
						StatusUpdteBy=pStatusUpdteBy 
						WHERE CompOffID=SELCOMPOFF;
                 else
					/*If this is approved OD*/	
                        INSERT INTO compoffapplied
						(
							UserID,
							CompOffDate,
							RequestType,
							CompOffReason,
							AppliedDate,
							RequestStatus,
							StatusUpdateDate,
							StatusUpdteBy
						)
						VALUES
						(
							pUserID,
							pCompOffDate,
							pRequestType,
							pCompOffReason,
							pAppliedDate,
							pRequestStatus,
							pStatusUpdateDate,
							pStatusUpdteBy
						);
                 end if;
             end if;
		elseif pTypeFlg= 2 Then
				call splitter(pCompOffID,',');
				select count(SplitValue) INTO NOOFCOMP from splitResultsTmpTable;
				set i = 1;
				WHILE i <= NOOFCOMP DO
					Update compoffapplied Set 
					RequestStatus= pRequestStatus,
					StatusUpdateDate= pStatusUpdateDate,
					StatusUpdteBy= pStatusUpdteBy
					Where CompOffID= (select SplitValue from splitResultsTmpTable where TmpID = i);
					SET i = i + 1;
				END WHILE;    
		elseif pTypeFlg= 3 Then 
				Select CMOF.CompOffID,CMOF.UserID,CMOF.CompOffDate,CMOF.RequestType as OrigRequestType,if(CMOF.RequestType='Leave','CO Request','Off Day Present') as RequestType,CMOF.CompOffReason,CMOF.AppliedDate,
				CMOF.RequestStatus,CMOF.StatusUpdateDate,CMOF.StatusUpdteBy 
				from compoffapplied CMOF where CMOF.UserID = pUserID order by CMOF.CompOffDate desc,CMOF.CompOffID desc;
		Else
				call splitter(pCompOffID,',');
                
				Select CMOF.CompOffID,CMOF.UserID,CMOF.CompOffDate,CMOF.RequestType as OrigRequestType,if(CMOF.RequestType='Leave','CO Request','Off Day Present') as RequestType,CMOF.CompOffReason,CMOF.AppliedDate,
				CMOF.RequestStatus,CMOF.StatusUpdateDate,CMOF.StatusUpdteBy 
				from compoffapplied CMOF
                where CMOF.CompOffID IN (select SplitValue from splitResultsTmpTable);
		End If;
	commit;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_department` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_department`(
        in pDeptID text,
        in pDeptPrtID int(11),
        in pDepartmentName varchar(50),
        in pDepartmentDesc text,
        in pOrgID int(11),
        in pDeptManagerID int(11),
        in pTypeFlg int(11)
     )
BEGIN
    DECLARE LASTDEPTID,USERWRKINFO,USERROLEID,OLDUSEPERVISORID,OLDUSEPERVISOROFDEPTS int default 0;
    DECLARE OLDUSEPERVISORROLE varchar(10);
    
    DECLARE EXIT HANDLER FOR 1451 
	SELECT 'FKC-ERROR'; /*Foreign Key Constraint Error*/
    
    start transaction;
 if pTypeFlg= 1 Then
	  INSERT INTO department
	  (
	   DeptPrtID,
	   DepartmentName,
	   DepartmentDesc,
	   OrgID
	  )
	  VALUES
	  (
	   pDeptPrtID,
	   pDepartmentName,
	   pDepartmentDesc,
	   pOrgID
	  );
	  SET LASTDEPTID = LAST_INSERT_ID();
	  select LASTDEPTID;
 elseif pTypeFlg= 2 Then
	Update department Set 
	DepartmentName= pDepartmentName,
	DepartmentDesc= pDepartmentDesc
	Where DeptID= pDeptID and OrgID= pOrgID;
 elseif pTypeFlg= 3 Then
	delete from deptmanager where DeptID = pDeptID;
	delete from department where DeptID = pDeptID and OrgID= pOrgID;
    select 'SUCCESS';
 elseif pTypeFlg= 4 Then
	select  DeptManagerID into OLDUSEPERVISORID from deptmanager where DeptID = pDeptID;
    select r.RoleName into OLDUSEPERVISORROLE from userrole r left join userworkinfo uw on r.RoleID = uw.RoleID where uw.UserID = OLDUSEPERVISORID;
    select count(DeptID) into OLDUSEPERVISOROFDEPTS from deptmanager where DeptManagerID = OLDUSEPERVISORID;
    if (OLDUSEPERVISORROLE = 'SUPERVISOR' and OLDUSEPERVISOROFDEPTS = 1) then 
		delete from userworkinfo where UserID = OLDUSEPERVISORID;
    end if;
    delete from deptmanager where DeptID = pDeptID;
    
	INSERT INTO deptmanager
	(
		DeptID,
		DeptManagerID
	)
	VALUES
	(
		pDeptID,
		pDeptManagerID
	);
    
    select count(UserWorkInfoID) into USERWRKINFO from userworkinfo where UserID = pDeptManagerID;
    if USERWRKINFO = 0 then
		select RoleID into USERROLEID from userrole where RoleName = 'SUPERVISOR' and OrgID = pOrgID;
        if USERROLEID = 0 then
			INSERT INTO userrole
			(
				RoleName,
				Actions,
                OrgID
			)
			VALUES
			(
				'SUPERVISOR',
				NULL,
                pOrgID
			);
            set USERROLEID = LAST_INSERT_ID();
        end if;
		INSERT INTO userworkinfo
		(
			UserID,
			RoleID,
			TeamID,
			Designation
		)
		VALUES
		(
			pDeptManagerID,
			USERROLEID,
            0,
            'Supervisor'
		);
    end if;
    
 elseif pTypeFlg= 5 Then
	Select * from department where DepartmentName= pDepartmentName and OrgID= pOrgID;
 elseif pTypeFlg= 6 Then
	Select DepartmentName as DepartmentName from department where DeptID = pDeptID;
 elseif pTypeFlg= 7 Then
	Select DeptID, DepartmentName from department where OrgID= pOrgID;
 elseif pTypeFlg = 8 Then
	select D.DeptID,D.DeptPrtID,D.DepartmentName,D.DepartmentDesc,
	DM.DeptManagerID,U.Email,concat(U.FName,' ',U.LName) as UName from department D 
	LEFT JOIN deptmanager DM ON D.DeptID = DM.DeptID
	LEFT JOIN userpersonalinfo U ON U.UserID = DM.DeptManagerID
	where D.OrgID = pOrgID and D.DeptPrtID IN (pDeptID);
 elseif pTypeFlg = 9 Then
	select D.DeptID,D.DeptPrtID,D.DepartmentName,D.DepartmentDesc,D.OrgID,
	DM.DeptManagerID,U.Email,concat(U.FName,' ',U.LName) as UName from department D 
	LEFT JOIN deptmanager DM ON D.DeptID = DM.DeptID
	LEFT JOIN userpersonalinfo U ON U.UserID = DM.DeptManagerID
	where D.DeptID = pDeptID;   
 else
   Select * from department where OrgID= pOrgID;
 End If;
 commit;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_departmentholiday` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_departmentholiday`(
  IN pDeptHolidayID int(11),
        IN pDeptID int(11),
        IN pHolidayID int(11),
        IN  pOrgID int(11),
        IN  pStartDate date,
        IN  pShowYear varchar(4), 
        IN  pTypeFlg int(11)
)
BEGIN
 DECLARE DEPARTHOLIDAYID int;
 if pTypeFlg= 1 Then
  INSERT INTO departmentholiday
   (
    OrgID,
    DeptID,
    HolidayID
   )
   VALUES
   (
    pOrgID,
    pDeptID,
    pHolidayID
   );
  SET DEPARTHOLIDAYID = LAST_INSERT_ID();
  select DEPARTHOLIDAYID;
                
 elseif pTypeFlg= 2 Then
   Delete from departmentholiday 
   Where DeptHolidayID= pDeptHolidayID;
                
 elseif pTypeFlg= 3 Then
  If pShowYear='' Then
   select H.HolidayName,H.Holidaydescription,H.StartDate,H.EndDate,DH.DeptHolidayID,DH.DeptID,DH.OrgID
   from departmentholiday DH LEFT JOIN holiday H
   ON DH.HolidayID = H.HolidayID
   where DH.DeptID = pDeptID AND H.OrgID = pOrgID
   order by H.StartDate asc;
         Else
   select H.*,DH.*
   from departmentholiday DH LEFT JOIN holiday H
   ON DH.HolidayID = H.HolidayID
   where DH.DeptID = pDeptID AND H.OrgID = pOrgID AND Year(H.StartDate)= pShowYear
   order by H.StartDate desc;
         End If;
         
 elseif pTypeFlg= 4 Then
   select DeptHolidayID
            from departmentholiday 
   Where DeptID= pDeptID AND HolidayID = pHolidayID;
 elseif pTypeFlg= 5 Then
   select DH.DeptHolidayID,DH.DeptID, D.DepartmentName
            from departmentholiday DH LEFT JOIN Department D
            ON DH.DeptID = D.DeptID
   Where DH.HolidayID= pHolidayID;
 elseif pTypeFlg= 6 Then
   select DH.DeptHolidayID,DH.DeptID,H.HolidayID,H.StartDate
            from departmentholiday DH LEFT JOIN Holiday H
            ON DH.HolidayID = H.HolidayID
   Where H.OrgID=pOrgID AND DH.DeptID=pDeptID AND H.StartDate=pStartDate;
            
    End If;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_departmentweekends` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_departmentweekends`(

		IN	pDepartmentWeekendsID int(11),

        IN	pDeptID int(11),

        IN	pWeekendsID int(11),

        IN  pOrgID int(11),

        IN  pTypeFlg int(11)

)
BEGIN

	DECLARE DEPTWEEKENDSID int;

    if pTypeFlg= 1 Then

		INSERT INTO departmentweekends

			(

				DeptID,

				WeekendsID

			)

			VALUES

			(

				pDeptID,

				pWeekendsID

			);

            SET DEPTWEEKENDSID = LAST_INSERT_ID();

			select DEPTWEEKENDSID;

	elseif pTypeFlg= 2 Then

			Delete from departmentweekends 

			Where DepartmentWeekendsID= pDepartmentWeekendsID;

	elseif pTypeFlg= 3 Then

			select W.*,WE.*

			from departmentweekends WE LEFT JOIN weekends W

			ON WE.WeekendsID = W.WeekendsID

			where WE.DeptID = pDeptID AND W.OrgID = pOrgID

			order by W.DayName;

	elseif pTypeFlg= 4 Then

			select WE.DepartmentWeekendsID

			from departmentweekends WE 

			where WE.DeptID = pDeptID AND WE.WeekendsID = pWeekendsID;

	elseif pTypeFlg= 5 Then

			Update departmentweekends Set 

			WeekendsID= pWeekendsID

			Where DepartmentWeekendsID = pDepartmentWeekendsID AND DeptID= pDeptID;

	elseif pTypeFlg= 6 Then

			select WE.DepartmentWeekendsID, WE.DeptID, WE.WeekendsID

			from departmentweekends WE 

			where WE.DeptID = pDeptID;

    elseif pTypeFlg= 7 Then

			select W.DayName, WE.DepartmentWeekendsID, WE.WeekendsID

			from weekends W JOIN departmentweekends WE 

			ON W.WeekendsID = WE.WeekendsID JOIN department d 

			ON d.DeptID = WE.DeptID

			where WE.DeptID = pDeptID;
    elseif pTypeFlg= 8 Then
			Delete from departmentweekends 
			Where DeptID= pDeptID;        

    End If;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_department_user` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_department_user`(
		in pUserID text,
        in pDeptID int(11),
        in pOrgID int(11),
        in pTypeFlg int(11)
)
BEGIN
	declare USERDEPTID int default 0;
    DECLARE i,NOOFUSER int;
    if pTypeFlg= 1 Then
		select DeptID into USERDEPTID from userpersonalinfo 
        where UserID = pUserID and OrgID = pOrgID;
        if USERDEPTID > 0 then
			select 'EXIST-FALSE';
        else
            UPDATE userpersonalinfo SET DeptID = pDeptID WHERE UserID= pUserID;
			select 'SUCCESS';
        end if;
    elseif pTypeFlg= 2 Then
		UPDATE userpersonalinfo SET DeptID = NULL WHERE UserID= pUserID;
	elseif pTypeFlg= 3 Then
		call splitter(pUserID,',');
		select count(SplitValue) INTO NOOFUSER from splitResultsTmpTable;
		set i = 1;
		WHILE i <= NOOFUSER DO 
			UPDATE userpersonalinfo SET DeptID = pDeptID WHERE UserID= (select SplitValue from splitResultsTmpTable where TmpID = i);
			SET i = i + 1;
        END WHILE;    
    end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_earlycheckoutapproval` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_earlycheckoutapproval`(
        in pEarlyCheckoutApprvID int(11),
        in pAttendanceID text,
        in pUserID int(11),
        in pSupUserID int(11),
        in  pAppliedDate datetime,
        in  pRequestStatus varchar(10),
        in  pStatusNote text,
        in  pStatusUpdateDate datetime,
        in  pStatusUpdteBy int(11),
        in  pOrgID int(11),
        in  pWorkDuration int(11),
        in  pLessDuration int(11),
        in  pTypeFlg smallint(1)
     )
BEGIN
 DECLARE isAlreadyRequested int;
    DECLARE i,NOOFATTN int;
 start transaction;
    if pTypeFlg= 1 Then
  
  select count(ECOA.EarlyCheckoutApprvID) INTO isAlreadyRequested
  from earlycheckoutapproval ECOA where ECOA.AttendanceID = pAttendanceID 
        AND ECOA.OrgID = pOrgID;
        
  if isAlreadyRequested = 0 then 
   INSERT INTO earlycheckoutapproval
   (
    AttendanceID,
                UserID,
                SupervisorUserID,
    AppliedDate,
    RequestStatus,
    StatusNote,
    StatusUpdateDate,
    StatusUpdteBy,
    OrgID,
    WorkDuration,
    LessDuration
   )
   VALUES
   (
    pAttendanceID,
	pUserID,
	pSupUserID,
    pAppliedDate,
    pRequestStatus,
    pStatusNote,
    pStatusUpdateDate,
    pStatusUpdteBy,
    pOrgID,
    pWorkDuration,
	pLessDuration
   );
  else
   Update earlycheckoutapproval Set 
   AppliedDate= pAppliedDate,
            RequestStatus= pRequestStatus
   Where AttendanceID= pAttendanceID;
  end if;   
 elseif pTypeFlg= 2 Then
        
  call splitter(pAttendanceID,',');
  select count(SplitValue) INTO NOOFATTN from splitResultsTmpTable;
  set i = 1;
  WHILE i <= NOOFATTN DO 
   Update earlycheckoutapproval Set 
   RequestStatus= pRequestStatus,
   StatusNote= pStatusNote,
   StatusUpdateDate= pStatusUpdateDate,
   StatusUpdteBy= pStatusUpdteBy
   where AttendanceID IN (select SplitValue from splitResultsTmpTable where TmpID = i);
            SET i = i + 1;
        END WHILE;
    elseif pTypeFlg= 3 Then
        select ECOA.*,CONCAT(UP.FName,' ',UP.LName) as UserName,UP.EmployeeID as UserEmployeeID,UP.UserPicture,
        Time(A.CheckInTime) as CheckInTime, 
  Time(A.CheckOutTime) CheckOutTime,
  (TIMESTAMPDIFF(Second, A.CheckInTime, A.CheckOutTime)) TotalWorkedHours
        from earlycheckoutapproval ECOA
        LEFT JOIN attendance A ON ECOA.AttendanceID = A.AttendanceID
        LEFT JOIN userpersonalinfo UP ON ECOA.UserID = UP.UserID
        where ECOA.SupervisorUserID = pSupUserID and ECOA.RequestStatus = 'Applied';
  elseif pTypeFlg= 4 Then
        select ECOA.*,CONCAT(UP.FName,' ',UP.LName) as UserName,UP.EmployeeID as UserEmployeeID,
        Time(A.CheckInTime) as CheckInTime, 
  Time(A.CheckOutTime) CheckOutTime,
  (TIMESTAMPDIFF(Hour, A.CheckInTime, A.CheckOutTime) + (TIMESTAMPDIFF(Minute, A.CheckInTime, A.CheckOutTime) - ((TIMESTAMPDIFF(Hour, A.CheckInTime, A.CheckOutTime))*60))*.01) TotalWorkedHours
        from earlycheckoutapproval ECOA
        LEFT JOIN attendance A ON ECOA.AttendanceID = A.AttendanceID
        LEFT JOIN userpersonalinfo UP ON ECOA.UserID = UP.UserID
        where ECOA.EarlyCheckoutApprvID = pEarlyCheckoutApprvID;
        
 elseif pTypeFlg= 5 Then
		select count(ECOA.EarlyCheckoutApprvID) as countPrevious
		from earlycheckoutapproval ECOA where ECOA.UserID = pUserID 
        AND date(ECOA.AppliedDate) = date(pAppliedDate);
elseif pTypeFlg= 6 Then /* added by Shams */
		select A.LogTime
        from attendance A  where A.AttendanceID = pAttendanceID;
      
    End If;
 commit;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_EmpAuth` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_EmpAuth`(
	IN pEmpAppAuthID int(11),
    IN pOrgID int(11),
    IN pByQRCode char(1),
    IN pByODTrack char(1),
    IN pODTrackUserType char(11),
    IN pODTrackSelfieMode char(1),
    IN pUserID int(11),
    IN pTypeFlg smallint(1)
)
BEGIN
	if pTypeFlg = 1 Then
		SELECT QRCode, ODTrack, ODTrackUserType, ODTrackSelfieMode FROM empappauth WHERE OrgID=pOrgID;
	elseif pTypeFlg = 2 Then
		INSERT INTO empappauth
		(
		OrgID, 
		QRCode, 
		ODTrack,
        ODTrackUserType,
        ODTrackSelfieMode
       	) 
		VALUES 
		(
		pOrgID, 
		pByQRCode,
		pByODTrack,
        pODTrackUserType,
        ODTrackSelfieMode
		);
	elseif pTypeFlg = 3 Then
		INSERT INTO empappauthuser
        (
		OrgID,
        UserID
        )
        VALUES
        (
        pOrgID,
        pUserID
        );
	elseif pTypeFlg = 4 Then
		DELETE FROM empappauthuser WHERE OrgID=pOrgID;
	elseif pTypeFlg = 5 Then
		UPDATE empappauth SET QRCode=pByQRCode, ODTrack=pByODTrack, ODTrackUserType=pODTrackUserType, ODTrackSelfieMode=pODTrackSelfieMode WHERE OrgID=pOrgID;
	elseif pTypeFlg = 6 Then
		SELECT UserID FROM empappauthuser WHERE OrgID=pOrgID; 
	elseif pTypeFlg = 7 Then
		SELECT UserID FROM empappauthuser WHERE UserID=pUserID AND OrgID=pOrgID;
	End If;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_holiday` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_holiday`(

        In	pHolidayID	int(11),

        in	pHolidayName varchar(255),

        IN	pHolidayDescription text,

        in	pStartDate date,

        in	pEndDate date,

        in	pOrgID int(11),

		in  pShowYear varchar(4),

        in	pTypeFlg int(11)

     )
BEGIN

	

	DECLARE LASTHOLIDAYID int;

    

    if pTypeFlg= 1 Then

    

			INSERT INTO holiday

				(

					HolidayName,

					HolidayDescription,

					StartDate,

					EndDate,

					OrgID

				)

				VALUES

				(

					pHolidayName,

					pHolidayDescription,

					pStartDate,

					pEndDate,

					pOrgID

				);

                SET LASTHOLIDAYID = LAST_INSERT_ID();

                select LASTHOLIDAYID;

		elseif pTypeFlg= 2 Then

				UPDATE holiday H SET 

                H.HolidayName = pHolidayName,

				H.HolidayDescription = pHolidayDescription,

				H.StartDate = pStartDate,

				H.EndDate = pEndDate  

                WHERE H.HolidayID = pHolidayID;

		elseif pTypeFlg= 3 Then

				if pShowYear='' Then

					Select H.HolidayID,H.HolidayName, H.HolidayDescription, H.StartDate, H.EndDate, H.OrgID

                    from holiday H

                    where H.HolidayID=pHolidayID AND H.OrgID=pOrgID order by H.StartDate desc;

                Else

					Select H.*

                    from holiday H

                    where H.HolidayID=pHolidayID AND H.OrgID=pOrgID AND Year(H.StartDate)= pShowYear

					order by H.StartDate desc;

				End If;

                

		elseif pTypeFlg= 4 Then

				Delete from departmentholiday Where HolidayID= pHolidayID;

                Delete from holiday Where HolidayID= pHolidayID;

                

		elseif pTypeFlg= 5 Then

				Select H.HolidayID,H.HolidayName, H.HolidayDescription, H.StartDate, H.EndDate, H.OrgID

				from holiday H

				where H.OrgID=pOrgID order by H.StartDate desc;

        

		elseif pTypeFlg= 6 Then

				select H.HolidayName,H.HolidayID,H.Holidaydescription

				from holiday H

				where H.HolidayName = pHolidayName AND H.OrgID = pOrgID;

		elseif pTypeFlg= 7 Then
				Select H.HolidayID,H.HolidayName, H.HolidayDescription, H.StartDate, H.EndDate, H.OrgID
				from holiday H
				where H.OrgID=pOrgID AND StartDate=pStartDate order by H.StartDate desc;

        Else

                if pShowYear='' Then

					Select H.HolidayID,H.HolidayName, H.HolidayDescription, H.StartDate, H.EndDate, H.OrgID

                    from holiday H

                    where H.OrgID=pOrgID order by H.StartDate desc;

                Else

					Select H.HolidayID,H.HolidayName, H.HolidayDescription, H.StartDate, H.EndDate, H.OrgID

                    from holiday H

                    where H.OrgID=pOrgID AND Year(H.StartDate)= pShowYear

					order by H.StartDate desc;

				End If;

		End If;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_holiday2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_holiday2`(
        In	pHolidayID	int(11),
        in	pHolidayName varchar(255),
        IN	pHolidayDescription text,
        in	pStartDate date,
        in	pEndDate date,
        in	pOrgID int(11),
        in	pIsCloned char(1),
        in	pClonedParentHolidayID int(11),
        in	pClonedStatus char(1),
		in  pShowYear varchar(4),
        in	pTypeFlg int(11)
     )
BEGIN
	
	DECLARE LASTHOLIDAYID int;
    
     DECLARE EXIT HANDLER FOR 1451 
	 SELECT 'FKC-ERROR'; /*Foreign Key Constraint Error*/
    
    if pTypeFlg= 1 Then
    
			INSERT INTO holiday
				(
					HolidayName,
					HolidayDescription,
					StartDate,
					EndDate,
					OrgID,
                    IsCloned,
                    ClonedParentHolidayID,
                    ClonedStatus
				)
				VALUES
				(
					pHolidayName,
					pHolidayDescription,
					pStartDate,
					pEndDate,
					pOrgID,
                    pIsCloned,
                    pClonedParentHolidayID,
                    pClonedStatus
                    
				);
                SET LASTHOLIDAYID = LAST_INSERT_ID();
                select LASTHOLIDAYID;
		elseif pTypeFlg= 2 Then
				UPDATE holiday H SET 
                H.HolidayName = pHolidayName,
				H.HolidayDescription = pHolidayDescription,
				H.StartDate = pStartDate,
				H.EndDate = pEndDate  
                WHERE H.HolidayID = pHolidayID;
		elseif pTypeFlg= 3 Then
				Select H.HolidayID,H.HolidayName, H.HolidayDescription, H.StartDate, H.EndDate, H.OrgID, H.IsCloned,
				H.ClonedParentHolidayID, H.ClonedStatus
				from holiday H
				where H.HolidayID=pHolidayID AND H.OrgID=pOrgID;
		elseif pTypeFlg= 4 Then
                Delete from holiday Where HolidayID= pHolidayID;
				select 'SUCCESS';
		elseif pTypeFlg= 5 Then
				Select H.HolidayID,H.HolidayName, H.HolidayDescription, H.StartDate, H.EndDate, H.OrgID,
                H.IsCloned, H.ClonedParentHolidayID,H.ClonedStatus
				from holiday H
				where H.OrgID=pOrgID order by H.StartDate desc;
		elseif pTypeFlg= 6 Then
				select H.HolidayName,H.HolidayID,H.Holidaydescription
				from holiday H
				where H.HolidayName = pHolidayName 
                AND H.StartDate = pStartDate AND H.EndDate = pEndDate
                AND H.OrgID = pOrgID;
		elseif pTypeFlg= 7 Then
				select H.HolidayName,H.HolidayID,H.Holidaydescription,H.StartDate,H.EndDate
				from holiday H
				where H.StartDate BETWEEN pStartDate AND pEndDate  AND H.OrgID = pOrgID;          
                
		elseif pTypeFlg= 8 Then
				select H.HolidayName,H.HolidayID,H.Holidaydescription,H.StartDate,H.EndDate
				from holiday H
				where year(H.StartDate) = pShowYear AND H.OrgID = pOrgID;       
        elseif pTypeFlg= 9 Then
				UPDATE holiday H SET 
                H.ClonedStatus = 'P'
                WHERE H.HolidayID = pHolidayID;
        Else
                if pShowYear='' Then
					Select H.HolidayID,H.HolidayName, H.HolidayDescription, H.StartDate, H.EndDate, H.OrgID,
                    H.IsCloned, H.ClonedParentHolidayID, H.ClonedStatus
                    from holiday H
                    where H.OrgID=pOrgID order by H.StartDate desc;
                Else
					Select H.HolidayID,H.HolidayName, H.HolidayDescription, H.StartDate, H.EndDate, H.OrgID,
                    H.IsCloned, H.ClonedParentHolidayID, H.ClonedStatus
                    from holiday H
                    where H.OrgID=pOrgID AND Year(H.StartDate)= pShowYear
					order by H.StartDate desc;
				End If;
		End If;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_kiosk` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_kiosk`(
	in pKioskID int(11),
	in pOrgID int(11),
	in pUserID int(11),
	in pEmail varchar (50),
	in pKioskName varchar (50),
	in pUniqueDeviceID varchar (50),
	in pDeviceType varchar (50),
	in pOTP varchar(10),
	in pRegisteredOn datetime,
	in pTypeFlg int(11)
)
BEGIN

if pTypeFlg= 1 Then
	 delete from kiosk where Email = pEmail and OTPSuccess='N' and IsActive='N';
     
     INSERT INTO kiosk
	 (
	 OrgID,
	 UserID,
	 Email,
	 KioskName,
	 UniqueDeviceID,
	 OTP,
	 DeviceType
	 ) 
	 VALUES
	 (
	 pOrgID,
	 pUserID,
	 pEmail,
	 pKioskName,
	 pUniqueDeviceID,
	 pOTP,
	 pDeviceType
	 );
elseif pTypeFlg= 2 Then
	 Update kiosk k Set 
	 k.OTP= pOTP
	 Where k.KioskID= pKioskID; 
elseif pTypeFlg= 3 Then
	Select KioskID,UniqueDeviceID from kiosk where Email= pEmail and isActive = 'Y';
elseif pTypeFlg= 4 Then
	select KioskID,Email,UniqueDeviceID from kiosk where Email=pEmail and OTP=pOTP and isActive = 'N';
elseif pTypeFlg= 5 Then 
	 Update kiosk k Set 
	 k.OTPSuccess= 'Y',
	 k.IsActive='Y' ,
	 k.RegisteredOn=pRegisteredOn
	 Where k.KioskID= pKioskID;
elseif pTypeFlg= 6 Then 
	select * from kiosk where OrgID=pOrgID and OTPSuccess='Y' order by KioskID desc; 
elseif pTypeFlg= 7 Then
	 Update kiosk k Set 
	 k.IsActive='N' 
	 Where k.KioskID= pKioskID;
End If;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_KioskAuth` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_KioskAuth`(
	in pKioskAuthID int(11),
    in pOrgID int(11),
    in pByLocation char(1),
    in pByTime char(1),
    in pTypeFlg int(11)
)
BEGIN
	if pTypeFlg = 1 Then
		SELECT ByLocation, ByTime, OrgID FROM kioskauth WHERE OrgID=pOrgID;
    elseif pTypeFlg = 2 Then
		INSERT INTO kioskauth 
		(
		OrgID, 
		ByLocation, 
		ByTime
		) 
		VALUES 
		(
		pOrgID, 
		pByLocation,
		pByTime
		);
    elseif pTypeFlg = 3 Then
		UPDATE kioskauth SET ByLocation=pByLocation, ByTime=pByTime WHERE OrgID=pOrgID;
    End If;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_kioskImage` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_kioskImage`(
 in pKioskLogoID int(11),
 in pOrgID int(11),
 in pDeviceImage varchar(255),
 in pDeviceEncImage longblob,
 in pVersionID int(11),
 in pCreated datetime,
 in pModified datetime,
 in pIsActive char(1),
 in pTypeFlg int(11)
)
BEGIN
if pTypeFlg= 1 Then
	select * from kiosklogo where OrgID=pOrgID;
elseif pTypeFlg= 2 Then
	 INSERT INTO kiosklogo
	 (
	 OrgID,
	 DeviceImage,
	 DeviceEncImage,
	 Created,
	 Modified,
	 IsActive
	 )
	 VALUES
	 (
	 pOrgID,
	 pDeviceImage,
	 pDeviceEncImage,
	 pCreated,
	 pModified,
	 pIsActive
	 );
elseif pTypeFlg= 3 Then
	 Update kiosklogo Set 
	 DeviceImage= pDeviceImage,
	 DeviceEncImage= pDeviceEncImage,
	 VersionID = pVersionID,
	 Modified= pModified,
	 IsActive = pIsActive
	 Where KioskLogoID = pKioskLogoID;
End If;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_leaveapplied` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_leaveapplied`(
        In	pLeavAppID text,
        in	pUserID int(11),
        IN	pLeaveTypeID int(11),
        in	pLeaveStatusID int(11),
        in  pLeaveStatusNote text,
        in	pAppliedDate datetime(3),
		in  pNoOfDays float(3,1),
		in  pPolicyType varchar(20),
        in	pStartDate date,
        in	pEndDate date,
        in  pIsHalfDay varchar(1),
        in  pWhichHalf varchar(1),
        in  pLeaveReason text,
        in	pStatusUpdateDate datetime(3),
        in	pStatusUpdteBy int(11),
        in	pTypeFlg int(11)
     )
BEGIN
	DECLARE LID int;
	DECLARE i,NOOFLEV int;
	start transaction;
    if pTypeFlg= 1 Then
			INSERT INTO leaveapplied
				(
					UserID,
                    LeaveTypeID,
                    LeaveStatusID,
                    AppliedDate,
                    NoOfDays,
                    PolicyType,
                    StartDate,
                    EndDate,
                    IsHalfDay,
                    WhichHalf,
                    LeaveReason,
                    StatusUpdateDate,
                    StatusUpdteBy
				)
				VALUES
				(
					pUserID,
                    pLeaveTypeID,
                    pLeaveStatusID,
                    pAppliedDate,
                    pNoOfDays,
                    pPolicyType,
                    pStartDate,
                    pEndDate,
                    pIsHalfDay,
                    pWhichHalf,
                    pLeaveReason,
                    pStatusUpdateDate,
                    pStatusUpdteBy
				);
                SET LID = LAST_INSERT_ID();
                INSERT INTO leaveappliedstatuslog
                (
					LeavAppID, 
					LeaveStatusID, 
					StatusNote, 
					StatusAppliedDate
                ) 
                VALUES 
                (
					LID, 
					pLeaveStatusID, 
					pLeaveStatusNote, 
					pAppliedDate
                );
		elseif pTypeFlg= 2 Then
			call splitter(pLeavAppID,',');
			select count(SplitValue) INTO NOOFLEV from splitResultsTmpTable;
			set i = 1;
			WHILE i <= NOOFLEV DO 
                Update leaveapplied Set 
                LeaveStatusID= pLeaveStatusID,
                StatusUpdateDate= pStatusUpdateDate,
                StatusUpdteBy= pStatusUpdteBy
				Where LeavAppID = (select SplitValue from splitResultsTmpTable where TmpID = i);
                
				INSERT INTO leaveappliedstatuslog
                (
					LeavAppID, 
					LeaveStatusID, 
					StatusNote, 
					StatusAppliedDate
                ) 
                VALUES 
                (
					(select SplitValue from splitResultsTmpTable where TmpID = i), 
					pLeaveStatusID, 
					pLeaveStatusNote, 
					pStatusUpdateDate
                );
				SET i = i + 1;
			END WHILE;
		elseif pTypeFlg= 3 Then
                if pLeaveStatusID='' Then
					Select LA.LeavAppID,LA.UserID,U.DeptID,LA.LeaveTypeID,LA.LeaveStatusID,LA.AppliedDate,
                    LA.StartDate,LA.EndDate,LA.IsHalfDay,LA.WhichHalf,LA.LeaveReason,
                    LA.StatusUpdateDate,LA.StatusUpdteBy,
                    TRIM(TRAILING '.' FROM TRIM(TRAILING '0' from LA.NoOfDays)) AS NoOfDays,
                    LT.LeaveTypeText,LS.LeaveStatusText,LAL.StatusNote,LMS.leaveMasterStatus
					from leaveapplied LA
                    LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
					LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
					LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
                    LEFT JOIN leavemasterstatus LMS ON LMS.leaveMasterID = LS.LeaveMasterStatusID
					LEFT JOIN leaveappliedstatuslog LAL ON LAL.LeavAppID = LA.LeavAppID
					where LA.UserID = pUserID AND
                    (LA.LeaveStatusID = LAL.LeaveStatusID)
					order by LA.StartDate desc;
                Else
					Select LA.LeavAppID,LA.UserID,U.DeptID,LA.LeaveTypeID,LA.LeaveStatusID,LA.AppliedDate,
                    LA.StartDate,LA.EndDate,LA.IsHalfDay,LA.WhichHalf,LA.LeaveReason,
                    LA.StatusUpdateDate,LA.StatusUpdteBy,
                    TRIM(TRAILING '.' FROM TRIM(TRAILING '0' from LA.NoOfDays)) AS NoOfDays,
                    LT.LeaveTypeText,LS.LeaveStatusText,LAL.StatusNote,LMS.leaveMasterStatus 
					from leaveapplied LA
                    LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
					LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
					LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
                    LEFT JOIN leavemasterstatus LMS ON LMS.leaveMasterID = LS.LeaveMasterStatusID
                    LEFT JOIN leaveappliedstatuslog LAL ON LAL.LeavAppID = LA.LeavAppID
					where LA.UserID = pUserID AND LA.LeaveStatusID = pLeaveStatusID
                    AND (LA.LeaveStatusID = LAL.LeaveStatusID)
					order by LA.StartDate desc;
				End If;	
	elseif pTypeFlg= 5 Then /* added by shams */
		Select  U.OrgID,LA.LeavAppID,LA.LeaveTypeID,LA.LeaveStatusID,LA.AppliedDate,
				LA.StartDate,LA.EndDate,LS.LeaveMasterStatusID
                from leaveapplied LA
                LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
                LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
                where LA.LeavAppID = pLeavAppID;
		
        Else
				Select U.OrgID,LA.LeavAppID,LA.UserID,U.DeptID,LA.LeaveTypeID,LA.LeaveStatusID,LA.AppliedDate,
				LA.StartDate,LA.EndDate,LA.IsHalfDay,LA.WhichHalf,LA.LeaveReason,
				LA.StatusUpdateDate,LA.StatusUpdteBy,
                TRIM(TRAILING '.' FROM TRIM(TRAILING '0' from LA.NoOfDays)) AS NoOfDays,
                LT.LeaveTypeText,LS.LeaveStatusText,LAL.StatusNote,LS.LeaveMasterStatusID
                from leaveapplied LA
                LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
                LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
				LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
                LEFT JOIN leaveappliedstatuslog LAL ON LAL.LeavAppID = LA.LeavAppID
                where LA.LeavAppID IN (pLeavAppID) AND 
                (LA.LeaveStatusID = LAL.LeaveStatusID);
		End If;
	commit;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_leaveapplied_BKP` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_leaveapplied_BKP`(

        In	pLeavAppID text,

        in	pUserID int(11),

        IN	pLeaveTypeID int(11),

        in	pLeaveStatusID int(11),

        in  pLeaveStatusNote text,

        in	pAppliedDate datetime(3),

        in	pStartDate date,

        in	pEndDate date,

        in  pIsHalfDay varchar(1),

        in  pWhichHalf varchar(1),

        in  pLeaveReason text,

        in	pStatusUpdateDate datetime(3),

        in	pStatusUpdteBy int(11),

        in	pTypeFlg int(11)

     )
BEGIN

	DECLARE LID int;
	DECLARE i,NOOFLEV int;

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO leaveapplied

				(

					UserID,

                    LeaveTypeID,

                    LeaveStatusID,

                    AppliedDate,

                    StartDate,

                    EndDate,

                    IsHalfDay,

                    WhichHalf,

                    LeaveReason,

                    StatusUpdateDate,

                    StatusUpdteBy

				)

				VALUES

				(

					pUserID,

                    pLeaveTypeID,

                    pLeaveStatusID,

                    pAppliedDate,

                    pStartDate,

                    pEndDate,

                    pIsHalfDay,

                    pWhichHalf,

                    pLeaveReason,

                    pStatusUpdateDate,

                    pStatusUpdteBy

				);

                SET LID = LAST_INSERT_ID();

                INSERT INTO leaveappliedstatuslog

                (

					LeavAppID, 

					LeaveStatusID, 

					StatusNote, 

					StatusAppliedDate

                ) 

                VALUES 

                (

					LID, 

					pLeaveStatusID, 

					pLeaveStatusNote, 

					pAppliedDate

                );

		elseif pTypeFlg= 2 Then

			call splitter(pLeavAppID,',');
			select count(SplitValue) INTO NOOFLEV from splitResultsTmpTable;
			set i = 1;
			WHILE i <= NOOFLEV DO 
                Update leaveapplied Set 
                LeaveStatusID= pLeaveStatusID,
                StatusUpdateDate= pStatusUpdateDate,
                StatusUpdteBy= pStatusUpdteBy
				Where LeavAppID = (select SplitValue from splitResultsTmpTable where TmpID = i);
                
				INSERT INTO leaveappliedstatuslog
                (
					LeavAppID, 
					LeaveStatusID, 
					StatusNote, 
					StatusAppliedDate
                ) 
                VALUES 
                (
					(select SplitValue from splitResultsTmpTable where TmpID = i), 
					pLeaveStatusID, 
					pLeaveStatusNote, 
					pStatusUpdateDate
                );
				SET i = i + 1;
			END WHILE;

		elseif pTypeFlg= 3 Then

                if pLeaveStatusID='' Then

					Select LA.LeavAppID,LA.UserID,U.DeptID,LA.LeaveTypeID,LA.LeaveStatusID,LA.AppliedDate,

                    LA.StartDate,LA.EndDate,LA.IsHalfDay,LA.WhichHalf,LA.LeaveReason,

                    LA.StatusUpdateDate,LA.StatusUpdteBy,

                    IF(LA.IsHalfDay = 'Y','0.5', (DATEDIFF(LA.EndDate,LA.StartDate)+1)) as NoOfDays,

                    LT.LeaveTypeText,LS.LeaveStatusText,LAL.StatusNote,LMS.leaveMasterStatus

					from leaveapplied LA

                    LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID

					LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID

					LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
                    LEFT JOIN leavemasterstatus LMS ON LMS.leaveMasterID = LS.LeaveMasterStatusID

					LEFT JOIN leaveappliedstatuslog LAL ON LAL.LeavAppID = LA.LeavAppID

					where LA.UserID = pUserID AND

                    (LA.LeaveStatusID = LAL.LeaveStatusID)

					order by LA.StartDate desc;

                Else

					Select LA.LeavAppID,LA.UserID,U.DeptID,LA.LeaveTypeID,LA.LeaveStatusID,LA.AppliedDate,

                    LA.StartDate,LA.EndDate,LA.IsHalfDay,LA.WhichHalf,LA.LeaveReason,

                    LA.StatusUpdateDate,LA.StatusUpdteBy,

                    IF(LA.IsHalfDay = 'Y','0.5', (DATEDIFF(LA.EndDate,LA.StartDate)+1)) as NoOfDays,

                    LT.LeaveTypeText,LS.LeaveStatusText,LAL.StatusNote,LMS.leaveMasterStatus 

					from leaveapplied LA

                    LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID

					LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID

					LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
                    LEFT JOIN leavemasterstatus LMS ON LMS.leaveMasterID = LS.LeaveMasterStatusID

                    LEFT JOIN leaveappliedstatuslog LAL ON LAL.LeavAppID = LA.LeavAppID

					where LA.UserID = pUserID AND LA.LeaveStatusID = pLeaveStatusID

                    AND (LA.LeaveStatusID = LAL.LeaveStatusID)

					order by LA.StartDate desc;

				End If;	
	elseif pTypeFlg= 5 Then /* added by shams */
		Select  U.OrgID,LA.LeavAppID,LA.LeaveTypeID,LA.LeaveStatusID,LA.AppliedDate,
				LA.StartDate,LA.EndDate,LS.LeaveMasterStatusID
                from leaveapplied LA
                LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
                LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
                where LA.LeavAppID = pLeavAppID;
		
        Else

				Select U.OrgID,LA.LeavAppID,LA.UserID,U.DeptID,LA.LeaveTypeID,LA.LeaveStatusID,LA.AppliedDate,

				LA.StartDate,LA.EndDate,LA.IsHalfDay,LA.WhichHalf,LA.LeaveReason,

				LA.StatusUpdateDate,LA.StatusUpdteBy,

                IF(LA.IsHalfDay = 'Y','0.5', (DATEDIFF(LA.EndDate,LA.StartDate)+1)) as NoOfDays,

                LT.LeaveTypeText,LS.LeaveStatusText,LAL.StatusNote,LS.LeaveMasterStatusID

                from leaveapplied LA

                LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID

                LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID

				LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID

                LEFT JOIN leaveappliedstatuslog LAL ON LAL.LeavAppID = LA.LeavAppID

                where LA.LeavAppID IN (pLeavAppID) AND 

                (LA.LeaveStatusID = LAL.LeaveStatusID);

		End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_leavecredit` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_leavecredit`(
		IN `pUserLeaveCrdID` INT(11), 
        IN `pUserID` TEXT, 
        IN `pLeaveTypeID` TEXT, 
        IN `pCreditLeave` FLOAT(5,1), 
        IN `pCreditDate` DATE, 
        IN `pDeptID` INT(11),
        IN `pOrgID` INT(11),
        IN `pTypeFlg` INT(11))
BEGIN
	DECLARE i,NOOFUSER,LEAVEDAYCOUNT,LID int;
	DECLARE NO_OF_DAYS_VAL,EXACT_HLDWKEND_CNT float(3,1);
	DECLARE POLICYTYPE_VAL,POLICYTYPE_VAL_TMP varchar(20);
	DECLARE STARTDATE_VAL,ENDDATE_VAL date;
	start transaction;
    if pTypeFlg= 1 Then
		call splitter(pUserID,',');
		select count(SplitValue) INTO NOOFUSER from splitResultsTmpTable;
		set i = 1;
		WHILE i <= NOOFUSER DO
            INSERT INTO userleavecredit
				(
					UserID,
					LeaveTypeID,
					CreditLeave,
					CreditDate
				)
				VALUES
				(
					(select SplitValue from splitResultsTmpTable where TmpID = i),
					pLeaveTypeID,
					pCreditLeave,
					pCreditDate
				);
			SET i = i + 1;
		END WHILE;         
	elseif pTypeFlg=2 Then
			Update userleavecredit set
			CreditLeave=pCreditLeave
			where UserLeaveCrdID=pUserLeaveCrdID;
	elseif pTypeFlg=3 Then
			select U.UserID,U.OrgID,U.EmployeeID,U.DeptID,U.FName,U.LName,U.Email
            from userpersonalinfo U
            where U.DeptID=pDeptID;
	elseif pTypeFlg=4 Then
			select U.UserID,U.FName,U.LName,U.EmployeeID,D.DepartmentName,LT.LeaveTypeText,ULC.CreditLeave,ULC.CreditDate,ULC.CreditType
            from userleavecredit ULC 
            LEFT JOIN userpersonalinfo U ON ULC.UserID = U.UseriD
            LEFT JOIN department D ON D.DeptID = U.DeptID
            LEFT JOIN leavetype LT ON ULC.LeaveTypeID = LT.LeaveTypeID
            where ULC.UserID = pUserID order by ULC.CreditDate desc;
     elseif pTypeFlg=5 Then
			select U.UserID,U.FName,U.LName,U.EmployeeID,D.DepartmentName,LT.LeaveTypeText,ULC.CreditLeave,ULC.CreditDate,ULC.CreditType
            from userleavecredit ULC 
            LEFT JOIN userpersonalinfo U ON ULC.UserID = U.UseriD
            LEFT JOIN department D ON D.DeptID = U.DeptID
            LEFT JOIN leavetype LT ON ULC.LeaveTypeID = LT.LeaveTypeID
            where U.OrgID = pOrgID order by ULC.CreditDate desc;
	elseif pTypeFlg=6 Then
			
            UPDATE userleavecredit set IsCountable='Y'  WHERE UserLeaveCrdID IN(
            select UserLeaveCrdID from (select ULC.UserLeaveCrdID
            from userleavecredit ULC 
            LEFT JOIN userpersonalinfo U ON ULC.UserID = U.UserID
			LEFT JOIN leavetype LT ON ULC.LeaveTypeID = LT.LeaveTypeID
            where U.OrgID = pOrgID AND ULC.UserID=pUserID AND ULC.CreditType='C' )  ulcid);
            
            UPDATE userleavecredit set IsCountable='N'  WHERE UserLeaveCrdID IN(
            select UserLeaveCrdID from (select ULC.UserLeaveCrdID
            from userleavecredit ULC 
            LEFT JOIN userpersonalinfo U ON ULC.UserID = U.UserID
			LEFT JOIN leavetype LT ON ULC.LeaveTypeID = LT.LeaveTypeID
            where U.OrgID = pOrgID AND date(ULC.CreditDate) <=pCreditDate AND ULC.UserID=pUserID 
            AND ULC.LeaveTypeID=pLeaveTypeID AND  ULC.IsCountable='Y')  ulcid);
            
            UPDATE userleavecredit set IsCountable='N'  WHERE UserLeaveCrdID IN(
            select UserLeaveCrdID from (select ULC.UserLeaveCrdID
            from userleavecredit ULC 
            LEFT JOIN userpersonalinfo U ON ULC.UserID = U.UserID
			LEFT JOIN leavetype LT ON ULC.LeaveTypeID = LT.LeaveTypeID
            where U.OrgID = pOrgID AND date(ULC.CreditDate)>pCreditDate AND ULC.UserID=pUserID 
            AND ULC.LeaveTypeID=pLeaveTypeID AND  ULC.IsCountable='Y' AND ULC.CreditType='U' )  ulcid);
            
            INSERT INTO userleavecredit
				(
					UserID,
					LeaveTypeID,
					CreditLeave,
					CreditDate,
                    CreditType
				)
				VALUES
				(
					pUserID,
					pLeaveTypeID,
					pCreditLeave,
					pCreditDate,
                    'U'
				);
			
        /*  Get the count of leave taken */
       SET LEAVEDAYCOUNT= (SELECT DATEDIFF(LA.EndDate, LA.StartDate)  from leaveapplied 
        LA LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID 
        LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
        WHERE 
        U.OrgID = pOrgID 
        AND LA.LeaveTypeID=pLeaveTypeID 
        AND LA.UserID=pUserID 
        AND LA.StartDate <=pCreditDate  
        AND pCreditDate<LA.EndDate
        AND LS.LeaveMasterStatusID IN('1','2')
        );
        
        IF(LEAVEDAYCOUNT IS NULL) THEN
        set LEAVEDAYCOUNT=0;
        END IF;
		/*  Split the leave into two entries if LEAVEDAYCOUNT>0 i.e; Taken leave greater than or equal to two */
		IF LEAVEDAYCOUNT>0  Then
		/*  Taking backup of current record starts */
		drop table if exists temp_LeaveApplied;
        drop table if exists temp_LeaveApplied2;
        drop table if exists temp_LeaveApplied3;
        create TEMPORARY TABLE temp_LeaveApplied like leaveapplied;
		INSERT INTO temp_LeaveApplied SELECT * from leaveapplied where LeavAppID IN 
        (SELECT LeavAppID from((SELECT LA.LeavAppID from leaveapplied LA 
        LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID 
        LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID 
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
        WHERE 
        U.OrgID = pOrgID 
        AND LA.LeaveTypeID=pLeaveTypeID 
        AND LA.UserID=pUserID 
        AND LA.StartDate <=pCreditDate 
        AND pCreditDate<LA.EndDate
        AND LS.LeaveMasterStatusID IN('1','2')
        ) LAPID2));
       /*  Taking backup of current record ends */
	   
        /*
		UPDATE  leaveapplied SET EndDate=DATE_SUB(pCreditDate, INTERVAL 1 DAY),CreateType='S' WHERE LeavAppID IN 
        (
        SELECT LeavAppID from((SELECT LA.LeavAppID from leaveapplied 
        LA LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID 
        LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
        where U.OrgID = pOrgID 
        AND LA.LeaveTypeID=pLeaveTypeID 
        AND LA.UserID=pUserID 
        AND LA.StartDate <=pCreditDate 
        AND pCreditDate<LA.EndDate
        AND LS.LeaveMasterStatusID IN('1','2')
        ) LAPID1));
        
        INSERT INTO leaveapplied (UserID, LeaveTypeID,LeaveStatusID,AppliedDate,StartDate,EndDate,
        IsHalfDay,WhichHalf,LeaveReason,StatusUpdateDate,StatusUpdteBy,CreateType)
		SELECT UserID,LeaveTypeID,LeaveStatusID,AppliedDate,
        pCreditDate,EndDate,IsHalfDay,WhichHalf,
        LeaveReason,StatusUpdateDate,StatusUpdteBy,'S' from temp_LeaveApplied;
        */
        SELECT PolicyType,StartDate,EndDate INTO POLICYTYPE_VAL_TMP,STARTDATE_VAL,ENDDATE_VAL from temp_LeaveApplied;
			CASE POLICYTYPE_VAL_TMP
					WHEN 'S-PH,WO' THEN
						SET POLICYTYPE_VAL = 'PH,WO';
					WHEN 'S-WO,PH' THEN
						SET POLICYTYPE_VAL = 'PH,WO';
					WHEN 'S-PH' THEN
						SET POLICYTYPE_VAL = 'PH';
					WHEN 'S-WO' THEN
						SET POLICYTYPE_VAL = 'WO';
					ELSE SET POLICYTYPE_VAL = '';
				END CASE;
		
		CALL nex_GetLeaveInHolidayOrWeekend(pUserID,STARTDATE_VAL,pCreditDate,POLICYTYPE_VAL,@DaysInHolidayOrWeekend);
		SELECT @DaysInHolidayOrWeekend INTO EXACT_HLDWKEND_CNT;
		SET NO_OF_DAYS_VAL = (DATEDIFF(pCreditDate,STARTDATE_VAL)+1) - EXACT_HLDWKEND_CNT;
        UPDATE  leaveapplied SET NoOfDays=NO_OF_DAYS_VAL,EndDate=pCreditDate,CreateType='S' WHERE LeavAppID IN 
        (
        SELECT LeavAppID from((SELECT LA.LeavAppID from leaveapplied 
        LA LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID 
        LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
        where U.OrgID = pOrgID 
        AND LA.LeaveTypeID=pLeaveTypeID 
        AND LA.UserID=pUserID 
        AND LA.StartDate <=pCreditDate 
        AND pCreditDate<LA.EndDate
        AND LS.LeaveMasterStatusID IN('1','2')
        ) LAPID1));
        SET EXACT_HLDWKEND_CNT = 0.0;
		CALL nex_GetLeaveInHolidayOrWeekend(pUserID,DATE_ADD(pCreditDate, INTERVAL 1 DAY),ENDDATE_VAL,POLICYTYPE_VAL,@DaysInHolidayOrWeekend);
		SELECT @DaysInHolidayOrWeekend INTO EXACT_HLDWKEND_CNT;
		
		SET NO_OF_DAYS_VAL = 0.0;
			
		SET NO_OF_DAYS_VAL = (DATEDIFF(ENDDATE_VAL,DATE_ADD(pCreditDate, INTERVAL 1 DAY))+1) - EXACT_HLDWKEND_CNT;
		
        INSERT INTO leaveapplied (UserID, LeaveTypeID,LeaveStatusID,AppliedDate,NoOfDays,PolicyType,StartDate,EndDate,
        IsHalfDay,WhichHalf,LeaveReason,StatusUpdateDate,StatusUpdteBy,CreateType)
		SELECT UserID,LeaveTypeID,LeaveStatusID,AppliedDate,NO_OF_DAYS_VAL,POLICYTYPE_VAL_TMP,
        DATE_ADD(pCreditDate, INTERVAL 1 DAY),EndDate,IsHalfDay,WhichHalf,
        LeaveReason,StatusUpdateDate,StatusUpdteBy,'S' from temp_LeaveApplied;
        
		SET LID = LAST_INSERT_ID();
		create TEMPORARY TABLE temp_LeaveApplied2 like temp_LeaveApplied;
        insert temp_LeaveApplied2 select * from temp_LeaveApplied;
        
        create TEMPORARY TABLE temp_LeaveApplied3 like temp_LeaveApplied;
        insert temp_LeaveApplied3 select * from temp_LeaveApplied;
        
		INSERT INTO leaveappliedstatuslog
		(
		 LeavAppID, 
		 LeaveStatusID, 
         StatusNote,
		 StatusAppliedDate
		) 
		VALUES 
		(
		  LID, 
		 (SELECT LeaveStatusID from temp_LeaveApplied2), 
         '',
		 (SELECT StatusUpdateDate from temp_LeaveApplied3)
		);
       
        drop table if exists temp_LeaveApplied;
        drop table if exists temp_LeaveApplied2;
        drop table if exists temp_LeaveApplied3;
        
        End if;
		/* RESET ALL LEAVE TO IsCountable='N' */
		UPDATE  leaveapplied SET IsCountable='N' WHERE LeavAppID IN 
        (
        SELECT LeavAppID from ((SELECT LA.LeavAppID from leaveapplied 
        LA LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID 
        LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
        where U.OrgID = pOrgID 
        AND LA.LeaveTypeID=pLeaveTypeID 
        AND LA.UserID=pUserID
        AND LA.EndDate<=pCreditDate
        AND LA.IsCountable='Y'
        ) LAPID1));
            
    End If;
  commit;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_leavecredit_BKP` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_leavecredit_BKP`(
		IN `pUserLeaveCrdID` INT(11), 
        IN `pUserID` TEXT, 
        IN `pLeaveTypeID` TEXT, 
        IN `pCreditLeave` FLOAT(5,1), 
        IN `pCreditDate` DATE, 
        IN `pDeptID` INT(11),
        IN `pOrgID` INT(11),
        IN `pTypeFlg` INT(11))
BEGIN
	DECLARE i,NOOFUSER,LEAVEDAYCOUNT,LID int;
	start transaction;
    if pTypeFlg= 1 Then
		call splitter(pUserID,',');
		select count(SplitValue) INTO NOOFUSER from splitResultsTmpTable;
		set i = 1;
		WHILE i <= NOOFUSER DO
            INSERT INTO userleavecredit
				(
					UserID,
					LeaveTypeID,
					CreditLeave,
					CreditDate
				)
				VALUES
				(
					(select SplitValue from splitResultsTmpTable where TmpID = i),
					pLeaveTypeID,
					pCreditLeave,
					pCreditDate
				);
			SET i = i + 1;
		END WHILE;         
	elseif pTypeFlg=2 Then
			Update userleavecredit set
			CreditLeave=pCreditLeave
			where UserLeaveCrdID=pUserLeaveCrdID;
	elseif pTypeFlg=3 Then
			select U.UserID,U.OrgID,U.EmployeeID,U.DeptID,U.FName,U.LName,U.Email
            from userpersonalinfo U
            where U.DeptID=pDeptID;
	elseif pTypeFlg=4 Then
			select U.UserID,U.FName,U.LName,U.EmployeeID,D.DepartmentName,LT.LeaveTypeText,ULC.CreditLeave,ULC.CreditDate,ULC.CreditType
            from userleavecredit ULC 
            LEFT JOIN userpersonalinfo U ON ULC.UserID = U.UseriD
            LEFT JOIN department D ON D.DeptID = U.DeptID
            LEFT JOIN leavetype LT ON ULC.LeaveTypeID = LT.LeaveTypeID
            where ULC.UserID = pUserID order by ULC.CreditDate desc;
     elseif pTypeFlg=5 Then
			select U.UserID,U.FName,U.LName,U.EmployeeID,D.DepartmentName,LT.LeaveTypeText,ULC.CreditLeave,ULC.CreditDate,ULC.CreditType
            from userleavecredit ULC 
            LEFT JOIN userpersonalinfo U ON ULC.UserID = U.UseriD
            LEFT JOIN department D ON D.DeptID = U.DeptID
            LEFT JOIN leavetype LT ON ULC.LeaveTypeID = LT.LeaveTypeID
            where U.OrgID = pOrgID order by ULC.CreditDate desc;
	elseif pTypeFlg=6 Then
			
            UPDATE userleavecredit set IsCountable='Y'  WHERE UserLeaveCrdID IN(
            select UserLeaveCrdID from (select ULC.UserLeaveCrdID
            from userleavecredit ULC 
            LEFT JOIN userpersonalinfo U ON ULC.UserID = U.UserID
			LEFT JOIN leavetype LT ON ULC.LeaveTypeID = LT.LeaveTypeID
            where U.OrgID = pOrgID AND ULC.UserID=pUserID AND ULC.CreditType='C' )  ulcid);
            
            UPDATE userleavecredit set IsCountable='N'  WHERE UserLeaveCrdID IN(
            select UserLeaveCrdID from (select ULC.UserLeaveCrdID
            from userleavecredit ULC 
            LEFT JOIN userpersonalinfo U ON ULC.UserID = U.UserID
			LEFT JOIN leavetype LT ON ULC.LeaveTypeID = LT.LeaveTypeID
            where U.OrgID = pOrgID AND date(ULC.CreditDate) <=pCreditDate AND ULC.UserID=pUserID 
            AND ULC.LeaveTypeID=pLeaveTypeID AND  ULC.IsCountable='Y')  ulcid);
            
            UPDATE userleavecredit set IsCountable='N'  WHERE UserLeaveCrdID IN(
            select UserLeaveCrdID from (select ULC.UserLeaveCrdID
            from userleavecredit ULC 
            LEFT JOIN userpersonalinfo U ON ULC.UserID = U.UserID
			LEFT JOIN leavetype LT ON ULC.LeaveTypeID = LT.LeaveTypeID
            where U.OrgID = pOrgID AND date(ULC.CreditDate)>pCreditDate AND ULC.UserID=pUserID 
            AND ULC.LeaveTypeID=pLeaveTypeID AND  ULC.IsCountable='Y' AND ULC.CreditType='U' )  ulcid);
            
            INSERT INTO userleavecredit
				(
					UserID,
					LeaveTypeID,
					CreditLeave,
					CreditDate,
                    CreditType
				)
				VALUES
				(
					pUserID,
					pLeaveTypeID,
					pCreditLeave,
					pCreditDate,
                    'U'
				);
		
        
       SET LEAVEDAYCOUNT= (SELECT DATEDIFF(LA.EndDate, LA.StartDate)  from leaveapplied 
        LA LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID 
        LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
        WHERE 
        U.OrgID = pOrgID 
        AND LA.LeaveTypeID=pLeaveTypeID 
        AND LA.UserID=pUserID 
        AND LA.StartDate <=pCreditDate  
        AND pCreditDate<LA.EndDate
        AND LS.LeaveMasterStatusID IN('1','2')
        );
        
        IF(LEAVEDAYCOUNT IS NULL) THEN
        set LEAVEDAYCOUNT=0;
        END IF;
		IF LEAVEDAYCOUNT>0  Then
		drop table if exists temp_LeaveApplied;
        drop table if exists temp_LeaveApplied2;
        drop table if exists temp_LeaveApplied3;
        create TEMPORARY TABLE temp_LeaveApplied like leaveapplied;
		INSERT INTO temp_LeaveApplied SELECT * from leaveapplied where LeavAppID IN 
        (SELECT LeavAppID from((SELECT LA.LeavAppID from leaveapplied LA 
        LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID 
        LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID 
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
        WHERE 
        U.OrgID = pOrgID 
        AND LA.LeaveTypeID=pLeaveTypeID 
        AND LA.UserID=pUserID 
        AND LA.StartDate <=pCreditDate 
        AND pCreditDate<LA.EndDate
        AND LS.LeaveMasterStatusID IN('1','2')
        ) LAPID2));
       
        /*
		UPDATE  leaveapplied SET EndDate=DATE_SUB(pCreditDate, INTERVAL 1 DAY),CreateType='S' WHERE LeavAppID IN 
        (
        SELECT LeavAppID from((SELECT LA.LeavAppID from leaveapplied 
        LA LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID 
        LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
        where U.OrgID = pOrgID 
        AND LA.LeaveTypeID=pLeaveTypeID 
        AND LA.UserID=pUserID 
        AND LA.StartDate <=pCreditDate 
        AND pCreditDate<LA.EndDate
        AND LS.LeaveMasterStatusID IN('1','2')
        ) LAPID1));
        
        INSERT INTO leaveapplied (UserID, LeaveTypeID,LeaveStatusID,AppliedDate,StartDate,EndDate,
        IsHalfDay,WhichHalf,LeaveReason,StatusUpdateDate,StatusUpdteBy,CreateType)
		SELECT UserID,LeaveTypeID,LeaveStatusID,AppliedDate,
        pCreditDate,EndDate,IsHalfDay,WhichHalf,
        LeaveReason,StatusUpdateDate,StatusUpdteBy,'S' from temp_LeaveApplied;
        */
        
        UPDATE  leaveapplied SET EndDate=pCreditDate,CreateType='S' WHERE LeavAppID IN 
        (
        SELECT LeavAppID from((SELECT LA.LeavAppID from leaveapplied 
        LA LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID 
        LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
        where U.OrgID = pOrgID 
        AND LA.LeaveTypeID=pLeaveTypeID 
        AND LA.UserID=pUserID 
        AND LA.StartDate <=pCreditDate 
        AND pCreditDate<LA.EndDate
        AND LS.LeaveMasterStatusID IN('1','2')
        ) LAPID1));
        
        INSERT INTO leaveapplied (UserID, LeaveTypeID,LeaveStatusID,AppliedDate,StartDate,EndDate,
        IsHalfDay,WhichHalf,LeaveReason,StatusUpdateDate,StatusUpdteBy,CreateType)
		SELECT UserID,LeaveTypeID,LeaveStatusID,AppliedDate,
        DATE_ADD(pCreditDate, INTERVAL 1 DAY),EndDate,IsHalfDay,WhichHalf,
        LeaveReason,StatusUpdateDate,StatusUpdteBy,'S' from temp_LeaveApplied;
        
		SET LID = LAST_INSERT_ID();
		create TEMPORARY TABLE temp_LeaveApplied2 like temp_LeaveApplied;
        insert temp_LeaveApplied2 select * from temp_LeaveApplied;
        
        create TEMPORARY TABLE temp_LeaveApplied3 like temp_LeaveApplied;
        insert temp_LeaveApplied3 select * from temp_LeaveApplied;
        
		INSERT INTO leaveappliedstatuslog
		(
		 LeavAppID, 
		 LeaveStatusID, 
         StatusNote,
		 StatusAppliedDate
		) 
		VALUES 
		(
		  LID, 
		 (SELECT LeaveStatusID from temp_LeaveApplied2), 
         '',
		 (SELECT StatusUpdateDate from temp_LeaveApplied3)
		);
       
        drop table if exists temp_LeaveApplied;
        drop table if exists temp_LeaveApplied2;
        drop table if exists temp_LeaveApplied3;
        
        End if;
		/* RESET ALL LEAVE TO IsCountable='N' */
		UPDATE  leaveapplied SET IsCountable='N' WHERE LeavAppID IN 
        (
        SELECT LeavAppID from ((SELECT LA.LeavAppID from leaveapplied 
        LA LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID 
        LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
        where U.OrgID = pOrgID 
        AND LA.LeaveTypeID=pLeaveTypeID 
        AND LA.UserID=pUserID
        AND LA.EndDate<=pCreditDate
        AND LA.IsCountable='Y'
        ) LAPID1));
            
    End If;
  commit;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_leavestatus` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_leavestatus`(

        IN	pLeaveStatusID	int(11),

        IN	pLeaveMasterStatusID int(11),

        IN	pLeaveStatusText varchar(50),

        in	pOrgID int(11),

        in	pTypeFlg int(11)

     )
BEGIN
	DECLARE EXIT HANDLER FOR 1451 
	SELECT 'FKC-ERROR'; /*Foreign Key Constraint Error*/

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO leavestatus

				(

					LeaveStatusText,

                    LeaveMasterStatusID,

                    OrgID

				)

				VALUES

				(

					pLeaveStatusText,

                    pLeaveMasterStatusID,

                    pOrgID

				);

		elseif pTypeFlg= 2 Then

				Update leavestatus Set 

				LeaveStatusText= pLeaveStatusText,

                LeaveMasterStatusID= pLeaveMasterStatusID,

                OrgID= pOrgID

				Where LeaveStatusID= pLeaveStatusID;

		elseif pTypeFlg= 3 Then

				Select LS.*,LMS.leaveMasterStatus from leavestatus LS LEFT JOIN leavemasterstatus LMS

				ON LS.LeaveMasterStatusID = LMS.leaveMasterID where LeaveStatusID= pLeaveStatusID;

        elseif pTypeFlg= 4 Then

				delete from leavestatus where LeaveStatusID= pLeaveStatusID and OrgID = pOrgID;
                select 'SUCCESS';
        elseif pTypeFlg= 5 Then
				select * from leavestatus where LeaveMasterStatusID = pLeaveMasterStatusID and OrgID = pOrgID;
        elseif pTypeFlg= 6 Then
				select * from leavestatus where LeaveStatusText = pLeaveStatusText and OrgID = pOrgID;        

		else

				select LS.*,LMS.leaveMasterStatus from leavestatus LS LEFT JOIN leavemasterstatus LMS

				ON LS.LeaveMasterStatusID = LMS.leaveMasterID where OrgID= pOrgID;

		End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_leavetype` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_leavetype`(

        IN	pLeaveTypeID int(11),

        IN  pLeaveMasterTypeID int(11),

        IN	pLeaveTypeText varchar(50),

        IN	pLeaveDescription text,

        IN	pOrgID int(11),

        IN	pTypeFlg int(11)

     )
BEGIN

	DECLARE EXIT HANDLER FOR 1451 
	SELECT 'FKC-ERROR'; /*Foreign Key Constraint Error*/
    start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO leavetype

				(

					LeaveMasterTypeID,

                    LeaveTypeText,

                    LeaveTypeDescription,

                    OrgID

				)

				VALUES

				(

                    pLeaveMasterTypeID,

                    pLeaveTypeText,

                    pLeaveDescription,

                    pOrgID

				);

		elseif pTypeFlg= 2 Then

				Update leavetype Set

                LeaveMasterTypeID= pLeaveMasterTypeID,

				LeaveTypeText= pLeaveTypeText,

                OrgID= pOrgID,

                LeaveTypeDescription= pLeaveDescription

				Where LeaveTypeID= pLeaveTypeID;

        elseif pTypeFlg= 3 Then

				Select LT.*,LMT.LeaveMasterType 

				from leavetype LT LEFT JOIN leavemastertype LMT

				ON LT.LeaveMasterTypeID = LMT.LeaveMasterTypeID

				where LT.OrgID = pOrgID AND LT.LeaveTypeID = pLeaveTypeID;

        elseif pTypeFlg= 4 Then

				delete from leavetype where LeaveTypeID = pLeaveTypeID and OrgID = pOrgID;
				select 'SUCCESS';
        elseif pTypeFlg= 5 Then
				select * from leavetype where LeaveMasterTypeID = pLeaveMasterTypeID and OrgID = pOrgID;
        elseif pTypeFlg=6 Then
				select * from leavetype where LeaveTypeText= pLeaveTypeText and OrgID= pOrgID;

		else

				Select LT.*,LMT.LeaveMasterType 

				from leavetype LT LEFT JOIN leavemastertype LMT

				ON LT.LeaveMasterTypeID = LMT.LeaveMasterTypeID

				where LT.OrgID = pOrgID;

		End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_nexapiexceptions` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_nexapiexceptions`(

        In	pExcptionID	int(11),

        IN	pErrorCode	varchar(15),

        in	pErrMessage	varchar(245),

        in	pTypeFlg int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO nexapiexceptions

				(

					ErrorCode,

                    ErrMessage

				)

				VALUES

				(

					pErrorCode,

                    pErrMessage

				);

		elseif pTypeFlg= 2 Then



    

				Update nexapiexceptions Set 

				ErrorCode= pErrorCode,

                ErrMessage= pErrMessage

				Where ExcptionID= pExcptionID

				;

			Else

				Select * from nexapiexceptions;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_nexmodule` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_nexmodule`(

        In	pModuleID	int(11),

        IN	pModuleName	varchar(50),

        in	pTypeFlg int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO nexmodule

				(

					ModuleName

				)

				VALUES

				(

					pModuleName

				);

		elseif pTypeFlg= 2 Then



    

				Update nexmodule Set 

				ModuleName= pModuleName

				Where ModuleID= pModuleID

				;

			Else

				Select * from nexmodule;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_nexoperator` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_nexoperator`(

        In	pOperatorID	int(11),

        IN	pLoginName	varchar(150),

        in	pPassword	varchar(50),

        in	pName		varchar(50),

        in	pEmail		varchar(150),

        in	pEmployeeID	varchar(50),

        in	pTypeFlg int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO nexoperator

				(

					LoginName,

                    Password,

                    Name,

                    Email,

                    EmployeeID

				)

				VALUES

				(

					pLoginName,

                    pPassword,

                    pName,

                    pEmail,

                    pEmployeeID

				);

		elseif pTypeFlg= 2 Then



    

				Update nexoperator Set 

				LoginName= pLoginName,

                Password= pPassword,

                Name= pName,

                Email= pEmail,

                EmployeeID= pEmployeeID

				Where OperatorID= pOperatorID

				;

			Else

				Select * from nexoperator;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_nexorganizationpackage` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_nexorganizationpackage`(

        In	pOrgPkgID	int(11),

        IN	pPackageID	Int(11),

        in	pOrgID 		int(11),

        in	pTypeFlg 	int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO nexorganizationpackage

				(

					PackageID,

                    OrgID

				)

				VALUES

				(

					pPackageID,

                    pOrgID

				);

		elseif pTypeFlg= 2 Then

				Update nexorganizationpackage Set 

				PackageID= pPackageID,

                OrgID= pOrgID

				Where OrgPkgID= pOrgPkgID

				;

			Else

				Select * from nexorganizationpackage;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_nexpackage` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_nexpackage`(

        In	pPackageID	int(11),

        IN	pPackageName	varchar(50),

        in	pPackageTypeID int(11),

        in	pTypeFlg int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO nexpackage

				(

					PackageName,

                    PackageTypeID

				)

				VALUES

				(

					pPackageName,

                    pPackageTypeID

				);

		elseif pTypeFlg= 2 Then

				Update nexpackage Set 

				PackageName= pPackageName,

                PackageTypeID= pPackageTypeID

				Where PackageID= pPackageID

				;

			Else

				Select * from nexpackage;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_nexpackagemodule` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_nexpackagemodule`(

        In	pPackageModuleID	int(11),

        IN	pPackageTypeID	Int(11),

        in	pModuleID 		int(11),

        in	pTypeFlg 	int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO nexpackagemodule

				(

					PackageTypeID,

                    ModuleID

				)

				VALUES

				(

					pPackageTypeID,

                    pModuleID

				);

		elseif pTypeFlg= 2 Then

				Update nexpackagemodule Set 

				PackageTypeID= pPackageTypeID,

                ModuleID= pModuleID

				Where PackageModuleID= pPackageModuleID

				;

			Else

				Select * from nexpackagemodule;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_nexpackagetype` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_nexpackagetype`(

        In	pPackageTypeID	int(11),

        IN	pTypeName		varchar(50),

        in	pTypeFlg int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO nexpackagetype

				(

					TypeName

				)

				VALUES

				(

					pTypeName

				);

		elseif pTypeFlg= 2 Then



    

				Update nexpackagetype Set 

				TypeName= pTypeName

				Where PackageTypeID= pPackageTypeID

				;

			Else

				Select * from nexpackagetype;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_notificationtype` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_notificationtype`(

        In	pNotificationTypeID	int(11),

        IN	pNotificationTypeName varchar(50),

        in	pOrgID int(11),

        in	pTypeFlg int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO notificationtype

				(

					NotificationTypeName,

                    OrgID

                    

				)

				VALUES

				(

					pNotificationTypeName,

                    pOrgID

                    

				);

		elseif pTypeFlg= 2 Then

				Update notificationtype Set 

				NotificationTypeName= pNotificationTypeName,

                OrgID= pOrgID

				Where NotificationTypeID= pNotificationTypeID

				;

			Else

				Select * from notificationtype;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_odapplied` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_odapplied`(
        in	pOdID	text,
        in	pUserID int(11),
		in	pOdDate date,
        in  pOdStartTime datetime,
        in  pOdEndTime datetime,
		in  pOdReason text,
        in  pOdLocationLatLon varchar(255),
        in  pOdLocation varchar(255),
        in	pAppliedDate datetime,
        in  pRequestStatus varchar(10),
        in	pStatusUpdateDate datetime,
        in	pStatusUpdteBy int(11),
        in	pTypeFlg smallint(1)
     )
BEGIN
	DECLARE COMPOFID int;
    DECLARE i,NOOFOD int;
	start transaction;
    if pTypeFlg= 1 Then
			INSERT INTO odapplied
				(
					UserID,
                    OdDate,
                    OdStartTime,
                    OdEndTime,
                    OdReason,
                    OdLocationLatLon,
                    OdLocation,
                    AppliedDate,
                    RequestStatus,
                    StatusUpdateDate,
                    StatusUpdteBy
				)
				VALUES
				(
					pUserID,
                    pOdDate,
                    pOdStartTime,
                    pOdEndTime,
                    pOdReason,
                    pOdLocationLatLon,
                    pOdLocation,
                    pAppliedDate,
                    pRequestStatus,
                    pStatusUpdateDate,
                    pStatusUpdteBy
				);
                /*SET COMPOFID = LAST_INSERT_ID();*/
		elseif pTypeFlg= 2 Then
				call splitter(pOdID,',');
                select count(SplitValue) INTO NOOFOD from splitResultsTmpTable;
				set i = 1;
                WHILE i <= NOOFOD DO
					Update odapplied Set 
					RequestStatus= pRequestStatus,
					StatusUpdateDate= pStatusUpdateDate,
					StatusUpdteBy= pStatusUpdteBy
					Where OdID= (select SplitValue from splitResultsTmpTable where TmpID = i);
                	SET i = i + 1;
				END WHILE;     
		elseif pTypeFlg= 3 Then 
				Select OD.OdID,OD.UserID,OD.OdDate,OD.OdStartTime,OD.OdEndTime,
				(TIMESTAMPDIFF(Second,OD.OdStartTime, OD.OdEndTime)) TotalHours,
                OD.OdReason,OdLocationLatLon,OD.OdLocation,
                OD.OdLocation,OD.AppliedDate,OD.RequestStatus
				from odapplied OD where OD.UserID = pUserID order by OD.OdDate desc;
		elseif pTypeFlg= 4 Then 
				Select OD.OdID,OD.UserID,OD.OdDate,OD.OdStartTime,OD.OdEndTime,
                (TIMESTAMPDIFF(Second,OD.OdStartTime, OD.OdEndTime)) TotalHours,
                OD.OdReason,OdLocationLatLon,OD.OdLocation,OD.AppliedDate,OD.RequestStatus
				from odapplied OD
                where OD.OdID IN (pOdID);
        elseif pTypeFlg= 5 Then
				Select OD.OdID,OD.OdDate,OD.OdStartTime,OD.OdEndTime,
                (TIMESTAMPDIFF(Second,OD.OdStartTime, OD.OdEndTime)) TotalHours,
                OdLocationLatLon,OD.OdLocation,OD.RequestStatus
				from odapplied OD
                where OD.RequestStatus = 'Approved' and OD.UserID = pUserID
                and (OD.OdDate >= date(pOdStartTime) and OD.OdDate <= date(pOdEndTime));
        else
			select 1;
		End If;
	commit;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_shift` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_shift`(
        In	pShiftID int(11),
        in	pOrgID int(11),
        in	pUserID int(11),
        in	pShiftTitle varchar(255),
        in	pDescription text,
        in	pStartTime time,
        in	pEndTime time,
        in  pAddedOn datetime,
        in  pisActive char(1),
        in	pTypeFlg int(11)
     )
BEGIN
	
	DECLARE LASTSHIFTID int;
    Declare UserRole varchar(10);	
    
	DECLARE EXIT HANDLER FOR 1451 
	SELECT 'FKC-ERROR'; /*Foreign Key Constraint Error*/
    
    if pTypeFlg= 1 Then
			INSERT INTO shift
				(
					OrgID,
                    UserID,
                    ShiftTitle,
					Description,
					StartTime,
					EndTime,
                    AddedOn,
                    isActive
				)
				VALUES
				(
					pOrgID,
                    pUserID,
                    pShiftTitle,
					pDescription,
					pStartTime,
					pEndTime,
					pAddedOn,
                    pisActive
                    
				);
                SET LASTSHIFTID = LAST_INSERT_ID();
                select LASTSHIFTID;
		elseif pTypeFlg= 2 Then
				UPDATE shift S SET 
                S.ShiftTitle = pShiftTitle,
				S.Description = pDescription,
				S.StartTime = pStartTime,
				S.EndTime = pEndTime,
                S.isActive = pisActive
                WHERE S.ShiftID = pShiftID;
		elseif pTypeFlg= 3 Then
				Select S.ShiftID,S.ShiftTitle,S.Description,
                S.StartTime,S.EndTime,S.AddedOn,S.isActive
				from shift S
				where S.ShiftID=pShiftID AND S.OrgID=pOrgID;
		elseif pTypeFlg= 4 Then
                Delete from shift Where ShiftID= pShiftID;
				select 'SUCCESS';
		elseif pTypeFlg= 5 Then
				Select IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur INNER JOIN userworkinfo uwi on ur.roleID = uwi.roleID  
				where uwi.UserID = U.UserID), 'EMPLOYEE') into UserRole from userpersonalinfo U where U.UserID = pUserID;
                
                if UserRole = 'ADMIN' then
					Select S.ShiftID,S.ShiftTitle,S.Description,
					S.StartTime,S.EndTime,S.AddedOn,S.isActive
					from shift S
					where S.OrgID=pOrgID order by S.ShiftID desc;
				else
					Select S.ShiftID,S.ShiftTitle,S.Description,
					S.StartTime,S.EndTime,S.AddedOn,S.isActive
					from shift S
					where S.OrgID=pOrgID and S.UserID = pUserID order by S.ShiftID desc;
                end if;
        elseif pTypeFlg= 6 Then
				Select S.ShiftID,S.ShiftTitle,S.Description,
                S.StartTime,S.EndTime,S.AddedOn,S.isActive
				from shift S
				where S.OrgID= pOrgID and S.UserID = pUserID and S.ShiftTitle= pShiftTitle;
        elseif pTypeFlg= 7 Then        
				Select ST.ShiftTypeTitle from shifttype ST 
				where ST.OrgID=pOrgID and ST.isActive = 'Y' 
                and (pStartTime >= StartTime and pStartTime <= EndTime) limit 0,1;
         elseif pTypeFlg= 8 Then
				UPDATE shift S SET 
                S.isActive = pisActive
                WHERE S.ShiftID = pShiftID;
        End If;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_shiftAssignUser` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_shiftAssignUser`(
	in	pShiftID int(11),
    in  pOrgID int(11),
    in	pUserID text,
	in	pAddedOn datetime,
	in	pTypeFlg int(11)
)
BEGIN
	DECLARE i,NOOFUSERSHFT int;
	DECLARE USERSHFT text;
    
	if pTypeFlg= 1 Then
		start transaction;
		/*Delete from all related tables*/
		delete from usershift where ShiftID = pShiftID;
		/*Insert into usershift table*/
		if pUserID!='' then
				call splitter(pUserID,',');
				select count(SplitValue) INTO NOOFUSERSHFT from splitResultsTmpTable;
				set i = 1;
				WHILE i <= NOOFUSERSHFT DO
					select SplitValue INTO USERSHFT from splitResultsTmpTable where TmpID = i;
					INSERT INTO usershift
					(
						ShiftID,
						UserID,
						EffectedFrom,
						AddedOn
					)
					VALUES
					(
						pShiftID,
						stringSplit(USERSHFT,'~',1),
						stringSplit(USERSHFT,'~',2),
						pAddedOn
					);
					SET i = i + 1;
				END WHILE;
			end if; 
		commit; 
    elseif pTypeFlg= 2 Then
		select US.UserID,concat(U.FName,' ',U.LName) UName, U.EmployeeID,US.EffectedFrom,US.AddedOn
        from  usershift US LEFT JOIN userpersonalinfo U ON US.UserID = U.UserID
        where US.ShiftID = pShiftID;
	elseif  pTypeFlg = 3 Then
			if pShiftID != 0 then 
				select if(count(US.ShiftID)>0,'Y','N') as isShift,concat(U.FName,' ',U.LName) FullName,U.EmployeeID 
                from usershift US LEFT JOIN userpersonalinfo U ON US.UserID = U.UserID
                where US.UserID = pUserID and US.EffectedFrom = pAddedOn and US.ShiftID != pShiftID;
			else
				select if(count(US.ShiftID)>0,'Y','N') as isShift,concat(U.FName,' ',U.LName) FullName,U.EmployeeID  
                from usershift US LEFT JOIN userpersonalinfo U ON US.UserID = U.UserID
                where US.UserID = pUserID and US.EffectedFrom = pAddedOn;
			end if;
    end if;         
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_shiftType` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_shiftType`(
        In	pShiftTypeID int(11),
        in	pOrgID int(11),
        in	pShiftTypeTitle varchar(255),
        in	pDescription text,
        in	pStartTime time,
        in	pEndTime time,
        in  pAddedOn datetime,
        in  pisActive char(1),
        in	pTypeFlg int(11)
     )
BEGIN
	
	DECLARE LASTSHIFTTYPEID int;
    
     DECLARE EXIT HANDLER FOR 1451 
	 SELECT 'FKC-ERROR'; /*Foreign Key Constraint Error*/
    
    if pTypeFlg= 1 Then
			INSERT INTO shifttype
				(
					OrgID,
                    ShiftTypeTitle,
					Description,
					StartTime,
                    EndTime,
                    AddedOn,
                    isActive
				)
				VALUES
				(
					pOrgID,
                    pShiftTypeTitle,
					pDescription,
					pStartTime,
                    pEndTime,
					pAddedOn,
                    pisActive
                    
				);
                SET LASTSHIFTTYPEID = LAST_INSERT_ID();
                select LASTSHIFTTYPEID;
		elseif pTypeFlg= 2 Then
				UPDATE shifttype ST SET 
                ST.ShiftTypeTitle = pShiftTypeTitle,
				ST.Description = pDescription,
				ST.StartTime = pStartTime,
                ST.EndTime = pEndTime,
                ST.isActive = pisActive
                WHERE ST.ShiftTypeID = pShiftTypeID;
		elseif pTypeFlg= 3 Then
				Select ST.ShiftTypeID,ST.ShiftTypeTitle,ST.Description,
                ST.StartTime,ST.EndTime,ST.AddedOn,ST.isActive
				from shifttype ST
				where ST.ShiftTypeID=pShiftTypeID AND ST.OrgID=pOrgID;
		elseif pTypeFlg= 4 Then
                Delete from shifttype Where ShiftTypeID= pShiftTypeID;
				select 'SUCCESS';
		elseif pTypeFlg= 5 Then
				Select ST.ShiftTypeID,ST.ShiftTypeTitle,ST.Description,
                ST.StartTime,ST.EndTime,ST.AddedOn,ST.isActive
				from shifttype ST
				where ST.OrgID=pOrgID order by ST.ShiftTypeID desc;
        elseif pTypeFlg= 6 Then
				Select ST.ShiftTypeID,ST.ShiftTypeTitle,ST.Description,
                ST.StartTime,ST.EndTime,ST.AddedOn,ST.isActive
				from shifttype ST
				where ST.OrgID= pOrgID and 
                ST.ShiftTypeTitle= pShiftTypeTitle;
        elseif pTypeFlg= 7 Then
				if pShiftTypeID!=0 then
					Select ST.ShiftTypeID,ST.ShiftTypeTitle,ST.Description,
					ST.StartTime,ST.EndTime,ST.AddedOn,ST.isActive
					from shifttype ST
					where ST.OrgID= pOrgID and 
                    ST.ShiftTypeID!= pShiftTypeID and
					(
						(ST.StartTime >= pStartTime and ST.EndTime <= pEndTime) 
						OR 
						(ST.EndTime >= pStartTime and ST.StartTime <= pEndTime)
					);   
                 else
					Select ST.ShiftTypeID,ST.ShiftTypeTitle,ST.Description,
					ST.StartTime,ST.EndTime,ST.AddedOn,ST.isActive
					from shifttype ST
					where ST.OrgID= pOrgID and 
					(
						(ST.StartTime >= pStartTime and ST.EndTime <= pEndTime) 
						OR 
						(ST.EndTime >= pStartTime and ST.StartTime <= pEndTime)
					);  
                 end if;
		elseif pTypeFlg= 8 Then
				UPDATE shifttype ST SET 
                ST.isActive = pisActive
                WHERE ST.ShiftTypeID = pShiftTypeID;
        End If;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_supervisorapproval` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_supervisorapproval`(

       in	pSupervisorApprvID int(11),
        in	pUserID text,
		in  pSupervisorID int(11),
		in  pAppliedDate datetime,
		in  pRequestStatus varchar(10),
		in  pStatusNote text,
		in  pStatusUpdateDate datetime,
		in  pStatusUpdteBy int(11),
        in  pOrgID int(11),
        in  pTypeFlg smallint(1)

     )
BEGIN

	DECLARE SUPERVAPPROVL,isAlreadyRequested,isAlreadyRequestedID int;
    DECLARE i,NOOFSPV int;

	start transaction;

    if pTypeFlg= 1 Then

			

            select count(SAPV.SupervisorApprvID) INTO isAlreadyRequested

            from supervisorapproval SAPV where SAPV.UserID = pUserID

            AND SAPV.SupervisorID = pSupervisorID AND SAPV.OrgID = pOrgID;

            

            if isAlreadyRequested = 0 then 

            

				INSERT INTO supervisorapproval

				(

					UserID,

					SupervisorID,

					AppliedDate,

					RequestStatus,

					StatusNote,

					StatusUpdateDate,

					StatusUpdteBy,

					OrgID

				)

				VALUES

				(

					pUserID,

					pSupervisorID,

					pAppliedDate,

					pRequestStatus,

					pStatusNote,

					pStatusUpdateDate,

					pStatusUpdteBy,

					pOrgID

				);

          else

			select SAPV.SupervisorApprvID INTO isAlreadyRequestedID

            from supervisorapproval SAPV where SAPV.UserID = pUserID

            AND SAPV.SupervisorID = pSupervisorID AND SAPV.OrgID = pOrgID;

            

			Update supervisorapproval Set 

			AppliedDate= pAppliedDate,

			RequestStatus= pRequestStatus

			Where SupervisorApprvID= isAlreadyRequestedID;

          end if;

                

		/*SET SUPERVAPPROVL = LAST_INSERT_ID();*/

		elseif pTypeFlg= 2 Then

			call splitter(pUserID,',');
			select count(SplitValue) INTO NOOFSPV from splitResultsTmpTable;
			set i = 1;
			WHILE i <= NOOFSPV DO 
                Update supervisorapproval Set 

				RequestStatus= pRequestStatus,

                StatusNote= pStatusNote,

				StatusUpdateDate= pStatusUpdateDate,

				StatusUpdteBy= pStatusUpdteBy

				Where UserID = (select SplitValue from splitResultsTmpTable where TmpID = i) AND SupervisorID = pSupervisorID AND OrgID = pOrgID;
                SET i = i + 1;
			END WHILE;

		elseif pTypeFlg= 3 Then 

				select SAPV.*,

                CONCAT(UP.FName,' ',UP.LName) as UserName,UP.EmployeeID as UserEmployeeID,UP.UserPicture

				from supervisorapproval SAPV

                LEFT JOIN userpersonalinfo UP ON SAPV.UserID = UP.UserID

                where SAPV.RequestStatus = 'Applied' and SAPV.SupervisorID = pSupervisorID;

		Else

				select SAPV.UserID,SAPV.SupervisorID,SAPV.AppliedDate,SAPV.RequestStatus,SAPV.StatusNote,SAPV.StatusUpdateDate,SAPV.StatusUpdteBy,SAPV.OrgID

				from supervisorapproval SAPV where SAPV.UserID IN (pUserID) AND SAPV.SupervisorID =pSupervisorID AND SAPV.OrgID = pOrgID;

		End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_Survey` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_Survey`(

        In	pSurveyID	int(11),

        IN	pOrigID		int(11),

        in	pTitle	varchar(200),

        in	pDescription	varchar(200),

        in	pCreatedOn	datetime(3),

        in	pExpiresOn	datetime(3),

        IN  pUserID  	VARCHAR(15),

		in	pPublishDate	Datetime,

        In	pTypeFlg		Int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO survey

				(

					OrgID,

					Title,

					Description,

					CreatedOn,

                    ExpiresOn,

                    CreatedBy,

                    PublishDate

				)

				VALUES

				(

					pOrigID			,

					pTitle			,

					pDescription	,

					pCreatedOn		,

					pExpiresOn		,

                    pUserID			,

					pPublishDate		

				);

		elseif pTypeFlg= 2 Then



    

				Update survey Set 

				OrgID= pOrigID, 

				Title= pTitle,

                Description= pDescription,

                CreatedOn= pCreatedOn,

                ExpiresOn= pExpiresOn,

                CreatedBy= pUserID,

                PublishDate= pPublishDate

				Where SurveyID= pSurveyID

				;

			Else

				Select * from survey;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_SurveyOption` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_SurveyOption`(

        In	pSurveyOptionID	int(11),

        IN	pQuestionID		int(11),

        in	pOptionText	varchar(50),

        in	pIsAnswer	tinyint(4),

        in	pAnswerText	Char(10),

        in	pTypeFlg int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO surveyoption

				(

					QuestionID,

                    OptionText,

                    IsAnswer,

                    AnswerText

				)

				VALUES

				(

					pQuestionID			,

					pOptionText			,

					pIsAnswer			,

					pAnswerText			

				);

		elseif pTypeFlg= 2 Then



    

				Update surveyoption Set 

				QuestionID= pQuestionID, 

				OptionText= pOptionText,

                IsAnswer= pIsAnswer,

                AnswerText= pAnswerText

				Where SurveyOptionID= pSurveyOptionID

				;

			Else

				Select * from surveyoption;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_surveyquestions` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_surveyquestions`(

        In	pSurveyQuestionID	int(11),

        IN	pQuestionText		varchar(200),

        in	pQuestionType	varchar(200),

        in	pOptions	varchar(2000),

        in	pSurveyID	Int(11),

        in	pTypeFlg int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO surveyquestions

				(

					QuestionText,

                    QuestionType,

                    Options,

                    SurveyID

				)

				VALUES

				(

					pQuestionText			,

					pQuestionType			,

					pOptions				,

					pSurveyID			

				);

		elseif pTypeFlg= 2 Then



    

				Update surveyquestions Set 

				QuestionText= pQuestionText, 

				QuestionType= pQuestionType,

                Options= pOptions,

                SurveyID= pSurveyID

				Where SurveyQuestionID= pSurveyQuestionID

				;

			Else

				Select * from surveyquestions;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_SurveyResponse` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_SurveyResponse`(

        In	pSurveyResponseID	int(11),

        IN	pSurveyID		int(11),

        in	pQuestionID	int(11),

        in	pResponseText	varchar(200),

        in	pUserID	int(11),

        in	pUserEmail varchar(150),

        in	pSelectedOptionID int(11),

        in	pTypeFlg int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO surveyresponse

				(

					SurveyID,

                    QuestionID,

                    ResponseText,

                    UserID,

                    UserEmail,

                    SelectedOptionID

				)

				VALUES

				(

					pSurveyID		,

					pQuestionID		,

					pResponseText	,

					pUserID			,

					pUserEmail 		,

                    pSelectedOptionID

				);

		elseif pTypeFlg= 2 Then

				Update surveyresponse Set 

				SurveyID= pSurveyID, 

				QuestionID= pQuestionID,

                ResponseText= pResponseText,

                UserID= pUserID,

                UserEmail= pUserEmail,

                SelectedOptionID= pSelectedOptionID

				Where SurveyResponseID= pSurveyResponseID;

			Else

				Select * from surveyresponse;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_teaminfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_teaminfo`(

        In	pTeamID	int(11),

        in	pTeamName	varchar(50),

        in	pDepartmentID	int(11),

        in	pOrgID	int(11),

        in	pTypeFlg int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO teaminfo

				(

					TeamName,

                    DepartmentID,

                    OrgID

				)

				VALUES

				(

					pTeamName			,

					pDepartmentID			,

					pOrgID				

				);

		elseif pTypeFlg= 2 Then



    

				Update teaminfo Set 

				TeamName= pTeamName, 

				DepartmentID= pDepartmentID,

                OrgID= pOrgID

				Where TeamID= pTeamID

				;

			Else

				Select * from teaminfo;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_teamsupervisor` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_teamsupervisor`(

        In	pTeamSupervisorID	int(11),

        in	pTeamID	int(11),

        in	pSupervisorID	int(11),

        in	pManagerID	int(11),

        in	pTypeFlg int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO teamsupervisor

				(

					TeamID,

                    SupervisorID,

                    ManagerID

				)

				VALUES

				(

					pTeamID			,

					pSupervisorID	,

					pManagerID				

				);

		elseif pTypeFlg= 2 Then



    

				Update teamsupervisor Set 

				TeamID= pTeamID, 

				SupervisorID= pSupervisorID,

                ManagerID= pManagerID

				Where TeamSupervisorID= pTeamSupervisorID

				;

			Else

				Select * from teamsupervisor;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_token` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_token`(

        In	pTokenID	int(11),

        in	pUserID	int(11),

        in	pAuthToken	varchar(250),

        in	pIssuedOn datetime(3),

        in	pExpiredOn	datetime(3),

        in	pTypeFlg int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO token

				(

					UserID,

                    AuthToken,

                    IssuedOn,

                    ExpiredOn

				)

				VALUES

				(

					pUserID			,

					pAuthToken		,

					pIssuedOn		,

                    pExpiredOn

				);

		elseif pTypeFlg= 2 Then



    

				Update token Set 

				UserID= pUserID, 

				AuthToken= pAuthToken,

                IssuedOn= pIssuedOn,

                ExpiredOn= pExpiredOn

				Where TokenID= pTokenID

				;

			Else

				Select * from token;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_userpersonalinfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_userpersonalinfo`(
        in	pUserID	int(11),
        in	pOrgID	int(11),
        in	pFName	varchar(50),
        in	pLName	varchar(50),
        in	pAddress varchar(150),
        in	pSiteLocation	varchar(150),
        in	pEmail		varchar(100),
        in	pWorkPhone	varchar(50),
        in	pCellNo		varchar(50),
        in	pEmployeeID	varchar(50),
        in	pDeptID		int(11),
        in	pAge		varchar(5),
		in	pDateOfJoining	varchar(10),
        in	pOthers		longtext,
        in	pCreatedByUserID int(11),
        in	pPwd		varchar(50),
        in	pPwdResetRequired tinyint(1),
        in	pDeleted	tinyint(1),
        in 	pDeptName	varchar(50),
        in pResignationDate date,
		in pReleaseDate date,
        in pReleaseType char(1),
        in pEmploymentType varchar(30),
        in	pTypeFlg int(11)
     )
BEGIN
	DECLARE EXIT HANDLER FOR 1451 
	SELECT 'FKC-ERROR'; /*Foreign Key Constraint Error*/
    
	start transaction;
    if pTypeFlg= 1 Then
    
			/*select @vCnt :=count(DeptID) from department where DepartmentName= pDeptName;
            
            if @vCnt=0 then
            
				INSERT INTO department
					(
						DepartmentName,
						OrgID
					)
					VALUES
					(
						pDeptName,
						pOrgID
					);
            End if;
            
            Select @vDeptID := DeptID from department where DepartmentName= pDeptName;*/
    
			INSERT INTO userpersonalinfo
				(
					OrgID,
                    FName,
                    LName,
                    Address,
                    SiteLocation,
                    Email,
                    WorkPhone,
                    CellNo,
                    EmployeeID,
                    DeptID,
                    Age,
                    DateOfJoining,
                    Others,
                    CreatedByUserID,
                    Pwd,
                    PwdResetRequired,
                    Deleted,
                    EmploymentType
				)
				VALUES
				(
					pOrgID			,
					pFName			,
					pLName			,
                    pAddress		,
                    pSiteLocation   ,
                    pEmail			,
                    pWorkPhone		,
                    pCellNo			,
                    pEmployeeID		,
                    NULL			,
                    pAge			,
                    if(pDateOfJoining = '', NULL, pDateOfJoining)  ,
                    pOthers			,
                    pCreatedByUserID,
                    pPwd			,
                    1,
                    pDeleted,
                    pEmploymentType
				);
                Select * from userpersonalinfo where Email = pEmail;
		elseif pTypeFlg= 2 Then
				Update userpersonalinfo U Set 
				U.FName= pFName,
                U.LName= pLName,
                U.Address= pAddress,
                U.SiteLocation = pSiteLocation,
                U.WorkPhone= pWorkPhone,
                U.CellNo= pCellNo,
                U.EmployeeID= pEmployeeID,
                U.Email= pEmail,
                U.DateOfJoining = if(pDateOfJoining = '', NULL, pDateOfJoining),
                U.DeptID= if(pDeptID = 0, NULL, pDeptID),
                U.ResignationDate = pResignationDate,
                U.ReleaseDate = pReleaseDate,
                U.ReleaseType = pReleaseType,
                U.EmploymentType = pEmploymentType
				Where U.UserID= pUserID and U.OrgID = pOrgID;
		elseif pTypeFlg= 3 Then 
				delete from userpersonalinfo where UserID = pUserID and OrgID = pOrgID;
                select 'SUCCESS';
        /*De-activate User*/
        elseif pTypeFlg= 4 Then 
				Update userpersonalinfo U Set 
				U.Deactivated= 'Y',
                U.DeactivatedOn = now()
				Where U.UserID= pUserID and U.OrgID = pOrgID;
                select 'SUCCESS';
		/*Re-activate User*/
        elseif pTypeFlg= 5 Then 
				Update userpersonalinfo U Set 
				U.Deactivated= 'N'
				Where U.UserID= pUserID and U.OrgID = pOrgID;
                select 'SUCCESS';
		/* check duplicate email*/
        elseif pTypeFlg= 6 Then 
				SELECT * FROM  userpersonalinfo U 
				WHERE U.Email= pEmail AND U.UserID != pUserID;
		/* check duplicate EmployeeID*/
        elseif pTypeFlg= 7 Then 
				SELECT * FROM  userpersonalinfo U 
				WHERE U.EmployeeID= pEmployeeID AND U.UserID != pUserID and U.OrgID = pOrgID;
			Else
				Select * from userpersonalinfo where Email= pEmail and OrgID = pOrgID;
		End If;
	commit;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_userphoto` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_userphoto`(

        In	pUserID	int(11),

        in	pOrgID	int(11),

        in  pPhoto  varchar(255)

     )
BEGIN



	Update userpersonalinfo Set 

	UserPicture = pPhoto

	Where UserID= pUserID and OrgID= pOrgID;

				

	Select UserID,UserPicture from userpersonalinfo Where UserID= pUserID;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_userproperty` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_userproperty`(

        In	pUserPropertyID	int(11),

        IN	pPropertyName	varchar(50),

        in	pPropertyType	varchar(50),

        in	pOrgID	int(11),

        in	pTypeFlg int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO userproperty

				(

					PropertyName,

                    PropertyType,

                    OrgID

				)

				VALUES

				(

                    pPropertyName,

                    pPropertyType,

                    pOrgID

				);

		elseif pTypeFlg= 2 Then

				Update userproperty Set 

				PropertyName= pPropertyName,

                PropertyType= pPropertyType,

                OrgID= pOrgID

				Where UserPropertyID= pUserPropertyID

				;

			Else

				Select * from userproperty;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_userrole` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_userrole`(

        In	pRoleID	int(11),

        IN	pRoleName	varchar(50),

        in	pActions varchar(250),

        in	pOrgID	int(11),

        in	pTypeFlg int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO userrole

				(

					RoleName,

                    Actions,

                    OrgID

				)

				VALUES

				(

					pRoleName,

                    pActions,

                    pOrgID

				);

		elseif pTypeFlg= 2 Then

				Update userrole Set 

				RoleName= pRoleName,

                Actions= pActions,

                OrgID= pOrgID

				Where RoleID= pRoleID

				;

			Else

				Select * from userrole;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_usertype` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_usertype`(

        In	pUserTypeID	int(11),

        IN	pUserEmploymentType	varchar(50),

        in	pOrgID	int(11),

        in	pTypeFlg int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO usertype

				(

					UserEmploymentType,

                    OrgID

				)

				VALUES

				(

                    pUserEmploymentType,

                    pOrgID

				);

		elseif pTypeFlg= 2 Then

				Update usertype Set 

				UserEmploymentType= pUserEmploymentType,

                OrgID= pOrgID

				Where UserTypeID= pUserTypeID

				;

			Else

				Select * from usertype;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_userworkinfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_userworkinfo`(

        In	pUserWorkInfoID	int(11),

        IN	pUserID	int(11),

        in	pRoleD	int(11),

        in	pTeamID	int(11),

        in	pTypeFlg int(11)

     )
BEGIN

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO userworkinfo

				(

					UserID,

                    RoleD,

                    TeamID

				)

				VALUES

				(

                    pUserID,

                    pRoleD,

                    pTeamID

				);

		elseif pTypeFlg= 2 Then

				Update userworkinfo Set 

				UserID= pUserID,

                RoleD= pRoleD,

                TeamID= pTeamID

				Where UserWorkInfoID= pUserWorkInfoID

				;

			Else

				Select * from userworkinfo;

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_visitor` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_visitor`(
        in	pVisitorID int(11),
        in  pOrgID int(11),
        in	pFullName varchar(255),
        in  pCompanyName varchar(255),
        in  pAddress text,
		in  pMobileNo varchar(15),
		in  pEmail varchar(255),
        in	pPhoto text,
        in  pSignature text,
        in	pSignUpDate datetime,
        in	pTypeFlg smallint(1)
     )
BEGIN
	DECLARE isExistVisitor,SLTDVISITORID int(5);
	
    if pTypeFlg= 1 Then
    
		select count(V.VisitorID) into isExistVisitor from visitor V 
        where V.MobileNo = pMobileNo and V.OrgID = pOrgID;
        
		if isExistVisitor = 0 then
			    start transaction;	
				INSERT INTO visitor
					(
						OrgID,
                        FullName,
						CompanyName,
                        Address,
						MobileNo,
						Email,
						Photo,
						Signature,
						SignUpDate
					)
					VALUES
					(
						pOrgID,
                        pFullName,
						pCompanyName,
                        pAddress,
						pMobileNo,
						pEmail,
						pPhoto,
						pSignature,
						pSignUpDate
					);
					SET SLTDVISITORID = LAST_INSERT_ID();
					select SLTDVISITORID as VISITORID;
			        commit;
		else
			select V.VisitorID as VISITORID from visitor V where V.MobileNo = pMobileNo and V.OrgID = pOrgID;
		end if;
	elseif  pTypeFlg= 2 Then
            Update visitor Set 
			FullName= pFullName,
			CompanyName = pCompanyName,
			Address = pAddress,
			Email = pEmail,
			Photo = pPhoto,
			Signature = pSignature
			Where VisitorID= pVisitorID;
	else
		  Select V.VisitorID,V.FullName,V.CompanyName,V.Address,V.MobileNo,V.Email,V.Photo,V.Signature
          from visitor V where V.MobileNo = pMobileNo and V.OrgID = pOrgID;
	end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_visitorAttendance` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_visitorAttendance`(
        in	pVisitorAttendanceID text,
        in  pVisitorID int(11),
        in  pMeetingID int(11),
        in	pCheckInTime datetime,
        in	pCheckInLocation varchar(255),
		in  pCheckOutTime datetime,
		in	pCheckOutLocation varchar(255),
		in  pMeetToName varchar(255),
        in	pMeetToMobileNo varchar(15),
        in  pMeetToUserID int(11),
        in  pMeetReason text,
        in  pLogTime datetime,
        in	pTypeFlg char(20)
     )
BEGIN
	DECLARE VISITORATTNID,SELECTEDMEETID,i,NOOFVISITORATTNID int;
    DECLARE VISITORATTNSTS varchar(50);
	
    if pTypeFlg= 'CHECKIN' Then
		start transaction;	
            INSERT INTO visitorattendance
				(
					VisitorID,
                    MeetingID,
                    CheckInTime,
                    CheckInLocation,
                    MeetToName,
                    MeetToMobileNo,
                    MeetToUserID,
                    MeetReason,
                    LogTime
				)
				VALUES
				(
					pVisitorID,
                    pMeetingID,
                    pCheckInTime,
                    pCheckInLocation,
                    pMeetToName,
                    pMeetToMobileNo,
                    pMeetToUserID,
                    pMeetReason,
                    pLogTime
				);
                SET VISITORATTNID = LAST_INSERT_ID();
                IF pMeetingID=0 THEN
					UPDATE visitorattendance SET MeetingID=VISITORATTNID,VisitorType='P' WHERE VisitorAttendanceID=VISITORATTNID;
				ELSE   
					UPDATE visitorattendance SET MeetingID=pMeetingID,VisitorType='C' WHERE VisitorAttendanceID=VISITORATTNID;
				END IF;
			select VISITORATTNID;
          commit;
	elseif pTypeFlg= 'CHECKOUT' Then
				/*Static Card*/
                if pMeetingID >0 then 
					select VA.VisitorAttendanceID,VA.VisitAttenStatus into VISITORATTNID,VISITORATTNSTS
					from visitorattendance VA 
					left join visitor V ON VA.VisitorID = V.VisitorID
					where V.OrgID = pMeetingID and VA.StaticQrCardNo = pVisitorID
					order by VA.VisitorAttendanceID desc limit 0,1;
                /*Dynamic Card*/
                else
					select VA.VisitorAttendanceID,VA.VisitAttenStatus into VISITORATTNID,VISITORATTNSTS
					from visitorattendance VA 
					left join visitor V ON VA.VisitorID = V.VisitorID
					where V.VisitorID = pVisitorID
					order by VA.VisitorAttendanceID desc limit 0,1;
                end if;
                case VISITORATTNSTS
                WHEN 'CheckedOut' THEN
					Update visitorattendance Set
					CheckOutLocation= pCheckOutLocation,
					CheckOutTime= pCheckOutTime
					Where VisitorAttendanceID= VISITORATTNID;
				ELSE
					Update visitorattendance Set
					VisitAttenStatus= 'CheckedOut-NotVarified',
					CheckOutLocation= pCheckOutLocation,
					CheckOutTime= pCheckOutTime
					Where VisitorAttendanceID= VISITORATTNID;
                END CASE;    
                
                select V.VisitorID,V.FullName,VA.VisitorAttendanceID,VA.MeetToUserID 
                from visitorattendance VA  LEFT JOIN visitor V ON VA.VisitorID = V.VisitorID 
                where VisitorAttendanceID= VISITORATTNID;
     elseif pTypeFlg= 'CANCEL' Then   
				Update visitorattendance Set 
				VisitAttenStatus= 'Cancelled'
				Where VisitorAttendanceID= pVisitorAttendanceID;
    elseif pTypeFlg= 'APRVCHECKIN' Then
				call splitter(pVisitorAttendanceID,',');
                select count(SplitValue) INTO NOOFVISITORATTNID from splitResultsTmpTable;
				set i = 1;
                WHILE i <= NOOFVISITORATTNID DO
					select MeetingID into SELECTEDMEETID from
					visitorattendance where VisitorAttendanceID = (select SplitValue from splitResultsTmpTable where TmpID = i);
					Update visitorattendance Set 
                    MeetingStatus= if(pCheckInLocation='Accepted','Accepted','Rejected'),
					VisitAttenStatus= if(VisitAttenStatus='CheckedIn',if(pCheckInLocation='Accepted','CheckedIn-Accepted','CheckedIn-Rejected'),VisitAttenStatus),
					HostCheckInRqstStsLogTime = pLogTime
					Where VisitAttenStatus IN ('CheckedIn','CheckedOut-NotVarified') and VisitorAttendanceID IN 
					(Select VisitorAttendanceID from (Select VisitorAttendanceID from visitorattendance where MeetingID = SELECTEDMEETID) as temp);
					SET i = i + 1;
				END WHILE;  
	elseif pTypeFlg= 'APRVCHECKOUT' Then
                select MeetingID into SELECTEDMEETID from
                visitorattendance where VisitorAttendanceID= pVisitorAttendanceID;
                Update visitorattendance Set 
				VisitAttenStatus= 'CheckedOut',
                HostSignedOffLogTime = pLogTime
				Where MeetingStatus='Accepted' and VisitAttenStatus IN('CheckedIn-Accepted','CheckedOut-NotVarified') and VisitorAttendanceID IN 
                (Select VisitorAttendanceID from (Select VisitorAttendanceID from visitorattendance where MeetingID = SELECTEDMEETID) as temp);
    elseif pTypeFlg= 'PNDCHECKOUTLIST' Then 
				Select VA.MeetingID,VA.VisitorType,V.VisitorID,V.FullName,V.CompanyName,V.Address,V.MobileNo,V.Email,V.Photo,V.Signature,
                VA.VisitorAttendanceID,VA.CheckInTime,VA.CheckInLocation,VA.CheckOutTime,VA.CheckOutLocation,VA.MeetToName,VA.MeetToMobileNo,VA.MeetToUserID,
                VA.MeetReason,VA.VisitAttenStatus,VA.MeetingStatus
                from visitorattendance VA
                LEFT JOIN visitor V ON VA.VisitorID = V.VisitorID
                where VA.MeetToUserID = pMeetToUserID and VisitAttenStatus IN ('CheckedIn','CheckedIn-Accepted','CheckedOut-NotVarified')
                order by VA.MeetingID desc,VA.VisitorAttendanceID asc;
	elseif pTypeFlg= 'APPRVCHECKOUTLIST' Then 
				Select VA.MeetingID,VA.VisitorType,V.VisitorID,V.FullName,V.CompanyName,V.Address,V.MobileNo,V.Email,V.Photo,V.Signature,
                VA.VisitorAttendanceID,VA.CheckInTime,VA.CheckInLocation,VA.MeetToName,VA.MeetToMobileNo,VA.MeetToUserID,
                VA.MeetReason,VA.VisitAttenStatus,VA.MeetingStatus
                from visitorattendance VA
                LEFT JOIN visitor V ON VA.VisitorID = V.VisitorID
                where VA.MeetToUserID = pMeetToUserID and VisitAttenStatus = 'CheckedOut'
				order by VA.MeetingID desc,VA.VisitorAttendanceID asc;
    elseif pTypeFlg= 'ALLCHECKOUTLIST' Then 
				Select VA.MeetingID,VA.VisitorType,V.VisitorID,V.FullName,V.CompanyName,V.Address,V.MobileNo,V.Email,V.Photo,V.Signature,
                VA.VisitorAttendanceID,VA.CheckInTime,VA.CheckInLocation,VA.CheckOutTime,VA.CheckOutLocation,VA.MeetToName,VA.MeetToMobileNo,VA.MeetToUserID,
                VA.MeetReason,VA.VisitAttenStatus,VA.MeetingStatus,VA.HostCheckInRqstStsLogTime,VA.HostSignedOffLogTime,VA.StaticQrCardNo
                from visitorattendance VA
                LEFT JOIN visitor V ON VA.VisitorID = V.VisitorID
                where VA.MeetToUserID = pMeetToUserID
				order by VA.MeetingID desc,VA.VisitorAttendanceID asc;           
    Else
				Select VA.MeetingID,VA.VisitorType,V.VisitorID,V.OrgID,V.FullName,V.CompanyName,V.Address,V.MobileNo,V.Email,V.Photo,V.Signature,
                VA.VisitorAttendanceID,VA.CheckInTime,VA.CheckInLocation,VA.MeetToName,VA.MeetToMobileNo,VA.MeetToUserID,
                VA.MeetReason,VA.VisitAttenStatus,VA.MeetingStatus
                from visitorattendance VA
                LEFT JOIN visitor V ON VA.VisitorID = V.VisitorID
                where VA.VisitorAttendanceID = pVisitorAttendanceID
				order by VA.MeetingID desc,VA.VisitorAttendanceID asc;
	End If;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_weekends` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_weekends`(

        In	pWeekendsID	int(11),

        in	pDayName varchar(155),

        in	pOrgID int(11),

		in  pShowYear varchar(4),

        in	pTypeFlg int(11)

     )
BEGIN

	DECLARE LASTWEEKENDSID int;

	start transaction;

    if pTypeFlg= 1 Then

			INSERT INTO weekends

				(

					DayName,

					OrgID

				)

				VALUES

				(

					pDayName,

					pOrgID

				);

                SET LASTWEEKENDSID = LAST_INSERT_ID();

                select LASTWEEKENDSID;

                

		elseif pTypeFlg= 2 Then

				Update weekends Set 

                DayName= pDayName

				Where WeekendsID= pWeekendsID

				;

                

		elseif pTypeFlg= 3 Then

				if pShowYear='' Then

					Select W.DayName, W.OrgID

                    from weekends W

                    where W.WeekendsID=pWeekendsID AND W.OrgID=pOrgID order by W.WeekendsID desc;

                Else

					Select W.DayName, W.OrgID

                    from weekends W

                    where W.WeekendsID=pWeekendsID AND W.OrgID=pOrgID 

					order by W.WeekendsID desc;

				End If;

                

		elseif pTypeFlg= 4 Then

				Delete from departmentweekends 

				Where WeekendsID= pWeekendsID;

                

                Delete from weekends 

				Where WeekendsID= pWeekendsID;

		

        elseif pTypeFlg= 5 Then

					Select W.DayName, W.OrgID, W.WeekendsID

                    from weekends W

                    where W.OrgID=pOrgID 

					order by W.WeekendsID desc;

		elseif pTypeFlg= 6 Then

					Select W.WeekendsID

                    from weekends W

                    where W.OrgID=pOrgID AND W.DayName=pDayName;

		End If;

        

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_AddUpdateShow_weekends2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_AddUpdateShow_weekends2`(
        In	pWeekendsID	int(11),
        in	pDayName varchar(155),
        in	pOrgID int(11),
		in  pShowYear varchar(4),
        in	pTypeFlg int(11)
     )
BEGIN
	DECLARE LASTWEEKENDSID int;
	start transaction;
    if pTypeFlg= 1 Then
			INSERT INTO weekends
				(
					DayName,
					OrgID
				)
				VALUES
				(
					pDayName,
					pOrgID
				);
                SET LASTWEEKENDSID = LAST_INSERT_ID();
                select LASTWEEKENDSID;
                
		elseif pTypeFlg= 2 Then
				Update weekends Set 
                DayName= pDayName
				Where WeekendsID= pWeekendsID
				;
                
		elseif pTypeFlg= 3 Then
				if pShowYear='' Then
					Select W.DayName, W.OrgID
                    from weekends W
                    where W.WeekendsID=pWeekendsID AND W.OrgID=pOrgID order by W.WeekendsID desc;
                Else
					Select W.DayName, W.OrgID
                    from weekends W
                    where W.WeekendsID=pWeekendsID AND W.OrgID=pOrgID 
					order by W.WeekendsID desc;
				End If;
                
		elseif pTypeFlg= 4 Then
                Delete from weekends 
				Where WeekendsID= pWeekendsID;
        elseif pTypeFlg= 5 Then
					Select W.DayName, W.OrgID, W.WeekendsID
                    from weekends W
                    where W.OrgID=pOrgID 
					order by W.WeekendsID desc;
		elseif pTypeFlg= 6 Then
					Select W.WeekendsID
                    from weekends W
                    where W.OrgID=pOrgID AND W.DayName=pDayName;
		End If;
        
	commit;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_addUserPersonalInfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_addUserPersonalInfo`(



in `@pFName` varchar(50),



in `@pLName` varchar(50),



in `@pAddress` varchar(150),



in `@pEmail` varchar(50),



in `@pWorkPhone` varchar(20),



in `@pCellNo` varchar(10),



in `@OrgID` int(11),



in `@CreatedByUserID` int(11),



in `@pPassword` varchar(50),



OUT `@pUserID` INT( 11) 



)
BEGIN







INSERT INTO userprsonalinfo(FName,LName,Address,Email,WorkPhone,CellNo,CreatedByUserID,OrigId)



VALUES(@pFName,@pLName,@pAddress,@pEmail,@pWorkPhone,@pCellNo,@pCreatedByUserID,@pOrigId);



 SET @pUserID = LAST_INSERT_ID();



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_Add_leavecredit` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_Add_leavecredit`(

	IN	pUserID int(11),

	IN  pLeaveTypeID int(11),

	IN	pCreditLeave float(5,1),

	IN	pCreditDate datetime

)
BEGIN

	start transaction;

	INSERT INTO userleavecredit

	(

		UserID,

		LeaveTypeID,

		CreditLeave,

		CreditDate

	)

	VALUES

	(

		pUserID,

		pLeaveTypeID,

		pCreditLeave,

		pCreditDate

	);

    commit;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_CreateAdmin` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_CreateAdmin`(

in	pOrgID	int(11),

        in	pFName	varchar(50),

        in	pLName	varchar(50),

        in	pAddress	varchar(150),

        in	pEmail		varchar(100),

        in	pWorkPhone	varchar(50),

        in	pCellNo		varchar(50),

        in	pEmployeeID	varchar(50),

        in	pDeptID		int(11),

        in	pAge		varchar(5),

        in	pOthers		longtext,

        in	pCreatedByUserID int(11),

        in	pPwd		varchar(50),

        in	pPwdResetRequired tinyint(1),

        in	pDeleted	tinyint(1),

        in	pRole		varchar(50)

)
BEGIN

	start transaction;

    

        INSERT INTO userpersonalinfo

				(

					OrgID,

                    FName,

                    LName,

                    Address,

                    Email,

                    WorkPhone,

                    CellNo,

                    EmployeeID,

                    DeptID,

                    Age,

                    Others,

                    CreatedByUserID,

                    Pwd,

                    PwdResetRequired,

                    Deleted

				)

				VALUES

				(

					pOrgID			,

					pFName			,

					pLName			,

                    pAddress		,

                    pEmail			,

                    pWorkPhone		,

                    pCellNo			,

                    pEmployeeID		,

                    pDeptID			,

                    pAge			,

                    pOthers			,

                    pCreatedByUserID,

                    pPwd			,

                    pPwdResetRequired,

                    pDeleted		

				);

                

                Select @vUserId :=  UserID from userpersonalinfo where Email = pEmail;

                

                /*Check if the Role Already Exists for the Organization, If Not create it*/

                Select @vRole := Count(RoleName) from userrole where OrgID = pOrgID and UPPER(RoleName) = pRole;

                

                If @vRole < 1 Then

					INSERT INTO userrole

						(

							RoleName,

                            Actions,

                            OrgId

                        )

					Values

						(

							pRole,

                            '',

                            pOrgID

                        );

                End If;

                

                /*Select the RoleID for the Role from the table into a variable to be used*/

				Select @vRoleID := IFNULL(RoleID, 0) from userrole where OrgID = pOrgID and UPPER(RoleName) = pRole;

                /*Check if the Role Already Exists for the Organization, If Not create it*/

                

                /*Since the User is newly Created User, Add him to the Role in the Organization*/

                INSERT INTO userworkinfo

					(

						UserID,

                        RoleID,

                        TeamID

                    )

				Values

					(

						@vUserId,

                        @vRoleID,

                        0

                    );

                

                /*Return the newly Created User to the Calling Program*/

              

           commit;     

             Select * from userpersonalinfo where Email = pEmail;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_CreateAdminSupervisor` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_CreateAdminSupervisor`(

        IN	pRoleName	varchar(50),

        in	pOrgID	int(11),

        in	pFName	varchar(50),

        in	pLName	varchar(50),

        in	pEmail		varchar(100),

        in	pCellNo		varchar(50),

        in	pDeptID		int(11),

        in 	pDeptName	varchar(50),

        in	pDesignation	varchar(100),

        in	pDeleted	tinyint(1),

        in 	pPwd		varchar(50)

)
BEGIN

	Select @vCtrl := count(RoleID) from userrole where RoleName= pRoleName and OrgID = pOrgID;

    

    If @vCtrl=0 then



		INSERT INTO userrole

			(

				RoleName,

				OrgID

			)

			VALUES

			(

				pRoleName,

				pOrgID

			);

	End if;      

			

	/*Additional Queries*/

    /*Select CEO Dept ID*/

    select DeptID INTO @lpDeptID from department where DeptPrtID = 0 and OrgID = pOrgID order by DeptID limit 1;

    

    select @vCnt :=count(DeptID) from department where DepartmentName= pDeptName and OrgID = pOrgID;

	

	if @vCnt=0 then

	

		INSERT INTO department

			(

				DeptPrtID,

                DepartmentName,

				OrgID

			)

			VALUES

			(

				@lpDeptID,

                pDeptName,

				pOrgID

			);

	End if;

            

     Select @vDeptID := DeptID from department where DepartmentName= pDeptName and OrgID = pOrgID;       

            

            INSERT INTO userpersonalinfo

				(

					OrgID,

                    FName,

                    LName,

                    Email,

                    CellNo,

                    DeptID,

                    Pwd,

                    PwdResetRequired,

                    Deleted

				)

				VALUES

				(

					pOrgID			,

					pFName			,

					pLName			,

                    pEmail			,

                    pCellNo			,

                    @vDeptID		,

                    pPwd			,

                    1,

                    0		

				);

        

        Select @vRoleID := RoleID from userrole where RoleName= pRoleName and OrgID = pOrgID;

        Select @vUserID := UserID from userpersonalinfo Where Email= pEmail;

        

			INSERT INTO userworkinfo

				(

					UserID,

                    RoleID,

                    Designation

				)

				VALUES

				(

                    @vUserID,

                    @vRoleID,

                    pDesignation

				);

        

        Select @vCt := Count(idDeptManager)

        from deptmanager Where DeptID= @vDeptID;

        

        if @vCt=0 then 

        

			insert into deptmanager

            (

				DeptID,

                DeptManagerID

			)

            Values

            (

				@vDeptID,

                @vUserID

			);

		else

			Update deptmanager set DeptManagerID= @vUserID Where DeptID= @vDeptID;  

        End if;

        

		Select * from userpersonalinfo where UserID = @vUserID;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_CurtailedODOfUser` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_CurtailedODOfUser`(
	IN pAttnTime datetime, 
    IN pOrgID int(11),
    IN pUserID int(11),
	IN pAttnType char(2)
)
BEGIN
    DECLARE TARGETODID int(11);
    set TARGETODID = 0;
    select ifnull(OD.OdID,0) INTO TARGETODID from odapplied OD 
    where OD.UserID = pUserID 
    and OD.OdDate = date(pAttnTime)
    and (pAttnTime >= OD.OdStartTime and pAttnTime <= OD.OdEndTime)
    and OD.RequestStatus IN ('Applied','Approved');
    
    if(TARGETODID > 0) then 
        if(pAttnType='CI') then
			UPDATE odapplied SET OdEndTime = DATE_SUB(pAttnTime, INTERVAL 1 SECOND) WHERE OdID = (select TARGETODID) and UserID = pUserID;
		elseif(pAttnType='CO') then
			UPDATE odapplied SET OdStartTime = DATE_ADD(pAttnTime, INTERVAL 1 SECOND) WHERE OdID = (select TARGETODID) and UserID = pUserID;
		end if;
    end if;
    
    select TARGETODID;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetAllUsersByReleaseDate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetAllUsersByReleaseDate`(in pOrgID int(11),in pReleaseDate date)
BEGIN
Select UP.UserID,UP.ReleaseDate,UP.OrgID,UP.FName,UP.LName,UP.Email,UP.EmployeeID 
		from userpersonalinfo UP 
		where UP.ReleaseDate = pReleaseDate
        AND UP.Deactivated='N'
        AND UP.OrgID=pOrgID;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetApprovedLeaveOfUser` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetApprovedLeaveOfUser`(
	IN `pStartDate` date, 
	IN `pEnddate` date,  
    IN `pOrgID` INT,
    IN `pUserID` INT
)
BEGIN
    /*Get Approved and Applied Leaves of a User*/
	SELECT U.UserID,
	LA.LeavAppID,LA.StartDate,LA.EndDate,LA.AppliedDate,LA.PolicyType,
	LA.NoOfDays,
	LA.IsHalfDay,LA.WhichHalf,
    LS.LeaveMasterStatusID,LS.LeaveStatusText,LT.LeaveTypeText
	FROM leaveapplied LA
	LEFT JOIN leaveappliedstatuslog LLOG ON LLOG.LeavAppID = LA.LeavAppID
	LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
	LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
	LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
	WHERE LA.LeaveStatusID = LLOG.LeaveStatusID 
	AND U.UserID = pUserID 
	AND (
		 (LA.StartDate >= pStartDate and LA.EndDate <= pEndDate) 
		 OR 
		 (LA.EndDate >= pStartDate and LA.StartDate <= pEndDate)
	)
	AND LS.LeaveMasterStatusID IN (1,2) ORDER BY LA.StartDate DESC;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetApprovedODOfDept` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetApprovedODOfDept`(
	IN `pStartDate` varchar (50), 
	IN `pEnddate` varchar (50), 
	IN `pDeptID` INT, 
    IN `pOrgID` INT,
    IN `pUserID` INT
)
BEGIN
	Declare UserRole varchar(10);
	Select IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur INNER JOIN userworkinfo uwi on ur.roleID = uwi.roleID  
	where uwi.UserID = U.UserID), 'EMPLOYEE') into UserRole from userpersonalinfo U where U.UserID = pUserID;
    
    
	/*Get all hierarchy sub department ids*/
	CALL nex_GetDeptTree(pDeptID,@AllHrcyDept);
        
	CREATE TEMPORARY TABLE temp_AllDept
	SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
	FROM (select @AllHrcyDept as Dept_Id) t CROSS JOIN
	(
	SELECT a.N + b.N * 10 + 1 n
	 FROM
	(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
	,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
	ORDER BY n
	) n
	WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));

	Select OD.OdID,OD.OdDate,OD.OdStartTime,OD.OdEndTime,
	(TIMESTAMPDIFF(Second,OD.OdStartTime, OD.OdEndTime)) TotalHours,
	OdLocationLatLon,OD.OdLocation,OD.RequestStatus,OD.UserID,U.FName,U.LName,U.EmployeeID,U.EmploymentType
	from odapplied OD LEFT JOIN userpersonalinfo U ON OD.UserID = U.UserID
	where OD.RequestStatus = 'Approved' 
    and OD.UserID IN 
    (Select U.UserID from userpersonalinfo U where ((U.DeptID IN (select * from temp_AllDept)) or (UserRole = 'ADMIN' AND U.DeptID IS NULL)) 
    and U.OrgID = pOrgID)
	and (OD.OdDate >= date(pStartDate) and OD.OdDate <= date(pEnddate));	
        

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetAttendanceCountOfDept` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetAttendanceCountOfDept`(

        IN pDeptID text,

        IN pDate date,

        OUT TotalEmp int(5),

        OUT TotalAbsent int(5),

        OUT TotalPresent int(5)

     )
BEGIN

    DECLARE a,p,t INT DEFAULT 0;
	DECLARE pDeptIDAll text;

    DECLARE DeptMngUserID INT;

    
    call splitter(pDeptID,',');
    select group_concat(SplitValue) INTO pDeptIDAll from splitResultsTmpTable;
	
    /*Get all hierarchy sub department ids*/
    CALL nex_GetDeptTree(pDeptIDAll,@AllHrcyDept);
    CREATE TEMPORARY TABLE temp_AllDept
    SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
	  FROM (select @AllHrcyDept as Dept_Id) t CROSS JOIN
	  (
	   SELECT a.N + b.N * 10 + 1 n
		 FROM
		(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
	   ,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
		ORDER BY n
	   ) n
	WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));
    
    

	SELECT DM.DeptManagerID INTO DeptMngUserID from deptmanager DM 
	where DM.DeptID IN (pDeptIDAll);

	

	SELECT count(U.UserID) INTO t from userpersonalinfo U 

	where U.Deactivated = 'N' and U.DeptID IN (select * from temp_AllDept) and U.UserID NOT IN (DeptMngUserID);

	

	SELECT count(A.AttendanceID) INTO p from attendance A

	LEFT JOIN userpersonalinfo U ON A.UserID = U.UserID

	where U.Deactivated = 'N' and U.DeptID IN (select * from temp_AllDept) AND DATE(A.LogTime) = pDate;

			

	SET a = t - p;
            

    select t into TotalEmp;

    select a into TotalAbsent;

    select p into TotalPresent;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetAttendanceForUser` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetAttendanceForUser`(
in pUserEmail varchar (50),
in pStartDate   varchar (50),
in pEnddate varchar (50)
)
BEGIN
Select ATT.* from Attendance ATT inner Join userpersonalinfo UP on ATT.UserID = UP.userID 
where UP.Email = pUserEmail and Date(ATT.LogTime) >= Date(pStartDate) and Date(ATT.LogTime) <= Date(pEndDate);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetAttendanceOfDept` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetAttendanceOfDept`(
	IN `pStartDate` varchar (50), 
	IN `pEnddate` varchar (50), 
	IN `pDeptID` INT, 
    IN `pOrgID` INT,
    IN `pAttenType` char(2),
    IN `pUserID` INT
)
BEGIN
	Declare UserRole varchar(10);
	Select IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur INNER JOIN userworkinfo uwi on ur.roleID = uwi.roleID  
	where uwi.UserID = U.UserID), 'EMPLOYEE') into UserRole from userpersonalinfo U where U.UserID = pUserID;
    
    if pAttenType = 'SD' then
		Select 
		UP.UserID,UP.EmployeeID,UP.FName,UP.LName,UP.SiteLocation,
		date(ATT.LogTime) as AttnDate,
		Time(ATT.CheckInTime) as CheckInTime, 
		Time(ATT.CheckOutTime) CheckOutTime, 
		/*(TIMESTAMPDIFF(Hour, ATT.CheckInTime, ATT.CheckOutTime) + (TIMESTAMPDIFF(Minute, ATT.CheckInTime, ATT.CheckOutTime) - ((TIMESTAMPDIFF(Hour, ATT.CheckInTime, ATT.CheckOutTime))  * 60)) *.01) TotalHours,*/
        (TIMESTAMPDIFF(Second, CheckInTime, CheckOutTime)) TotalHours,
		ATT.CheckInLocation,ATT.CheckOutLocation,
        ATT.AutoCheckOut
		from attendance  ATT inner Join userpersonalinfo UP on ATT.UserID = UP.UserID 
		where Date(ATT.LogTime) >= Date(pStartDate) and Date(ATT.LogTime) <= Date(pEndDate) 
		and ATT.UserID IN 
		/*(Select U.UserID from userpersonalinfo U where (U.DeptID = pDeptID or U.DeptID IS NULL) */
		(Select U.UserID from userpersonalinfo U where ((U.DeptID = pDeptID) or (UserRole = 'ADMIN' AND U.DeptID IS NULL))
		and U.OrgID = pOrgID) order by UP.FName,ATT.LogTime asc;
    else
		/*Get all hierarchy sub department ids*/
		CALL nex_GetDeptTree(pDeptID,@AllHrcyDept);
        
		CREATE TEMPORARY TABLE temp_AllDept
		SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
		FROM (select @AllHrcyDept as Dept_Id) t CROSS JOIN
		(
		SELECT a.N + b.N * 10 + 1 n
		 FROM
		(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
		,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
		ORDER BY n
		) n
		WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));
        
		Select 
		UP.UserID,UP.EmployeeID,UP.EmploymentType,UP.FName,UP.LName,UP.SiteLocation,
		date(ATT.LogTime) as AttnDate,
		Time(ATT.CheckInTime) as CheckInTime, 
		Time(ATT.CheckOutTime) CheckOutTime, 
		/*(TIMESTAMPDIFF(Hour, ATT.CheckInTime, ATT.CheckOutTime) + (TIMESTAMPDIFF(Minute, ATT.CheckInTime, ATT.CheckOutTime) - ((TIMESTAMPDIFF(Hour, ATT.CheckInTime, ATT.CheckOutTime))  * 60)) *.01) TotalHours,*/
        (TIMESTAMPDIFF(Second, CheckInTime, CheckOutTime)) TotalHours,
		ATT.CheckInLocation,ATT.CheckOutLocation,
        ATT.AutoCheckOut
		from attendance  ATT inner Join userpersonalinfo UP on ATT.UserID = UP.UserID 
		where Date(ATT.LogTime) >= Date(pStartDate) and Date(ATT.LogTime) <= Date(pEndDate) 
		and ATT.UserID IN 
		(Select U.UserID from userpersonalinfo U where ((U.DeptID IN (select * from temp_AllDept)) or (UserRole = 'ADMIN' AND U.DeptID IS NULL))
		and U.OrgID = pOrgID) order by UP.FName,ATT.LogTime asc;
    end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetAttendanceOfOrg` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetAttendanceOfOrg`(
 IN `pStartDate` datetime, 
 IN `pEndDate` datetime, 
 IN `pOrgID` INT
)
BEGIN
  Select 
  ATT.AttendanceID,
  ATT.UserID,
  date(ATT.LogTime) as AttnDate,
  ATT.LogTime as AttnDateTime,
  Time(ATT.CheckInTime) as CheckInTime, 
  Time(ATT.CheckOutTime) CheckOutTime, 
  ATT.CheckInLocation,ATT.CheckOutLocation,
  ATT.AutoCheckOut,UP.Fname,UP.Lname,UP.EmployeeID,DPM.DeptManagerID
  from attendance ATT 
  left join userpersonalinfo UP on ATT.UserID = UP.UserID
  left join deptmanager DPM on DPM.DeptID = UP.DeptID
  where ATT.CheckInTime!='' and ATT.CheckOutTime!=''
  and ATT.LogTime >= pStartDate and ATT.LogTime <= pEndDate and ATT.AutoCheckOut!='Y'
  and UP.OrgID = pOrgID order by ATT.LogTime asc;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetAttendanceSummaryByType` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetAttendanceSummaryByType`(
IN `pOrgID` INT(11),
IN `pDeptIDOrLoc` text,
IN `pTargetStartDate` date,
IN `pTargetEndDate` date,
IN `pFilterBy` varchar(50),
IN `pGroupBy` varchar(50)
)
BEGIN
Declare NoOfUser int default 0;
Select count(UserID) into NoOfUser from userpersonalinfo where
OrgID=pOrgID AND IF(pGroupBy='dept',DeptID,SiteLocation)=pDeptIDOrLoc;
IF pGroupBy='dept' THEN
	CASE pFilterBy
		WHEN 'DP' THEN
			SELECT date(A.LogTime) as `Date`,((COUNT(AttendanceID)/NoOfUser)*100) as Percent FROM attendance A 
            LEFT JOIN userpersonalinfo UPI ON UPI.UserID=A.UserID 
            WHERE 
            UPI.DeptID=pDeptIDOrLoc
            AND UPI.OrgID=pOrgID
            AND date(A.LogTime) >= pTargetStartDate
            AND date(A.LogTime) <= pTargetEndDate
            GROUP BY DATE(A.LogTime);
            
	    WHEN 'OD' THEN
			SELECT OD.OdDate as `Date`,((COUNT(OdID)/NoOfUser)*100) as Percent FROM odapplied OD 
            LEFT JOIN userpersonalinfo UPI ON UPI.UserID=OD.UserID 
            WHERE 
            UPI.DeptID=pDeptIDOrLoc
            AND UPI.OrgID=pOrgID
            AND OD.OdDate >= pTargetStartDate
            AND OD.OdDate <= pTargetEndDate
            AND OD.RequestStatus='Approved'
            GROUP BY OdDate;
		
        WHEN 'ODP' THEN
			SELECT CO.CompOffDate as `Date`,((COUNT(CompOffID)/NoOfUser)*100) as Percent FROM compoffapplied CO 
            LEFT JOIN userpersonalinfo UPI ON UPI.UserID=CO.UserID 
            WHERE 
            UPI.DeptID=pDeptIDOrLoc
            AND UPI.OrgID=pOrgID
            AND CO.CompOffDate >= pTargetStartDate
            AND CO.CompOffDate <= pTargetEndDate
            AND CO.RequestStatus='Approved'
            AND CO.RequestType='Payout'
            GROUP BY CompOffDate;
        END CASE;
ELSEIF pGroupBy='loc' THEN
		CASE pFilterBy
		WHEN 'DP' THEN
			SELECT date(A.LogTime) as `Date`,((COUNT(AttendanceID)/NoOfUser)*100) as Percent FROM attendance A 
            LEFT JOIN userpersonalinfo UPI ON UPI.UserID=A.UserID 
            WHERE 
            UPI.SiteLocation=pDeptIDOrLoc
            AND UPI.OrgID=pOrgID
            AND date(A.LogTime) >= pTargetStartDate
            AND date(A.LogTime) <= pTargetEndDate
            GROUP BY DATE(A.LogTime);
            
	    WHEN 'OD' THEN
			SELECT OD.OdDate as `Date`,((COUNT(OdID)/NoOfUser)*100) as Percent FROM odapplied OD 
            LEFT JOIN userpersonalinfo UPI ON UPI.UserID=OD.UserID 
            WHERE 
            UPI.SiteLocation=pDeptIDOrLoc
            AND UPI.OrgID=pOrgID
            AND OD.OdDate >= pTargetStartDate
            AND OD.OdDate <= pTargetEndDate
            AND OD.RequestStatus='Approved'
            GROUP BY OdDate;
		
        WHEN 'ODP' THEN
			SELECT CO.CompOffDate as `Date`,((COUNT(CompOffID)/NoOfUser)*100) as Percent FROM compoffapplied CO 
            LEFT JOIN userpersonalinfo UPI ON UPI.UserID=CO.UserID 
            WHERE 
            UPI.SiteLocation=pDeptIDOrLoc
            AND UPI.OrgID=pOrgID
            AND CO.CompOffDate >= pTargetStartDate
            AND CO.CompOffDate <= pTargetEndDate
            AND CO.RequestStatus='Approved'
            AND CO.RequestType='Payout'
            GROUP BY CompOffDate;
        END CASE;
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetCalendarWOAndPH` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetCalendarWOAndPH`(
	IN pUserID int(11),
    IN pStartDate date,
    IN pEndDate date,
    IN pOrgID int(11)
)
BEGIN
	
    declare i,NoOFTmpRecords,CalEffect INT DEFAULT 5;
    /*declare CalEffectStartDate,CalEffectEndDate DATE;*/
    declare CalEffectStartDate,CalEffectEndDate varchar(10);
    declare AllHoldays,AllWeekends TEXT;
    
    CREATE TEMPORARY TABLE UserAllAssignedCalendarsTmpTable (
		TmpID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
        UserID int(11) NOT NULL,
        CalendarID int(11) NOT NULL,
        EffectedFrom DATE NOT NULL
	);
    
    CREATE TEMPORARY TABLE UserGetAllHolidayWeekendTmpTable (
		TmpHWID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
        StartDate DATE ,
        EndDate DATE ,
        AllHolidays TEXT,
        AllWeekends TEXT
	);
    
    INSERT INTO UserAllAssignedCalendarsTmpTable (UserID,CalendarID,EffectedFrom) 
    SELECT userid, calendarid, effectedfrom FROM usercalendar
	WHERE userid = pUserID
	AND effectedfrom <= pStartDate
	ORDER BY effectedfrom DESC
	LIMIT 1;

	INSERT INTO UserAllAssignedCalendarsTmpTable (UserID,CalendarID,EffectedFrom) 
	SELECT userid, calendarid, effectedfrom FROM usercalendar
	WHERE userid = pUserID
	AND effectedfrom >= pStartDate AND effectedfrom <= pEndDate
	ORDER BY effectedfrom ASC;
    
    
    select count(TmpID) INTO NoOFTmpRecords from UserAllAssignedCalendarsTmpTable;
	
    set i = 1;
    WHILE i <= NoOFTmpRecords DO
		set CalEffectStartDate = '';
        set CalEffectEndDate = '';
        
        select CalendarID,EffectedFrom INTO CalEffect,CalEffectStartDate from UserAllAssignedCalendarsTmpTable where TmpID = i order by EffectedFrom ASC;
        if(i<NoOFTmpRecords) then
			select IFNULL(EffectedFrom,'') INTO CalEffectEndDate from UserAllAssignedCalendarsTmpTable where TmpID = (i+1) order by EffectedFrom ASC;
			set CalEffectEndDate = DATE_SUB(CalEffectEndDate, INTERVAL 1 DAY);
        else
			set CalEffectEndDate = pEndDate;
        end if;
       
        
        select GROUP_CONCAT(H.StartDate) INTO AllHoldays
        from calendarholiday CH left join holiday H ON CH.HolidayID = H.HolidayID
        where H.StartDate >=CalEffectStartDate and H.StartDate <=CalEffectEndDate
        and CH.CalendarID = CalEffect order by H.StartDate asc;
        
        select GROUP_CONCAT(W.DayName) INTO AllWeekends
        from calendarweekends CW left join weekends W ON CW.WeekendID = W.WeekendsID
        where CW.CalendarID = CalEffect;
        
        INSERT INTO UserGetAllHolidayWeekendTmpTable VALUES(NULL,CalEffectStartDate,CalEffectEndDate,AllHoldays,AllWeekends);
        
        SET i = i + 1;
    END WHILE;
    
    select * from UserGetAllHolidayWeekendTmpTable;
    drop TABLE UserAllAssignedCalendarsTmpTable;
    drop TABLE UserGetAllHolidayWeekendTmpTable;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetCheckedInStatusForEmp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetCheckedInStatusForEmp`(

in pUserID int

)
BEGIN

	
    /*

    Select COUNT(CheckInTime) as checkedIN from Attendance where UserID = pUserID 

    and DATE(checkinTime) = DATE(Now()) 
    and 

    (
		checkOutTime is null 
		or 
		CheckOutTime < (Select max(checkinTime) from checkindetailsmore where DATE(checkinTime) = DATE(Now()) and UserID = pUserID and TypeFlg = 'V')
    );
    */
    Select COUNT(CheckInTime) as checkedIN from Attendance 
    where UserID = pUserID and checkOutTime is null
    order by CheckInTime desc limit 0,1;
    



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetCheckedOutStatusForEmp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetCheckedOutStatusForEmp`(

in pUserID int

)
BEGIN

	declare IsAttendance int;
    select count(AttendanceID) into IsAttendance from attendance A where A.UserID = pUserID;
    
    if IsAttendance > 0 then
		/*
        Select COUNT(CheckOutTime) as checkedOut from Attendance where UserID = pUserID 

		and DATE(CheckOutTime) = DATE(Now());
        */
		Select COUNT(CheckOutTime) as checkedOut from Attendance 
		where UserID = pUserID and checkOutTime != null
		order by CheckInTime desc limit 0,1;
    else
		select 1 as checkedOut;
    end if;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetCompOffApplyValidate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetCompOffApplyValidate`(
        in	pUserID	int(11),
        in	pCompOffDate date,
		in  pRequestType varchar(6),
        out IsAlrdyApplied char(5),
        out IsLeaveAppliedVld char(5),
		out IsOffDay char(5),
        out OffDayType char(1),
        out IsMorThnEightHrs int(11)
     )
BEGIN
		declare UserDept int;
        declare IsMorThnEightHrsATTN,IsMorThnEightHrsOD,IsMorThnEightHrsTOTAL int default 0;
        select '' into OffDayType;
    
		select DeptID into UserDept from userpersonalinfo where UserID = pUserID;
        
		if pRequestType = 'Payout' then
			select if(count(COMP.CompOffID) > 0,'true','false') into IsAlrdyApplied from compoffapplied COMP 
			where COMP.UserID = pUserID AND COMP.CompOffDate = pCompOffDate AND (COMP.RequestType='Payout' OR COMP.RequestType='Leave')
			AND COMP.RequestStatus IN ('Applied','Approved');
         elseif pRequestType = 'Leave' then
			select if(count(COMP.CompOffID) > 0,'true','false') into IsAlrdyApplied from compoffapplied COMP 
			where COMP.UserID = pUserID AND COMP.CompOffDate = pCompOffDate AND COMP.RequestType='Leave'
			AND COMP.RequestStatus IN ('Applied','Approved');
         end if;
         
		select if(count(COMP.CompOffID) > 0,'true','false') into IsLeaveAppliedVld from compoffapplied COMP 
		where COMP.UserID = pUserID AND COMP.CompOffDate = pCompOffDate AND COMP.RequestType='Payout'
		AND COMP.RequestStatus ='Approved';
        
        if IsLeaveAppliedVld = 'false' then
			select if(count(OD.OdID) > 0,'true','false') into IsLeaveAppliedVld from odapplied OD 
            where OD.UserID = pUserID AND OD.OdDate = pCompOffDate AND OD.RequestStatus = 'Approved';
        end if;
        
        select if(count(H.HolidayID) > 0,'true','false') into IsOffDay from holiday H 
		LEFT JOIN calendarholiday CH ON H.HolidayID = CH.HolidayID
        LEFT JOIN usercalendar UC ON UC.CalendarID = CH.CalendarID
		where UC.UserID = pUserID AND H.StartDate = pCompOffDate;
        
        if IsOffDay = 'true' then
			select 'H' into OffDayType;
        elseif IsOffDay = 'false' then
			    select if(count(W.WeekendsID) > 0,'true','false') into IsOffDay from weekends W 
				LEFT JOIN calendarweekends CW ON W.WeekendsID = CW.WeekendID
				LEFT JOIN usercalendar UC ON UC.CalendarID = CW.CalendarID
				where UC.UserID = pUserID AND W.DayName = DAYNAME(pCompOffDate);
                
                if IsOffDay = 'true' then
					select 'W' into OffDayType;
                end if;
        end if;
        
       
		select IFNULL(TIMESTAMPDIFF(SECOND,A.CheckInTime,A.CheckOutTime),0) into IsMorThnEightHrsATTN
		FROM attendance A
		WHERE A.UserID = pUserID AND DATE(A.LogTime) = pCompOffDate and A.AutoCheckOut IS NULL limit 0,1;
        
		select COALESCE(SUM(TIMESTAMPDIFF(SECOND,OD.OdStartTime,OD.OdEndTime)),0) into IsMorThnEightHrsOD
		FROM odapplied OD
		WHERE OD.RequestStatus ='Approved' AND OD.UserID = pUserID AND DATE(OD.OdDate) = pCompOffDate;
		
		Set IsMorThnEightHrsTOTAL = IsMorThnEightHrsATTN + IsMorThnEightHrsOD;
		if(IsMorThnEightHrsTOTAL > 0) then
			select IsMorThnEightHrsTOTAL into IsMorThnEightHrs;
		else
			select 0 into IsMorThnEightHrs;
		end if;
        
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetConsolidatedAttendanceForUser` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetConsolidatedAttendanceForUser`(
	in pUserID int,
	in pOnDate date,
    in pOrgID int
)
BEGIN
	select * from 
    (
    select 'CheckIn' as `Type`,
    A.CheckInTime as `Time`,
    A.CheckInLocation as `Location`,
    '' as `Purpose`,
    CIDM.OutDoorAttn as `OutDoorAttn`
    from attendance A  LEFT JOIN checkindetailsmore CIDM ON (A.UserID = CIDM.UserID and A.CheckInTime = CIDM.CheckIntime)
    where A.UserID = pUserID 
    and date(LogTime) = pOnDate
    UNION ALL
    select 'CheckIn' as `Type`,
    CIDM.CheckIntime as `Time`,
    CIDM.Location as `Location`,
    '' as `Purpose`,
    CIDM.OutDoorAttn as `OutDoorAttn`
    from checkindetailsmore CIDM 
    where CIDM.OrgID = pOrgID and CIDM.UserID = pUserID 
    and date(CONVERT_TZ(CIDM.CheckIntime,'+00:00','+05:30')) = pOnDate and CIDM.TypeFlg = 'O'
    UNION ALL
    select 'CheckOut' as `Type`,
    A.CheckOutTime as `Time`,
    A.CheckOutLocation as `Location`,
    CODM.Purpose as `Purpose`,
    CODM.OutDoorAttn as `OutDoorAttn`
    from attendance A LEFT JOIN checkoutdetailsmore CODM ON (A.UserID = CODM.UserID and A.CheckOutTime = CODM.CheckOutTime)
    where A.UserID = pUserID 
    and date(LogTime) = pOnDate
    and A.AutoCheckOut IS NULL
    UNION ALL
    select 'CheckOut' as `Type`,
    CODM.CheckOuttime as `Time`,
    CODM.Location as `Location`,
    CODM.Purpose as `Purpose`,
    CODM.OutDoorAttn as `OutDoorAttn`
    from checkoutdetailsmore CODM
    where CODM.OrgID = pOrgID and CODM.UserID = pUserID 
    and date(CONVERT_TZ(CODM.CheckOuttime,'+00:00','+05:30')) = pOnDate
    UNION ALL
    select 'ODStart' as `Type`,
    OD.OdStartTime as `Time`,
    OD.OdLocation as `Location`,
    '' as `Purpose`,
    '' as `OutDoorAttn`
    from odapplied OD
    where OD.UserID = pUserID 
    and OD.RequestStatus = 'Approved'
    and date(OD.OdDate) = pOnDate
    UNION ALL
    select 'ODEnd' as `Type`,
    OD.OdEndTime as `Time`,
    OD.OdLocation as `Location`,
    OD.OdReason as `Purpose`,
	'' as `OutDoorAttn`
    from odapplied OD
    where OD.UserID = pUserID 
    and OD.RequestStatus = 'Approved'
    and date(OD.OdDate) = pOnDate
    ) ConsolidatedAttendance order by `Time` asc,`Purpose` asc;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetDashboardData` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetDashboardData`(
	IN pDashboardDataID BIGINT(20),
	IN pUserID BIGINT(20),
    IN pOrgID BIGINT(20),
    IN pDeptID BIGINT(20),
    IN pStartDate date,
    IN pEndDate date,
    IN pDashboardData text,
    IN pLst30DaysWorkingHrs text,
    IN pTypeFlg SMALLINT(2)
)
BEGIN

	if pTypeFlg = 1 then

	   select count(*) as attandanceOfUser from attendance 
       where UserID = pUserID AND ( LogTime between date(pStartDate) AND date(pEndDate) );

    elseif pTypeFlg = 2 then

	   select count(*) as attendanceOfTeam from attendance a 
       LEFT JOIN userpersonalinfo upi ON upi.UserID = a.UserID
       where a.UserID != pUserID 
       AND ( a.LogTime between date(pStartDate) AND date(pEndDate) ) 
       AND upi.DeptID = pDeptID;

    elseif pTypeFlg = 3 then
		
        insert into dashboard_data ( UserID, OrgID, OnDate, DashboardData, Last30DaysWorkingHours)
        values (pUserID, pOrgID, pStartDate, pDashboardData, pLst30DaysWorkingHrs);
	
    elseif pTypeFlg = 4 then
		
        select DashboardDataID,UserID,OrgID,DashboardData,Last30DaysWorkingHours from dashboard_data where UserID = pUserID AND OnDate = pStartDate;
    
    elseif pTypeFlg = 5 then
    
		Delete from dashboard_data where DashboardDataID = pDashboardDataID;
    
    elseif pTypeFlg = 6 then
		
        select DashboardDataID,UserID,OrgID from dashboard_data where UserID = pUserID;
        
    End if;


END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetDeptForOrg` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetDeptForOrg`(

in pOrgID INT

)
BEGIN

	SELECT DepartmentName, DeptID from Department where orgID = pOrgID;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetDeptTree` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetDeptTree`(

        IN pDeptID text,

        OUT AllHierarchyDepts text

     )
BEGIN

		DECLARE i,NOOFDEPT int;
		DECLARE USERDEPT text;
        
		CREATE TEMPORARY TABLE DeptTreeTmpTable (
			DTTmpID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
			DTDept  TEXT NOT NULL
		);
        
        
        call splitter(pDeptID,',');
        select count(SplitValue) INTO NOOFDEPT from splitResultsTmpTable;

		set i = 1;
		WHILE i <= NOOFDEPT DO
				select SplitValue INTO USERDEPT from splitResultsTmpTable where TmpID = i;
				
				INSERT INTO DeptTreeTmpTable (DTDept) 
                SELECT CONCAT_WS(',',dept1,dept2,dept3,dept4,dept5,dept6,dept7,dept8,dept9,dept10) from (
				(SELECT
				GROUP_CONCAT(DISTINCT d1.DeptID) as dept1, 
				GROUP_CONCAT(DISTINCT d2.DeptID) as dept2, 
				GROUP_CONCAT(DISTINCT d3.DeptID) as dept3, 
				GROUP_CONCAT(DISTINCT d4.DeptID) as dept4,
				GROUP_CONCAT(DISTINCT d5.DeptID) as dept5,
				GROUP_CONCAT(DISTINCT d6.DeptID) as dept6,
				GROUP_CONCAT(DISTINCT d7.DeptID) as dept7,
				GROUP_CONCAT(DISTINCT d8.DeptID) as dept8,
				GROUP_CONCAT(DISTINCT d9.DeptID) as dept9,
				GROUP_CONCAT(DISTINCT d10.DeptID) as dept10
				FROM department AS d1
				LEFT JOIN department AS d2 ON d1.DeptID = d2.DeptPrtID
				LEFT JOIN department AS d3 ON d2.DeptID = d3.DeptPrtID
				LEFT JOIN department AS d4 ON d3.DeptID = d4.DeptPrtID
				LEFT JOIN department AS d5 ON d4.DeptID = d5.DeptPrtID
				LEFT JOIN department AS d6 ON d5.DeptID = d6.DeptPrtID
				LEFT JOIN department AS d7 ON d6.DeptID = d7.DeptPrtID
				LEFT JOIN department AS d8 ON d7.DeptID = d8.DeptPrtID
				LEFT JOIN department AS d9 ON d8.DeptID = d9.DeptPrtID
				LEFT JOIN department AS d10 ON d9.DeptID = d10.DeptPrtID
				WHERE d1.DeptID = USERDEPT) tmp
				);

				SET i = i + 1;
		END WHILE;
        
        SELECT GROUP_CONCAT(DISTINCT(DTDept)) into AllHierarchyDepts from DeptTreeTmpTable;
	    drop TABLE DeptTreeTmpTable;
    
		/*
		SELECT GROUP_CONCAT(HierarchyDept.DeptID SEPARATOR ',') as AllHierarchyDept INTO AllHierarchyDepts 
		from
		(
		select 1 as ID,pDeptID as DeptID
		Union
		select 1 as ID, DeptID
		from    (select * from department
		order by DeptPrtID, DeptID) base,
		(select @pv := pDeptID) tmp
		where   find_in_set(DeptPrtID, @pv) > 0
		and     @pv := concat(@pv, ',', DeptID)
		order by DeptID
		) as HierarchyDept
		GROUP BY HierarchyDept.ID;
		*/


		/*GET SELF JOIN DATA*/
		/*
		select pDeptID as DeptID
		Union
		select DeptID
		from    (select * from department
		order by DeptPrtID, DeptID) base,
		(select @pv := pDeptID) tmp
		where   find_in_set(DeptPrtID, @pv) > 0
		and     @pv := concat(@pv, ',', DeptID)
		order by DeptID;
		*/

		/*
		SELECT
		d1.DeptID AS dept1, 
		d2.DeptID as dept2, 
		d3.DeptID as dept3, 
		d4.DeptID as dept4,
		d5.DeptID as dept5
		FROM department AS d1
		LEFT JOIN department AS d2 ON d1.DeptID = d2.DeptPrtID
		LEFT JOIN department AS d3 ON d2.DeptID = d3.DeptPrtID
		LEFT JOIN department AS d4 ON d3.DeptID = d4.DeptPrtID
		LEFT JOIN department AS d5 ON d4.DeptID = d5.DeptPrtID
		WHERE d1.DeptID = pDeptID;
		*/

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetDurationSummaryByType` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetDurationSummaryByType`(
IN `pOrgID` INT(11),
IN `pLoggedUserID` INT(11) ,
IN `pGroupByFlag` varchar(50)
)
BEGIN
Declare UserRole varchar(20);
Declare UserDept text;

/* Get all sub depts of department of a manager*/
Select IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur INNER JOIN userworkinfo uwi on ur.roleID = uwi.roleID  
where uwi.UserID = U.UserID), 'EMPLOYEE') into UserRole from userpersonalinfo U where U.UserID = pLoggedUserID;

Select GROUP_CONCAT(DeptID) into UserDept from deptmanager where DeptManagerID = pLoggedUserID;
CALL nex_GetDeptTree(UserDept,@AllHrcyDept);

drop table if exists temp_AllDept;
CREATE TEMPORARY TABLE temp_AllDept
SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
FROM (select @AllHrcyDept as Dept_Id) t CROSS JOIN
(
SELECT a.N + b.N * 10 + 1 n
FROM
(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
ORDER BY n
) n
WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));

IF pGroupByFlag='employee' THEN
		CASE UserRole
			WHEN 'SUPERVISOR' THEN
					SELECT  DISTINCT UPI.UserID,CONCAT(UPI.FName,IF((UPI.LName!='' AND UPI.LName IS NOT NULL),CONCAT(' ',UPI.LName),'') ) AS Name FROM  userpersonalinfo UPI WHERE UPI.OrgID=pOrgID 
                        AND UPI.DeptID IN (SELECT * from temp_AllDept) AND UPI.UserID!=pLoggedUserID;
		    WHEN 'ADMIN' THEN
				SELECT DISTINCT UPI.UserID,CONCAT(UPI.FName,IF((UPI.LName!='' AND UPI.LName IS NOT NULL),CONCAT(' ',UPI.LName),'') ) AS Name FROM  userpersonalinfo UPI  WHERE UPI.OrgID=pOrgID 
				        AND UPI.UserID!=pLoggedUserID;
			ELSE 
				SELECT * FROM userpersonalinfo where 0 ;
		END CASE;
         
ELSEIF pGroupByFlag='supervisor' THEN
		CASE UserRole
			WHEN 'SUPERVISOR' THEN
				SELECT DISTINCT UPI.UserID,CONCAT(UPI.FName,IF((UPI.LName!='' AND UPI.LName IS NOT NULL),CONCAT(' ',UPI.LName),'') ) AS Name
					FROM  userpersonalinfo UPI LEFT JOIN deptmanager DM ON UPI.UserID=DM.DeptManagerID
					LEFT JOIN department D ON D.DeptID=DM.DeptID
					WHERE 
					UPI.OrgID=pOrgID
					AND DM.DeptID IN (SELECT * FROM temp_AllDept)
					AND UPI.UserID!=pLoggedUserID;
			WHEN 'ADMIN' THEN
					SELECT DISTINCT  UPI.UserID,CONCAT(UPI.FName,IF((UPI.LName!='' AND UPI.LName IS NOT NULL),CONCAT(' ',UPI.LName),'') ) AS Name FROM  userpersonalinfo UPI 
						LEFT JOIN deptmanager DM on UPI.UserID=DM.DeptManagerID
						LEFT JOIN department D ON D.DeptID=DM.DeptID
						WHERE UPI.OrgID=pOrgID AND DM.DeptManagerID IS NOT NULL
						AND UPI.UserID!=pLoggedUserID;
			ELSE
				SELECT * FROM userpersonalinfo where 0 ;
		END CASE; 
END IF;        
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetEarlyCheckOutOfDept` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetEarlyCheckOutOfDept`(

		IN `pStartDate` date, 

        IN `pEnddate` date, 

        IN `pDeptID` INT

	)
BEGIN

	Select 

	ECOA.EarlyCheckoutApprvID,ECOA.UserID,Date(ECOA.AppliedDate) as AppliedDate,ECOA.RequestStatus

	from earlycheckoutapproval ECOA left Join userpersonalinfo UP on ECOA.UserID = UP.UserID 

	where UP.DeptID = pDeptID

    and (Date(ECOA.AppliedDate) between Date(pStartDate) and Date(pEndDate));

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetEmpOfDept` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetEmpOfDept`(
        in pDeptID text,
		in pOrgID int(11),
        in pDate date,
        in pTypeFlg int(11)
     )
BEGIN
	DECLARE TotalEmp,TotalPresent INT;
     /*Get all hierarchy sub department ids*/
    CALL nex_GetDeptTree(pDeptID,@AllHrcyDept);
    CREATE TEMPORARY TABLE temp_AllDept
    SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
	  FROM (select @AllHrcyDept as Dept_Id) t CROSS JOIN
	  (
	   SELECT a.N + b.N * 10 + 1 n
		 FROM
		(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
	   ,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
		ORDER BY n
	   ) n
	WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));
    
    if(pTypeFlg=1) then
		SELECT U.UserID,U.OrgID,U.FName,U.LName,U.UserPicture,U.EmploymentType,U.Email,U.SiteLocation,U.Deactivated,U.CellNo,U.EmployeeID,U.DeptID,D.DepartmentName
		FROM userpersonalinfo U 
		LEFT JOIN department D ON U.DeptID = D.DeptID
		where U.DeptID IN (select * from temp_AllDept) 
		and U.OrgID = pOrgID and U.Deactivated = 'N';
    elseif(pTypeFlg=2) then
		SELECT U.UserID,U.OrgID,U.FName,U.LName,U.UserPicture,U.Email,U.SiteLocation,U.Deactivated,U.CellNo,U.EmployeeID,U.DeptID,D.DepartmentName,
        if((select AttendanceID from attendance A where A.UserID = U.UserID and date(A.LogTime) = pDate limit 0,1) IS NULL,'ABS','DP') as AttnStatus,
		if((select OdID from odapplied OD where OD.UserID = U.UserID and OD.OdDate = pDate and OD.RequestStatus = 'Approved' limit 0,1) IS NULL,'NO','YES') as OnOD
		FROM userpersonalinfo U 
		LEFT JOIN department D ON U.DeptID = D.DeptID
		where U.DeptID IN (select * from temp_AllDept) 
		and U.OrgID = pOrgID and U.Deactivated = 'N';
	elseif(pTypeFlg=3) then
		select count(U.UserID) INTO TotalEmp
		FROM userpersonalinfo U 
		where U.DeptID IN (select * from temp_AllDept) 
		and U.OrgID = pOrgID and U.Deactivated = 'N';
        
        create TEMPORARY TABLE temp_AllDept2 like temp_AllDept;
        insert temp_AllDept2 select * from temp_AllDept;
		select count(PresentUsers) INTO TotalPresent from (
			select A.UserID as PresentUsers
			from attendance A 
			LEFT JOIN userpersonalinfo U ON A.UserID = U.UserID
			where U.DeptID IN (select * from temp_AllDept) and U.Deactivated = 'N' and date(A.LogTime) = pDate
			UNION  
			select OD.UserID  as PresentUsers
			from odapplied OD 
			LEFT JOIN userpersonalinfo U ON U.UserID = OD.UserID
			where U.DeptID IN (select * from temp_AllDept2) and U.Deactivated = 'N' and OD.RequestStatus = 'Approved' and OD.OdDate = date(CONVERT_TZ(pDate,'+00:00','+05:30'))
        ) as temp;
        DROP TEMPORARY TABLE temp_AllDept2;
       
        
        select TotalEmp,TotalPresent;
       
    end if;
    
    DROP TEMPORARY TABLE temp_AllDept;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetLastCheckOutDetails` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetLastCheckOutDetails`(
	in pUserID int,
	in pOnDate datetime
)
BEGIN
	select CheckOuttime,Location,Purpose from checkoutdetailsmore CODM 
    where CODM.UserID = pUserID and CODM.CheckOuttime <= pOnDate and CODM.TypeFlg = 'F'
    order by CODM.CheckOuttime desc limit 0,1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetLeaveApplyValidate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetLeaveApplyValidate`(
        IN	pUserID	int(11),
        IN	pLeaveTypeID int(11),
		IN	pStartDate date,
        IN	pEndDate date,
		IN  pIsHalfDay varchar(1),
        IN  pWhichHalf varchar(1),
        IN  pEffcDate date,
		IN  pSandwichLeaveFor varchar(20),
        OUT HasLeaveBal char(5),
		OUT NoOfDays float(3,1),
        OUT IsLeaveOverlapped char(5),
        OUT IsStartEndDayHld char(5),
        OUT IsLeavesOnOD char(5)
     )
BEGIN
   declare UserDept int;
	declare UserCreditLeave,UserDebitLeave,UserBalanceLeave,
    UserAppliedLeaveFor,UserAppliedLeaveForHld,UserExactLeaveCount float;
    
	declare i,NoOFTmpRecords INT DEFAULT 5;
    declare tmpStartDate,tmpEndDate DATE;
    declare UserDebitLEaveHld,TotalUserDebitLEaveHld float;
    declare pStartDateIsHld,pEndDateIsHld float;
    
    set UserCreditLeave = 0.0;
    set UserDebitLEave = 0.0;
    set UserAppliedLeaveForHld = 0.0;
	set UserBalanceLeave = 0.0;
    set UserExactLeaveCount = 0.0;
    
    
	/*Get User Department*/
    select U.DeptId into UserDept from userpersonalinfo U where U.UserID = pUserID;
    
    /*Get User's Credit Leaves Count*/
    select SUM(ULC.CreditLeave) into UserCreditLeave
	from userleavecredit ULC
	Where ULC.UserID = pUserID AND date(ULC.CreditDate) <= pEffcDate AND ULC.LeaveTypeID = pLeaveTypeID and ULC.IsCountable='Y' group by ULC.LeaveTypeID;
    
	/*Get User's Debit Leaves Count*/
	select SUM(LA.NoOfDays) into UserDebitLEave 
	from leaveapplied LA 
	LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
	Where LA.UserID = pUserID AND LA.LeaveTypeID = pLeaveTypeID AND LS.LeaveMasterStatusID IN (1,2) AND LA.IsCountable='Y'
	group by LA.LeaveTypeID;
    
    /*Get User's Debit Leaves Count which overlaps with Public Holidays and Weekends*/
	/*CREATE TEMPORARY TABLE UserDebitLeaveHolidayTmpTable (
		TmpID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
		StartDate  date NOT NULL,
		EndDate  date NOT NULL
	);
    INSERT INTO UserDebitLeaveHolidayTmpTable (StartDate,EndDate) select LA.StartDate,LA.EndDate
	from leaveapplied LA 
	LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
	Where LA.UserID = pUserID AND LA.LeaveTypeID = pLeaveTypeID AND LS.LeaveMasterStatusID IN (1,2) AND LA.IsCountable='Y';
    
	select count(TmpID) INTO NoOFTmpRecords from UserDebitLeaveHolidayTmpTable;
    
    set i = 1;
    set TotalUserDebitLEaveHld = 0.0;
	WHILE i <= NoOFTmpRecords DO
		set UserDebitLEaveHld = 0.0;
        select StartDate,EndDate INTO tmpStartDate,tmpEndDate from UserDebitLeaveHolidayTmpTable 
        where TmpID = i;
		
        call nex_GetLeaveInHolidayOrWeekend(pUserID,tmpStartDate,tmpEndDate,pSandwichLeaveFor,@DaysInHolidayOrWeekend);
		
        select @DaysInHolidayOrWeekend into UserDebitLEaveHld;
        set TotalUserDebitLEaveHld = TotalUserDebitLEaveHld + UserDebitLEaveHld;
		SET i = i + 1;
	END WHILE;
    drop TABLE UserDebitLeaveHolidayTmpTable;
    */
    
    /*Get User's Balance Leaves Count*/
    /*set UserBalanceLeave = UserCreditLeave - (UserDebitLEave - TotalUserDebitLEaveHld);*/
	set UserBalanceLeave = UserCreditLeave - UserDebitLEave;
    
    /*Get User's current Applied Leaves Count*/
    select IF(pIsHalfDay = 'Y',0.5,(DATEDIFF(pEndDate,pStartDate)+1)) into UserAppliedLeaveFor;
    
	/*Get User's current Applied Leaves count which overlaps with Public Holidays and Weekends*/
    call nex_GetLeaveInHolidayOrWeekend(pUserID,pStartDate,pEndDate,pSandwichLeaveFor,@DaysInHolidayOrWeekend);
    select @DaysInHolidayOrWeekend into UserAppliedLeaveForHld;
    
    /*extra check written on 29th Jun by Shams*/
    IF(UserAppliedLeaveForHld IS NULL) THEN
    SET UserAppliedLeaveForHld = 0;
    END IF;
    
    /*Final count of User's current Applied Leaves*/
    set UserExactLeaveCount = (UserAppliedLeaveFor - UserAppliedLeaveForHld);
    SELECT UserExactLeaveCount INTO NoOfDays;
    
     /*Is there leave balance*/
    select IF(UserBalanceLeave >= UserExactLeaveCount, 'true', 'false') into HasLeaveBal;
    
    /*Is the applied leave overlapping with another leave*/
	if (pIsHalfDay = 'Y') then
		select IF(count(LA.LeavAppID) > 0,'true','false') as LeaveOverLapped into IsLeaveOverlapped from leaveapplied LA 
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
		Where LA.UserID = pUserID AND LS.LeaveMasterStatusID IN (1,2) 
		AND LA.UserID = pUserID AND
		(
			(LA.StartDate >= pStartDate and LA.EndDate <= pEndDate) 
			OR 
			(LA.EndDate >= pStartDate and LA.StartDate <= pEndDate)
		)
        AND LA.WhichHalf = pWhichHalf;
    else    
		select IF(count(LA.LeavAppID) > 0,'true','false') as LeaveOverLapped into IsLeaveOverlapped from leaveapplied LA 
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
		Where LA.UserID = pUserID AND LS.LeaveMasterStatusID IN (1,2) 
		AND LA.UserID = pUserID AND
		(
			(LA.StartDate >= pStartDate and LA.EndDate <= pEndDate) 
			OR 
			(LA.EndDate >= pStartDate and LA.StartDate <= pEndDate)
		);
    end if;
    
    /*Is StartDate and EndDate is a Holiday or Weekends*/
    set pStartDateIsHld = 0;
    set pEndDateIsHld = 0;
    
	call nex_GetLeaveInHolidayOrWeekend(pUserID,pStartDate,pStartDate,'',@DaysInHolidayOrWeekend);
    select @DaysInHolidayOrWeekend into pStartDateIsHld;
    
    call nex_GetLeaveInHolidayOrWeekend(pUserID,pEndDate,pEndDate,'',@DaysInHolidayOrWeekend);
    select @DaysInHolidayOrWeekend into pEndDateIsHld;
    
    if (pStartDateIsHld > 0 or pEndDateIsHld > 0) then
     select 'true' into IsStartEndDayHld;
    else 
     select 'false' into IsStartEndDayHld;
	end if;
    
    /*Is applying leaves in OD*/
    call nex_GetLeaveInOD(pUserID,pStartDate,pEndDate,@IsLeaveOnOD);
    select @IsLeaveOnOD into IsLeavesOnOD;
   
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetLeaveApplyValidateShams` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetLeaveApplyValidateShams`(
        IN	pUserID	int(11),
        IN	pLeaveTypeID int(11),
		IN	pStartDate date,
        IN	pEndDate date,
		IN  pIsHalfDay varchar(1),
        IN  pWhichHalf varchar(1),
        IN  pEffcDate date,
		IN  pSandwichLeaveFor varchar(20)
     )
BEGIN
	declare UserCreditLeave,UserBalanceLeave,
    UserAppliedLeaveFor,UserAppliedLeaveForHld,UserExactLeaveCount,NoOfDays float(3,1) default 0.0;
	declare UserDebitLeave float(3,1) default 0;
    
    set UserCreditLeave = 0.0;
    set UserAppliedLeaveForHld = 0.0;
	set UserBalanceLeave = 0.0;
    set UserExactLeaveCount = 0.0;
    
    
    /*Get User's Credit Leaves Count*/
    select SUM(ULC.CreditLeave) into UserCreditLeave
	from userleavecredit ULC
	Where ULC.UserID = pUserID AND date(ULC.CreditDate) <= pEffcDate AND ULC.LeaveTypeID = pLeaveTypeID and ULC.IsCountable='Y' group by ULC.LeaveTypeID;
    
	/*Get User's Debit Leaves Count*/
	select SUM(LA.NoOfDays) into UserDebitLeave 
	from leaveapplied LA 
	LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
	Where LA.UserID = pUserID AND LA.LeaveTypeID = pLeaveTypeID AND LS.LeaveMasterStatusID IN (1,2) AND LA.IsCountable='Y'
	group by LA.LeaveTypeID;
    
	set UserBalanceLeave = (UserCreditLeave - UserDebitLeave);
    
    /*Get User's current Applied Leaves Count*/
    select IF(pIsHalfDay = 'Y',0.5,(DATEDIFF(pEndDate,pStartDate)+1)) into UserAppliedLeaveFor;
    
	/*Get User's current Applied Leaves count which overlaps with Public Holidays and Weekends*/
    call nex_GetLeaveInHolidayOrWeekend(pUserID,pStartDate,pEndDate,pSandwichLeaveFor,@DaysInHolidayOrWeekend);
    select @DaysInHolidayOrWeekend into UserAppliedLeaveForHld;
    
    /*extra check written on 29th Jun by Shams*/
    IF(UserAppliedLeaveForHld IS NULL) THEN
    SET UserAppliedLeaveForHld = 0;
    END IF;
    
    /*Final count of User's current Applied Leaves*/
    set UserExactLeaveCount = (UserAppliedLeaveFor - UserAppliedLeaveForHld);
    SELECT UserExactLeaveCount INTO NoOfDays;
    
     /*Is there leave balance*/
    SELECT UserCreditLeave,UserDebitLeave,UserBalanceLeave ;  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetLeaveApplyValidate_BKP` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetLeaveApplyValidate_BKP`(
        IN	pUserID	int(11),
        IN	pLeaveTypeID int(11),
		IN	pStartDate date,
        IN	pEndDate date,
		IN  pIsHalfDay varchar(1),
        IN  pWhichHalf varchar(1),
        IN  pEffcDate date,
        OUT HasLeaveBal char(5),
        OUT IsLeaveOverlapped char(5),
        OUT IsStartEndDayHld char(5),
        OUT IsLeavesOnOD char(5)
     )
BEGIN
    declare UserDept int;
	declare UserCreditLeave,UserDebitLeave,UserBalanceLeave,
    UserAppliedLeaveFor,UserAppliedLeaveForHld float;
    
	declare i,NoOFTmpRecords INT DEFAULT 5;
    declare tmpStartDate,tmpEndDate DATE;
    declare UserDebitLEaveHld,TotalUserDebitLEaveHld float;
    declare pStartDateIsHld,pEndDateIsHld float;
    
    set UserCreditLeave = 0.0;
    set UserDebitLEave = 0.0;
    set UserAppliedLeaveForHld = 0.0;
    
    
	/*Get User Department*/
    select U.DeptId into UserDept from userpersonalinfo U where U.UserID = pUserID;
    
    /*Get User's Credit Leaves Count*/
    select SUM(ULC.CreditLeave) into UserCreditLeave
	from userleavecredit ULC
	Where ULC.UserID = pUserID AND date(ULC.CreditDate) <= pEffcDate AND ULC.LeaveTypeID = pLeaveTypeID and ULC.IsCountable='Y' group by ULC.LeaveTypeID;
    
	/*Get User's Debit Leaves Count*/
	select SUM(IF(LA.IsHalfDay = 'Y',0.5,(DATEDIFF(LA.EndDate,LA.StartDate)+1))) into UserDebitLEave 
	from leaveapplied LA 
	LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
	Where LA.UserID = pUserID AND LA.LeaveTypeID = pLeaveTypeID AND LS.LeaveMasterStatusID IN (1,2) AND LA.IsCountable='Y'
	group by LA.LeaveTypeID;
    
    /*Get User's Debit Leaves Count which overlaps with Public Holidays and Weekends*/
	CREATE TEMPORARY TABLE UserDebitLeaveHolidayTmpTable (
		TmpID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
		StartDate  date NOT NULL,
		EndDate  date NOT NULL
	);
    INSERT INTO UserDebitLeaveHolidayTmpTable (StartDate,EndDate) select LA.StartDate,LA.EndDate
	from leaveapplied LA 
	LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
	Where LA.UserID = pUserID AND LA.LeaveTypeID = pLeaveTypeID AND LS.LeaveMasterStatusID IN (1,2) AND LA.IsCountable='Y';
    
	select count(TmpID) INTO NoOFTmpRecords from UserDebitLeaveHolidayTmpTable;
    
    set i = 1;
    set TotalUserDebitLEaveHld = 0.0;
	WHILE i <= NoOFTmpRecords DO
		set UserDebitLEaveHld = 0.0;
        select StartDate,EndDate INTO tmpStartDate,tmpEndDate from UserDebitLeaveHolidayTmpTable 
        where TmpID = i;
		
        /*Deprecated*/
        /*call nex_GetLeaveInHolidayOrWeekend(UserDept,tmpStartDate,tmpEndDate,@DaysInHolidayOrWeekend);*/
        
        /*New - Using Calendar*/
        call nex_GetLeaveInHolidayOrWeekend(pUserID,tmpStartDate,tmpEndDate,@DaysInHolidayOrWeekend);
		
        select @DaysInHolidayOrWeekend into UserDebitLEaveHld;
        set TotalUserDebitLEaveHld = TotalUserDebitLEaveHld + UserDebitLEaveHld;
		SET i = i + 1;
	END WHILE;
    drop TABLE UserDebitLeaveHolidayTmpTable;
    
    
    /*Get User's Balance Leaves Count*/
    set UserBalanceLeave = UserCreditLeave - (UserDebitLEave - TotalUserDebitLEaveHld);
    
    /*Get User's current Applied Leaves Count*/
    select IF(pIsHalfDay = 'Y',0.5,(DATEDIFF(pEndDate,pStartDate)+1)) into UserAppliedLeaveFor;
    
	/*Get User's current Applied Leaves count which overlaps with Public Holidays and Weekends*/
    call nex_GetLeaveInHolidayOrWeekend(pUserID,pStartDate,pEndDate,@DaysInHolidayOrWeekend);
    select @DaysInHolidayOrWeekend into UserAppliedLeaveForHld;
    
    /*Final count of User's current Applied Leaves*/
    set UserAppliedLeaveFor = UserAppliedLeaveFor - UserAppliedLeaveForHld;
    
    /*Is there leave balance*/
    select IF(UserBalanceLeave >= UserAppliedLeaveFor, 'true', 'false') into HasLeaveBal;
    
    /*Is the applied leave overlapping with another leave*/
	if (pIsHalfDay = 'Y') then
		select IF(count(LA.LeavAppID) > 0,'true','false') as LeaveOverLapped into IsLeaveOverlapped from leaveapplied LA 
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
		Where LA.UserID = pUserID AND LS.LeaveMasterStatusID IN (1,2) 
		AND LA.UserID = pUserID AND
		(
			(LA.StartDate >= pStartDate and LA.EndDate <= pEndDate) 
			OR 
			(LA.EndDate >= pStartDate and LA.StartDate <= pEndDate)
		)
        AND LA.WhichHalf = pWhichHalf;
    else    
		select IF(count(LA.LeavAppID) > 0,'true','false') as LeaveOverLapped into IsLeaveOverlapped from leaveapplied LA 
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
		Where LA.UserID = pUserID AND LS.LeaveMasterStatusID IN (1,2) 
		AND LA.UserID = pUserID AND
		(
			(LA.StartDate >= pStartDate and LA.EndDate <= pEndDate) 
			OR 
			(LA.EndDate >= pStartDate and LA.StartDate <= pEndDate)
		);
    end if;
    
    /*Is StartDate and EndDate is a Holiday or Weekends*/
    set pStartDateIsHld = 0;
    set pEndDateIsHld = 0;
    
	call nex_GetLeaveInHolidayOrWeekend(pUserID,pStartDate,pStartDate,@DaysInHolidayOrWeekend);
    select @DaysInHolidayOrWeekend into pStartDateIsHld;
    
    call nex_GetLeaveInHolidayOrWeekend(pUserID,pEndDate,pEndDate,@DaysInHolidayOrWeekend);
    select @DaysInHolidayOrWeekend into pEndDateIsHld;
    
    if (pStartDateIsHld > 0 or pEndDateIsHld > 0) then
     select 'true' into IsStartEndDayHld;
    else 
     select 'false' into IsStartEndDayHld;
	end if;
    
    /*Is applying leaves in OD*/
    call nex_GetLeaveInOD(pUserID,pStartDate,pEndDate,@IsLeaveOnOD);
    select @IsLeaveOnOD into IsLeavesOnOD;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetLeaveInHolidayOrWeekend` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetLeaveInHolidayOrWeekend`(
    IN  pUserID int,
    IN	pStartDate date,
	IN	pEndDate date,
    IN  pSandwichLeaveFor  varchar(20),
    OUT DaysInHolidayOrWeekend float
  )
BEGIN
	declare UserAppliedLeaveForHld,UserAppliedLeaveForHldTmp float;
    declare tmpStartDate, tmpEndDate date;
    declare UserCurrentCalendar int;
    SET UserAppliedLeaveForHld = 0.0;
	SET tmpStartDate = pStartDate;
	SET tmpEndDate = pEndDate;     
	WHILE tmpStartDate <= tmpEndDate DO
		set UserAppliedLeaveForHldTmp = 0.0;
        set UserCurrentCalendar = 0;
		
		SELECT calendarid into UserCurrentCalendar FROM usercalendar
		WHERE userid = pUserID AND effectedfrom <= tmpStartDate
		ORDER BY effectedfrom DESC LIMIT 1;
        
        if UserCurrentCalendar!='' then
            select count(H.HolidayID) into UserAppliedLeaveForHldTmp 
            from calendarholiday CH left join holiday H ON CH.HolidayID = H.HolidayID
            where H.StartDate = tmpStartDate and CH.CalendarID = UserCurrentCalendar;
			
			IF UserAppliedLeaveForHldTmp > 0.0 AND pSandwichLeaveFor!='' AND FIND_IN_SET("PH", pSandwichLeaveFor) THEN
				set UserAppliedLeaveForHldTmp = 0.0;
			END IF;
            
			if(UserAppliedLeaveForHldTmp = 0.0) then
			   
               select count(W.WeekendsID) into UserAppliedLeaveForHldTmp 
               from calendarweekends CW left join weekends W ON CW.WeekendID = W.WeekendsID
			   where CW.CalendarID = UserCurrentCalendar and DAYNAME(tmpStartDate) = W.DayName;
			   
				IF UserAppliedLeaveForHldTmp > 0.0 AND pSandwichLeaveFor!='' AND FIND_IN_SET("WO", pSandwichLeaveFor) THEN
					set UserAppliedLeaveForHldTmp = 0.0;
				END IF;
			
			end if;
		end if;
        
		if(UserAppliedLeaveForHldTmp > 0.0) then
			set UserAppliedLeaveForHld = UserAppliedLeaveForHld + 1;
		end if;
		SET tmpStartDate = DATE_ADD(tmpStartDate, INTERVAL 1 DAY);
	END WHILE;
    select UserAppliedLeaveForHld into DaysInHolidayOrWeekend;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetLeaveInHolidayOrWeekend_BKP` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetLeaveInHolidayOrWeekend_BKP`(

	
    IN  pUserID int,

    IN	pStartDate date,

	IN	pEndDate date,

    OUT DaysInHolidayOrWeekend float

  )
BEGIN

	declare UserAppliedLeaveForHld,UserAppliedLeaveForHldTmp float;

    declare tmpStartDate, tmpEndDate date;
    declare UserCurrentCalendar int;

    SET UserAppliedLeaveForHld = 0.0;

	SET tmpStartDate = pStartDate;

	SET tmpEndDate = pEndDate;     

	WHILE tmpStartDate <= tmpEndDate DO

		set UserAppliedLeaveForHldTmp = 0.0;
        set UserCurrentCalendar = 0;

		
		SELECT calendarid into UserCurrentCalendar FROM usercalendar
		WHERE userid = pUserID AND effectedfrom <= tmpStartDate
		ORDER BY effectedfrom DESC LIMIT 1;
        
        if UserCurrentCalendar!='' then
			
            select count(H.HolidayID) into UserAppliedLeaveForHldTmp 
            from calendarholiday CH left join holiday H ON CH.HolidayID = H.HolidayID
            where H.StartDate = tmpStartDate and CH.CalendarID = UserCurrentCalendar;
            

			if(UserAppliedLeaveForHldTmp = 0.0) then

			   
               select count(W.WeekendsID) into UserAppliedLeaveForHldTmp 
               from calendarweekends CW left join weekends W ON CW.WeekendID = W.WeekendsID
			   where CW.CalendarID = UserCurrentCalendar and DAYNAME(tmpStartDate) = W.DayName;

			end if;

		end if;
        

		if(UserAppliedLeaveForHldTmp > 0.0) then

			set UserAppliedLeaveForHld = UserAppliedLeaveForHld + 1;

		end if;



		SET tmpStartDate = DATE_ADD(tmpStartDate, INTERVAL 1 DAY);

	END WHILE;

    select UserAppliedLeaveForHld into DaysInHolidayOrWeekend;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetLeaveInOD` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetLeaveInOD`(

	IN  pUserID int,

    IN	pStartDate date,

	IN	pEndDate date,

    OUT IsLeaveOnOD char(5)

  )
BEGIN

	declare UserAppliedLeaveOnOD int;

    declare tmpStartDate, tmpEndDate date;

    set UserAppliedLeaveOnOD = 0;

	set tmpStartDate = pStartDate;

	set tmpEndDate = pEndDate;     

	whileloop:WHILE tmpStartDate <= tmpEndDate DO

		set UserAppliedLeaveOnOD = 0;

		select count(OD.OdID) into UserAppliedLeaveOnOD from odapplied OD 

		where OD.UserID = pUserID and OD.RequestStatus IN ('Applied','Approved') and OD.OdDate = tmpStartDate;

		if(UserAppliedLeaveOnOD > 0) then

			leave whileloop;

		end if;

		SET tmpStartDate = DATE_ADD(tmpStartDate, INTERVAL 1 DAY);

	END WHILE;

    select IF(UserAppliedLeaveOnOD > 0,'true','false') into IsLeaveOnOD;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetLeaveReport` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `nex_GetLeaveReport`(
	in pUserID int(11),
	in pLeaveTypeID int(11),
    in pStartDate date,
    in pEndDate date,
    in pTypeFlg int(11)
)
BEGIN
	 DECLARE DEBTILEAVE,NONDEBTILEAVE float;
     DECLARE i,NoOFTmpRecords INT DEFAULT 5;
     DECLARE tmpStartDate,tmpEndDate DATE;
	 DECLARE tmpPolicyType,SandwichLeaveFor varchar(20);
     DECLARE UserDebitLeaveHld float;
     
     if pTypeFlg= 1 Then
		select sum(CreditLeave) as LeaveCredited from userleavecredit
        where date(CreditDate) >= pStartDate and date(CreditDate) <= pEndDate 
        and UserID = pUserID and LeaveTypeID = pLeaveTypeID and IsCountable='Y';
     elseif pTypeFlg = 2 Then
		/*Step 1*/
        select 
        SUM(IF(LA.IsHalfDay = 'Y',0.5,(DATEDIFF(if(LA.EndDate<=pEndDate,LA.EndDate,pEndDate),if(LA.StartDate>=pStartDate,LA.StartDate,pStartDate))+1))) into DEBTILEAVE 
        from leaveapplied LA 
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
        where LA.UserID = pUserID AND LA.LeaveTypeID = pLeaveTypeID
        AND LS.LeaveMasterStatusID IN (2) 
        AND (
			 (LA.StartDate >= pStartDate and LA.EndDate <= pEndDate) 
			 OR 
			 (LA.EndDate >= pStartDate and LA.StartDate <= pEndDate)
		) AND IsCountable='Y'
        group by LA.LeaveTypeID;
        
        /*Step 2*/
        CREATE TEMPORARY TABLE DebitLeaveHolidayReportTmpTable (
			TmpID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
			PolicyType varchar(20) NOT NULL default 'R',
			StartDate date NOT NULL,
			EndDate date NOT NULL,
            LeaveTypeID int NOT NULL,
			LeavesInHoliday float NULL
		);
        INSERT INTO DebitLeaveHolidayReportTmpTable (PolicyType,StartDate,EndDate,LeaveTypeID) 
        select PolicyType,if(LA.StartDate>=pStartDate,LA.StartDate,pStartDate),if(LA.EndDate<=pEndDate,LA.EndDate,pEndDate),LA.LeaveTypeID
		from leaveapplied LA 
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
		Where LA.UserID = pUserID AND LA.LeaveTypeID = pLeaveTypeID
        AND LS.LeaveMasterStatusID IN (2) 
        AND (
			 (LA.StartDate >= pStartDate and LA.EndDate <= pEndDate) 
			 OR 
			 (LA.EndDate >= pStartDate and LA.StartDate <= pEndDate)
		) AND IsCountable='Y';
		select count(TmpID) INTO NoOFTmpRecords from DebitLeaveHolidayReportTmpTable;
        set i = 1;
		WHILE i <= NoOFTmpRecords DO
			set UserDebitLeaveHld = 0.0;
			select PolicyType,StartDate,EndDate INTO tmpPolicyType,tmpStartDate,tmpEndDate from DebitLeaveHolidayReportTmpTable
			where TmpID = i;
				CASE tmpPolicyType
					WHEN 'S-PH,WO' THEN
						SET SandwichLeaveFor = 'PH,WO';
					WHEN 'S-WO,PH' THEN
						SET SandwichLeaveFor = 'PH,WO';
					WHEN 'S-PH' THEN
						SET SandwichLeaveFor = 'PH';
					WHEN 'S-WO' THEN
						SET SandwichLeaveFor = 'WO';
					ELSE SET SandwichLeaveFor = '';
				END CASE;
			call nex_GetLeaveInHolidayOrWeekend(pUserID,tmpStartDate,tmpEndDate,SandwichLeaveFor,@DaysInHolidayOrWeekend);
			select @DaysInHolidayOrWeekend into UserDebitLeaveHld;
			update DebitLeaveHolidayReportTmpTable set LeavesInHoliday = UserDebitLEaveHld where TmpID = i;
			SET i = i + 1;
		END WHILE;
        select sum(LeavesInHoliday) INTO NONDEBTILEAVE 
        from DebitLeaveHolidayReportTmpTable group by LeaveTypeID order by LeaveTypeID;
		drop TABLE DebitLeaveHolidayReportTmpTable;
        
        /*Step 3*/
        select (DEBTILEAVE - NONDEBTILEAVE) as LeaveDebited;
     End If;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetLeaveReport_BKP` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `nex_GetLeaveReport_BKP`(
	in pUserID int(11),
	in pLeaveTypeID int(11),
    in pStartDate date,
    in pEndDate date,
    in pTypeFlg int(11)
)
BEGIN
	 DECLARE DEBTILEAVE,NONDEBTILEAVE float;
     DECLARE i,NoOFTmpRecords INT DEFAULT 5;
     DECLARE tmpStartDate,tmpEndDate DATE;
     DECLARE UserDebitLeaveHld float;
     
     if pTypeFlg= 1 Then
		select sum(CreditLeave) as LeaveCredited from userleavecredit
        where date(CreditDate) >= pStartDate and date(CreditDate) <= pEndDate 
        and UserID = pUserID and LeaveTypeID = pLeaveTypeID and IsCountable='Y';
     elseif pTypeFlg = 2 Then
		/*Step 1*/
        select 
        SUM(IF(LA.IsHalfDay = 'Y',0.5,(DATEDIFF(if(LA.EndDate<=pEndDate,LA.EndDate,pEndDate),if(LA.StartDate>=pStartDate,LA.StartDate,pStartDate))+1))) into DEBTILEAVE 
        from leaveapplied LA 
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
        where LA.UserID = pUserID AND LA.LeaveTypeID = pLeaveTypeID
        AND LS.LeaveMasterStatusID IN (2) 
        AND (
			 (LA.StartDate >= pStartDate and LA.EndDate <= pEndDate) 
			 OR 
			 (LA.EndDate >= pStartDate and LA.StartDate <= pEndDate)
		) AND IsCountable='Y'
        group by LA.LeaveTypeID;
        
        /*Step 2*/
        CREATE TEMPORARY TABLE DebitLeaveHolidayReportTmpTable (
			TmpID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
			StartDate date NOT NULL,
			EndDate date NOT NULL,
            LeaveTypeID int NOT NULL,
			LeavesInHoliday float NULL
		);
        INSERT INTO DebitLeaveHolidayReportTmpTable (StartDate,EndDate,LeaveTypeID) 
        select if(LA.StartDate>=pStartDate,LA.StartDate,pStartDate),if(LA.EndDate<=pEndDate,LA.EndDate,pEndDate),LA.LeaveTypeID
		from leaveapplied LA 
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
		Where LA.UserID = pUserID AND LA.LeaveTypeID = pLeaveTypeID
        AND LS.LeaveMasterStatusID IN (2) 
        AND (
			 (LA.StartDate >= pStartDate and LA.EndDate <= pEndDate) 
			 OR 
			 (LA.EndDate >= pStartDate and LA.StartDate <= pEndDate)
		) AND IsCountable='Y';
		select count(TmpID) INTO NoOFTmpRecords from DebitLeaveHolidayReportTmpTable;
        set i = 1;
		WHILE i <= NoOFTmpRecords DO
			set UserDebitLeaveHld = 0.0;
			select StartDate,EndDate INTO tmpStartDate,tmpEndDate from DebitLeaveHolidayReportTmpTable
			where TmpID = i;
			call nex_GetLeaveInHolidayOrWeekend(pUserID,tmpStartDate,tmpEndDate,@DaysInHolidayOrWeekend);
			select @DaysInHolidayOrWeekend into UserDebitLeaveHld;
			update DebitLeaveHolidayReportTmpTable set LeavesInHoliday = UserDebitLEaveHld where TmpID = i;
			SET i = i + 1;
		END WHILE;
        select sum(LeavesInHoliday) INTO NONDEBTILEAVE 
        from DebitLeaveHolidayReportTmpTable group by LeaveTypeID order by LeaveTypeID;
		drop TABLE DebitLeaveHolidayReportTmpTable;
        
        /*Step 3*/
        select (DEBTILEAVE - NONDEBTILEAVE) as LeaveDebited;
     End If;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetLeaveSummaryByType` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetLeaveSummaryByType`(
IN `pOrgID` INT(11),
IN `pLoggedUserID` INT(11) ,
IN `pYear` INT(5),
IN `pMonth` INT(5),
IN `pFilterBy` varchar(50),
IN `pGroupByFlag` varchar(50)
)
BEGIN
declare startMonthField,endMonthField,payrollStatus varchar(50);
Declare UserRole varchar(20);
Declare UserDept text;

/* Get all sub depts of department of a manager*/
Select IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur INNER JOIN userworkinfo uwi on ur.roleID = uwi.roleID  
where uwi.UserID = U.UserID), 'EMPLOYEE') into UserRole from userpersonalinfo U where U.UserID = pLoggedUserID;

Select GROUP_CONCAT(DeptID) into UserDept from deptmanager where DeptManagerID = pLoggedUserID;
CALL nex_GetDeptTree(UserDept,@AllHrcyDept);

drop table if exists temp_AllDept;
CREATE TEMPORARY TABLE temp_AllDept
SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
FROM (select @AllHrcyDept as Dept_Id) t CROSS JOIN
(
SELECT a.N + b.N * 10 + 1 n
FROM
(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
ORDER BY n
) n
WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));
	
IF pGroupByFlag='dept' THEN
SET max_sp_recursion_depth=2;
call nex_GetLeaveSummaryByType(pOrgID,pLoggedUserID,pYear,pMonth,'','set_range');
SET max_sp_recursion_depth=0;
/*select @startDate,@endDate;*/
	IF UserRole = 'SUPERVISOR' THEN
		SELECT  D.DeptID,D.DepartmentName ,sum( IF(LA.IsHalfDay = 'Y','0.5',(DATEDIFF(LA.EndDate,LA.StartDate)+1) )) as LeaveTaken 
		FROM department D LEFT JOIN  userpersonalinfo UPI ON (UPI.DeptID=D.DeptID  and D.DeptID IN (select * from temp_AllDept))
		LEFT JOIN leaveapplied LA ON LA.UserID=UPI.UserID
		LEFT JOIN leavestatus LS ON LS.LeaveStatusID=LA.LeaveStatusID AND LS.LeaveMasterStatusID=2 
		WHERE 
		UPI.OrgID=pOrgID
		AND LA.StartDate>=@startDate AND LA.EndDate<=@endDate
		GROUP BY D.DeptID   ORDER BY LeaveTaken DESC;
    ELSEIF  UserRole = 'ADMIN' THEN
		SELECT  D.DeptID,D.DepartmentName ,sum( IF(LA.IsHalfDay = 'Y','0.5',(DATEDIFF(LA.EndDate,LA.StartDate)+1) )) as LeaveTaken 
		FROM department D LEFT JOIN  userpersonalinfo UPI ON UPI.DeptID=D.DeptID
		LEFT JOIN leaveapplied LA ON LA.UserID=UPI.UserID
		/*LEFT JOIN deptmanager DM  ON DM.DeptID=D.DeptID*/
		LEFT JOIN leavestatus LS ON LS.LeaveStatusID=LA.LeaveStatusID AND LS.LeaveMasterStatusID=2 
		WHERE 
		UPI.OrgID=pOrgID
        AND LA.StartDate>=@startDate AND LA.EndDate<=@endDate
		GROUP BY D.DeptID HAVING LeaveTaken>0   ORDER BY LeaveTaken DESC;
	ELSE 
		SELECT * FROM userpersonalinfo where 0 ;
    
    END IF;
ELSEIF pGroupByFlag='loc' THEN
	SET max_sp_recursion_depth=2;
	CALL nex_GetLeaveSummaryByType(pOrgID,pLoggedUserID,pYear,pMonth,'','set_range');
	SET max_sp_recursion_depth=0;
	IF UserRole = 'SUPERVISOR' THEN
		SELECT  UPI.SiteLocation ,sum( IF(LA.IsHalfDay = 'Y','0.5',(DATEDIFF(LA.EndDate,LA.StartDate)+1) )) as LeaveTaken 
		FROM  userpersonalinfo UPI LEFT JOIN  leaveapplied LA ON UPI.UserID=LA.UserID 
		LEFT JOIN leavestatus LS ON LS.LeaveStatusID=LA.LeaveStatusID AND LS.LeaveMasterStatusID=2 
		WHERE 
		UPI.OrgID=pOrgID
		AND LA.StartDate>=@startDate AND LA.EndDate<=@endDate
        AND UPI.DeptID IN (select * from temp_AllDept)
		GROUP BY UPI.SiteLocation  ORDER BY LeaveTaken DESC;
	ELSEIF  UserRole = 'ADMIN' THEN
		SELECT  UPI.SiteLocation ,sum( IF(LA.IsHalfDay = 'Y','0.5',(DATEDIFF(LA.EndDate,LA.StartDate)+1) )) as LeaveTaken 
		FROM  userpersonalinfo UPI LEFT JOIN  leaveapplied LA ON UPI.UserID=LA.UserID 
		LEFT JOIN leavestatus LS ON LS.LeaveStatusID=LA.LeaveStatusID AND LS.LeaveMasterStatusID=2 
		WHERE 
		UPI.OrgID=pOrgID
		AND LA.StartDate>=@startDate AND LA.EndDate<=@endDate
		GROUP BY UPI.SiteLocation   ORDER BY LeaveTaken DESC;
	 ELSE 
		SELECT * FROM userpersonalinfo where 0 ;
	END IF;
ELSEIF pGroupByFlag='employee' THEN
	SET max_sp_recursion_depth=2;
	CALL nex_GetLeaveSummaryByType(pOrgID,pLoggedUserID,pYear,pMonth,'','set_range');
	SET max_sp_recursion_depth=0;
		IF UserRole = 'SUPERVISOR' THEN
			 CASE pFilterBy
				WHEN 'freq' THEN
					SELECT  UPI.UserID,CONCAT(FName,IF((LName!='' AND LName IS NOT NULL),CONCAT(' ',LName),'') ) AS Name, COUNT(LA.LeavAppID) AS Frequency
					FROM  userpersonalinfo UPI 
					LEFT JOIN  leaveapplied LA ON UPI.UserID=LA.UserID 
					LEFT JOIN leavestatus LS ON LS.LeaveStatusID=LA.LeaveStatusID AND LS.LeaveMasterStatusID=2 
					WHERE 
					UPI.OrgID=pOrgID
					AND LA.StartDate>=@startDate AND LA.EndDate<=@endDate
					AND UPI.DeptID IN (SELECT * from temp_AllDept)
					AND UPI.UserID!=pLoggedUserID
					GROUP BY UPI.UserID  HAVING Frequency>0  ORDER BY Frequency DESC,Name ASC;
				WHEN 'noOfDays' THEN
					SELECT  UPI.UserID,CONCAT(FName,IF((LName!='' AND LName IS NOT NULL),CONCAT(' ',LName),'') ) AS Name,
					sum( IF(LA.IsHalfDay = 'Y','0.5',(DATEDIFF(LA.EndDate,LA.StartDate)+1) )) as LeaveTaken 
					FROM department D LEFT JOIN  userpersonalinfo UPI ON (UPI.DeptID=D.DeptID  AND D.DeptID IN (SELECT * FROM temp_AllDept))
					LEFT JOIN leaveapplied LA ON LA.UserID=UPI.UserID
					LEFT JOIN leavestatus LS ON LS.LeaveStatusID=LA.LeaveStatusID AND LS.LeaveMasterStatusID=2 
					WHERE 
					UPI.OrgID=pOrgID
					AND LA.StartDate>=@startDate AND LA.EndDate<=@endDate
					AND UPI.UserID!=pLoggedUserID
					GROUP BY UPI.UserID  HAVING LeaveTaken>0  ORDER BY LeaveTaken DESC,Name ASC;
			 END CASE;
		ELSEIF UserRole = 'ADMIN' THEN
			 CASE pFilterBy
				WHEN 'freq' THEN
					SELECT  UPI.UserID,CONCAT(FName,IF((LName!='' AND LName IS NOT NULL),CONCAT(' ',LName),'') ) AS Name, 
					COUNT(LA.LeavAppID) AS Frequency
					FROM  userpersonalinfo UPI 
					LEFT JOIN  leaveapplied LA ON UPI.UserID=LA.UserID 
					LEFT JOIN leavestatus LS ON LS.LeaveStatusID=LA.LeaveStatusID AND LS.LeaveMasterStatusID=2 
					WHERE 
					UPI.OrgID=pOrgID
					AND LA.StartDate>=@startDate AND LA.EndDate<=@endDate
					AND UPI.UserID!=pLoggedUserID
					GROUP BY UPI.UserID  HAVING Frequency>0  ORDER BY Frequency DESC,Name ASC;				
				WHEN 'noOfDays' THEN
					SELECT  UPI.UserID,CONCAT(FName,IF((LName!='' AND LName IS NOT NULL),CONCAT(' ',LName),'') ) AS Name,
					sum( IF(LA.IsHalfDay = 'Y','0.5',(DATEDIFF(LA.EndDate,LA.StartDate)+1) )) AS LeaveTaken 
					FROM department D LEFT JOIN  userpersonalinfo UPI ON UPI.DeptID=D.DeptID
					LEFT JOIN leaveapplied LA ON LA.UserID=UPI.UserID
					LEFT JOIN leavestatus LS ON LS.LeaveStatusID=LA.LeaveStatusID AND LS.LeaveMasterStatusID=2 
					WHERE 
					UPI.OrgID=pOrgID
					AND LA.StartDate>=@startDate AND LA.EndDate<=@endDate
					AND UPI.UserID!=pLoggedUserID
					GROUP BY UPI.UserID  HAVING LeaveTaken>0  ORDER BY LeaveTaken DESC,Name ASC;
			END CASE;
			ELSE 
				SELECT * FROM userpersonalinfo where 0 ;
		END IF;
         
ELSEIF pGroupByFlag='supervisor' THEN
	SET max_sp_recursion_depth=2;
	CALL nex_GetLeaveSummaryByType(pOrgID,pLoggedUserID,pYear,pMonth,'','set_range');
	SET max_sp_recursion_depth=0;
		IF UserRole = 'SUPERVISOR' THEN
			 CASE pFilterBy
				WHEN 'freq' THEN
					SELECT  UPI.UserID,CONCAT(FName,IF((LName!='' AND LName IS NOT NULL),CONCAT(' ',LName),'') ) AS Name, COUNT(LA.LeavAppID) AS Frequency
					FROM  userpersonalinfo UPI 
					LEFT JOIN  leaveapplied LA ON UPI.UserID=LA.UserID 
					LEFT JOIN leavestatus LS ON LS.LeaveStatusID=LA.LeaveStatusID AND LS.LeaveMasterStatusID=2 
					LEFT JOIN deptmanager DM on UPI.UserID=DM.DeptManagerID
					LEFT JOIN department D ON D.DeptID=DM.DeptID
					WHERE 
					UPI.OrgID=pOrgID
					AND LA.StartDate>=@startDate AND LA.EndDate<=@endDate
					AND DM.DeptID IN (SELECT * from temp_AllDept)
					AND UPI.UserID!=pLoggedUserID
					GROUP BY UPI.UserID  HAVING Frequency>0  ORDER BY Frequency DESC,Name ASC;
				WHEN 'noOfDays' THEN
					SELECT  UPI.UserID,CONCAT(FName,IF((LName!='' AND LName IS NOT NULL),CONCAT(' ',LName),'') ) AS Name,
					sum( IF(LA.IsHalfDay = 'Y','0.5',(DATEDIFF(LA.EndDate,LA.StartDate)+1) )) as LeaveTaken
					FROM department D LEFT JOIN userpersonalinfo UPI ON (UPI.DeptID=D.DeptID  AND D.DeptID IN (SELECT * FROM temp_AllDept))
					LEFT JOIN leaveapplied LA ON LA.UserID=UPI.UserID
					LEFT JOIN leavestatus LS ON LS.LeaveStatusID=LA.LeaveStatusID AND LS.LeaveMasterStatusID=2 
					LEFT JOIN deptmanager DM on UPI.UserID=DM.DeptManagerID
					WHERE 
					UPI.OrgID=pOrgID
					AND LA.StartDate>=@startDate AND LA.EndDate<=@endDate
					AND DM.DeptManagerID IS NOT NULL
					AND UPI.UserID!=pLoggedUserID
					GROUP BY UPI.UserID  HAVING LeaveTaken>0  ORDER BY LeaveTaken DESC,Name ASC;
			 END CASE;
		ELSEIF UserRole = 'ADMIN' THEN
			 CASE pFilterBy
				WHEN 'freq' THEN
					SELECT  UPI.OrgID,UPI.UserID,CONCAT(FName,IF((LName!='' AND LName IS NOT NULL),CONCAT(' ',LName),'') ) AS Name, 
					COUNT(LA.LeavAppID) AS Frequency
					FROM  userpersonalinfo UPI 
					LEFT JOIN  leaveapplied LA ON UPI.UserID=LA.UserID 
					LEFT JOIN leavestatus LS ON LS.LeaveStatusID=LA.LeaveStatusID AND LS.LeaveMasterStatusID=2 
					LEFT JOIN deptmanager DM on UPI.UserID=DM.DeptManagerID
					LEFT JOIN department D ON D.DeptID=DM.DeptID
					WHERE 
					UPI.OrgID=pOrgID
					AND LA.StartDate>=@startDate AND LA.EndDate<=@endDate
					AND DM.DeptManagerID IS NOT NULL
					AND UPI.UserID!=pLoggedUserID
					GROUP BY UPI.UserID  HAVING Frequency>0  ORDER BY Frequency DESC,Name ASC;
				WHEN 'noOfDays' THEN
						SELECT  UPI.UserID,CONCAT(FName,IF((LName!='' AND LName IS NOT NULL),CONCAT(' ',LName),'') ) AS Name,
                        sum( IF(LA.IsHalfDay = 'Y','0.5',(DATEDIFF(LA.EndDate,LA.StartDate)+1) )) as LeaveTaken 
						FROM department D LEFT JOIN  userpersonalinfo UPI ON UPI.DeptID=D.DeptID
						LEFT JOIN leaveapplied LA ON LA.UserID=UPI.UserID
						LEFT JOIN leavestatus LS ON LS.LeaveStatusID=LA.LeaveStatusID AND LS.LeaveMasterStatusID=2 
                        LEFT JOIN deptmanager DM on UPI.UserID=DM.DeptManagerID
						WHERE 
						UPI.OrgID=pOrgID
						AND LA.StartDate>=@startDate AND LA.EndDate<=@endDate
                        AND DM.DeptManagerID IS NOT NULL
						AND UPI.UserID!=pLoggedUserID
						GROUP BY UPI.UserID  HAVING LeaveTaken>0  ORDER BY LeaveTaken DESC,Name ASC;
			 END CASE;
		ELSE 
			SELECT * FROM userpersonalinfo where 0 ;
		END IF;

ELSEIF pGroupByFlag='set_range' THEN
	      SELECT IsActive into payrollStatus from policy_payroll_duration where OrgID=pOrgID AND ForYear = pYear;
			CASE payrollStatus
				WHEN 'Y' THEN
					SET startMonthField= (concat("Month",pMonth,"Start"));
					SET endMonthField = (concat("Month",pMonth,"End"));
					SET @stmtStart = CONCAT('SET @startDate=','(SELECT ',startMonthField,' FROM policy_payroll_duration  WHERE 
				OrgID=',pOrgID,' AND ForYear=',pYear,')');
				PREPARE startDateStmt FROM @stmtStart;
				EXECUTE startDateStmt;
                
                SET @stmtEnd = CONCAT('SET @endDate=','(SELECT ',endMonthField,' FROM policy_payroll_duration  WHERE 
				OrgID=',pOrgID,' AND ForYear=',pYear,')');
				PREPARE endDateStmt FROM @stmtEnd;
				EXECUTE endDateStmt;
                
                IF(@endDate IS NULL || @endDate='') THEN
					SET @startDate = CONCAT_WS('-',pYear,IF(pMonth<10,CONCAT('0',pMonth),pMonth),'01');
					SET @endDate = LAST_DAY(@startDate);
                END IF;
			WHEN 'N' THEN
				SET @startDate = CONCAT_WS('-',pYear,IF(pMonth<10,CONCAT('0',pMonth),pMonth),'01');
				SET @endDate = LAST_DAY(@startDate);
			ELSE 
            		SET @startDate = CONCAT_WS('-',pYear,IF(pMonth<10,CONCAT('0',pMonth),pMonth),'01');
					SET @endDate = LAST_DAY(@startDate);
			END CASE;
            
                
ELSEIF pGroupByFlag='get_range' THEN
	    SET max_sp_recursion_depth=2;
		CALL nex_GetLeaveSummaryByType(pOrgID,pLoggedUserID,pYear,pMonth,'','set_range');
		SET max_sp_recursion_depth=0;
        select @startDate as 'Start',@endDate as 'End';            
                
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetLisencedModulesOfOrg` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetLisencedModulesOfOrg`(
	in pOrgID INT
)
BEGIN
	SELECT NL.ModuleID,NM.ModuleName,NL.AddedOn,NL.ModuleOrder,NL.IsActive
    from nexlicense NL LEFT JOIN nexmodule NM ON NL.ModuleID = NM.ModuleID
    where NL.OrgID = pOrgID and NL.IsActive='Y'
    order by NL.ModuleOrder asc;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_getnexorganization` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_getnexorganization`()
BEGIN



 select * from nexorganization;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetOdApplyValidate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetOdApplyValidate`(
        in	pUserID	int(11),
        in  pOdStartTime datetime,
        in  pOdEndTime datetime,
        out IsAlrdyApplied char(5),
        out IscurrentlyAtOffice char(5),
        out IscurrentlyAtOffice2 char(5),
        out IsAttendance char(5),
        out IsOnLeave char(5)
     )
BEGIN
		select if(count(OD.OdID) > 0,'true','false') into IsAlrdyApplied from odapplied OD 
        where OD.UserID = pUserID and
		(
		(OD.OdStartTime >= pOdStartTime and OD.OdEndTime <= pOdEndTime) 
		OR 
		(OD.OdEndTime >= pOdStartTime and OD.OdStartTime <= pOdEndTime)
		) and OD.RequestStatus IN ('Applied','Approved');
    
        select if(count(A.AttendanceID) > 0,'true','false') into IscurrentlyAtOffice from attendance A 
        where date(A.LogTime) = date(pOdStartTime)
        and A.UserID = pUserID 
        and A.CheckInTime IS NOT NULL and A.CheckOutTime IS NULL and A.AutoCheckOut IS NULL
        and pOdStartTime > CONVERT_TZ(A.CheckInTime,'+00:00','+05:30');
        
        select if(count(A.AttendanceID) > 0,'true','false') into IscurrentlyAtOffice2 from attendance A 
        where date(A.LogTime) = date(pOdStartTime)
        and A.UserID = pUserID 
        and A.CheckInTime IS NOT NULL and A.CheckOutTime IS NULL and A.AutoCheckOut IS NULL
        and pOdStartTime <= CONVERT_TZ(A.CheckInTime,'+00:00','+05:30')
        and pOdEndTime >= CONVERT_TZ(A.CheckInTime,'+00:00','+05:30');
        
        
        select if(count(A.AttendanceID) > 0,'true','false') into IsAttendance from attendance A 
        where date(A.LogTime) = date(pOdStartTime)
        and A.UserID = pUserID  
        and A.CheckInTime IS NOT NULL and A.CheckOutTime IS NOT NULL 
        and A.AutoCheckOut IS NULL 
        and 
        (
		(CONVERT_TZ(A.CheckInTime,'+00:00','+05:30') >= pOdStartTime and CONVERT_TZ(A.CheckOutTime,'+00:00','+05:30') <= pOdEndTime) 
		OR 
		(CONVERT_TZ(A.CheckOutTime,'+00:00','+05:30') >= pOdStartTime and CONVERT_TZ(A.CheckInTime,'+00:00','+05:30') <= pOdEndTime)
		)
        ;
        
        select if(count(LA.LeavAppID) > 0,'true','false') into IsOnLeave from leaveapplied LA
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
        where LA.UserID = pUserID and LS.LeaveMasterStatusID IN (1,2) and
        date(pOdStartTime) BETWEEN LA.StartDate AND LA.EndDate;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetOTPCodeForEmp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetOTPCodeForEmp`(

in pUserID int

)
BEGIN

	Select OTPCode from checkinotpdetails where UserID = pUserID and 

	(OTPTime > DATE_SUB(Now(), INTERVAL 30 MINUTE)) and OTPverified = 'N' 

    ORDER BY OTPTime DESC

    LIMIT 1;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetQRCheckOutCodeForEmp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetQRCheckOutCodeForEmp`(

in pUserID int

)
BEGIN



Select QRCode from checkoutdetailsmore where UserID = pUserID and 

(Checkouttime > DATE_SUB(Now(), INTERVAL 30 MINUTE))  ;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetQRCodeForEmp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetQRCodeForEmp`(

in pUserID int

)
BEGIN



Select QRCode from checkindetailsmore where UserID = pUserID and 

(CheckInTime > DATE_SUB(Now(), INTERVAL 30 MINUTE))  ;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetSupervisorNotifications` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetSupervisorNotifications`(

in pUserID int

)
BEGIN



Select * from userpersonalinfo UP 

inner join department D on Up.DeptID = D.DeptID

inner join deptmanager DM on D.DeptID = DM.DeptID

Where DM.DeptManagerID = 50 and UP.UserID <> pUserID;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetSuperVisorsForOrg` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetSuperVisorsForOrg`(
in pOrgID int
)
BEGIN
Select DISTINCT UP.*, DP.DepartmentName as DeptName, 
(Select CONCAT(Fname, ' ', LName, ' (', DP.DepartmentName, ')') from userpersonalinfo where DeptID = UP.DeptID and UserID = DPM.DeptManagerID) as Supervisor,
IFNULL((Select IFNULL(UR.rolename, 'EMPLOYEE') from userrole UR inner join userworkinfo UWI on UR.roleID = UWI.roleID where UWI.UserID = UP.UserID), 'EMPLOYEE') as Role
from department DP inner join deptmanager DPM on DP.DeptID = DPM.DeptID
inner join userpersonalinfo UP on UP.UserID = DPM.DeptManagerID
inner join userrole UR on UR.OrgID = UP.OrgID
inner join userworkinfo UWI on UWI.UserID = UP.UserID
where DP.OrgID = pOrgID and UP.Deactivated = 'N' and UR.roleName in ('ADMIN', 'SUPERVISOR') group by UP.UserID;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetUserHoliday` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetUserHoliday`(
	 IN	pUserID	int(11),
     IN pTodayDate date
)
BEGIN
            DECLARE USERCALENDAR int;
			select UC.CalendarID INTO USERCALENDAR from usercalendar UC where 
            UC.EffectedFrom <= pTodayDate and UC.UserID = pUserID order by UC.EffectedFrom desc limit 1;
        
			select H.HolidayID,H.HolidayName,H.HolidayDescription,H.StartDate,H.EndDate,H.OrgID
			from calendarholiday CH 
			LEFT JOIN holiday H ON CH.HolidayID = H.HolidayID
			where CH.CalendarID = USERCALENDAR
			order by H.StartDate desc;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_GetVisitorOfOrg` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_GetVisitorOfOrg`(
	in pOrgID int(10),
	in pStartDate date,
	in pEndDate date
)
BEGIN
    SELECT VA.MeetingID,VA.VisitorType,VA.VisitorID,V.FullName,V.CompanyName,V.MobileNo,V.Email,V.Photo,V.SignUpDate,
    VA.CheckInTime,VA.CheckInLocation,VA.CheckOutTime,VA.CheckOutLocation,
    VA.MeetToName,VA.MeetToMobileNo,VA.MeetToUserID,VA.MeetReason,date(VA.LogTime) as LogTime,VA.VisitAttenStatus,VA.MeetingStatus,VA.StaticQrCardNo,
    concat(U.FName,' ',U.LName) MeetToFullName,U.EmployeeID MeetToEmployeeID
    from visitorattendance VA left join visitor V on VA.VisitorID = V.VisitorID
    left join userpersonalinfo U on VA.MeetToUserID = U.UserID
    where V.OrgID = pOrgID and (date(VA.LogTime) >= date(pStartDate) AND date(VA.LogTime) <= date(pEndDate))
    order by VA.MeetingID desc,VA.VisitorAttendanceID asc;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_Get_MngrDept` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_Get_MngrDept`(

	In	pUserID	int(11)

)
BEGIN

	Select DeptID from deptmanager where DeptManagerID = pUserID;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_KioskCreate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_KioskCreate`(
	in pKioskID int(11),
	in pOrgID int(11),
	in pUserID int(11),
	in pEmail varchar (50),
	in pKioskName varchar (50),
	in pUniqueDeviceID varchar (50),
	in pDeviceType varchar (50),
	in pOTP varchar(10),
	in pRegisteredOn datetime,
	in pTypeFlg int(11)
)
BEGIN

if pTypeFlg= 1 Then
	 INSERT INTO kiosk
	 (
	 OrgID,
	 UserID,
	 Email,
	 KioskName,
	 UniqueDeviceID,
	 OTP,
	 DeviceType
	 ) 
	 VALUES
	 (
	 pOrgID,
	 pUserID,
	 pEmail,
	 pKioskName,
	 pUniqueDeviceID,
	 pOTP,
	 pDeviceType
	 );
elseif pTypeFlg= 2 Then
	 Update kiosk k Set 
	 k.OTP= pOTP
	 Where k.KioskID= pKioskID; 
elseif pTypeFlg= 3 Then
	Select KioskID from kiosk where Email= pEmail and isActive = 'Y';
elseif pTypeFlg= 4 Then
	select KioskID,Email from kiosk where Email=pEmail and OTP=pOTP and isActive = 'N';
elseif pTypeFlg= 5 Then 
	 Update kiosk k Set 
	 k.OTPSuccess= 'Y',
	 k.IsActive='Y' ,
	 k.RegisteredOn=pRegisteredOn
	 Where k.KioskID= pKioskID;
	 delete from kiosk where Email = pEmail and OTPSuccess='N' and IsActive='N';
elseif pTypeFlg= 6 Then 
	select * from kiosk where OrgID=pOrgID and OTPSuccess='Y' order by KioskID desc; 
elseif pTypeFlg= 7 Then
	 Update kiosk k Set 
	 k.IsActive='N' 
	 Where k.KioskID= pKioskID;
End If;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_KioskLogin` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_KioskLogin`(
	in pUserEmail varchar (50),
	in pPassword  varchar (50),
	in pUniqueDeviceID  varchar (255)
)
BEGIN
Select UP.UserID,UP.OrgID,UP.FName,UP.LName,UP.Email,UP.UserPicture,UP.WorkPhone,UP.CellNo,UP.EmployeeID,UP.DeptID,
UP.PwdResetrequired,UP.Deactivated,
DP.DepartmentName as DeptName,
(Select GROUP_CONCAT(DeptID) from deptmanager where DeptManagerID = UP.UserID) as MngrOfDept, 
(Select CONCAT(Fname, ' ', LName) from userpersonalinfo where UserID = DPM.DeptManagerID) as Supervisor,
IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur INNER JOIN userworkinfo uwi on ur.roleID = uwi.roleID where uwi.UserID = UP.UserID), 'EMPLOYEE') as Role,
IFNULL(UWI.Designation, '') as Designation
from userpersonalinfo UP
LEFT JOIN kiosk KOSK on UP.UserID = KOSK.UserID
LEFT JOIN department DP on UP.DeptID = DP.DeptID
LEFT JOIN deptmanager DPM on DP.DeptID = DPM.DeptID
LEFT JOIN userworkinfo UWI on UP.UserID = UWI.UserID
where UP.Email=pUserEmail and UP.Pwd like binary pPassword and UP.deleted=0 and KOSK.UniqueDeviceID = pUniqueDeviceID and KOSK.IsActive = 'Y'
limit 1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_OrgByEmail` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_OrgByEmail`(

in pUserEmail varchar (50)

)
BEGIN

	Select * from userpersonalinfo where Email=pUserEmail;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_OrgDetailsByID` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_OrgDetailsByID`(
	in pOrgID int (11)
)
BEGIN
	Select OrgName,ContactEmail,CreatedDate,IsActive from nexorganization where OrgID=pOrgID;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_ResetPassword` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_ResetPassword`(
in pUserEmail varchar (50),

in pPassword   varchar (255),

in pCurrentPassword varchar (50),

in pPwdResetRequired varchar (1)
)
BEGIN
 UPDATE userpersonalinfo SET Pwd = pPassword, PwdResetRequired = pPwdResetRequired WHERE Email = pUserEmail AND Pwd = pCurrentPassword ;
    Select * from userpersonalinfo where Email = pUserEmail;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_SaveSupervisiorForEmp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_SaveSupervisiorForEmp`(
in pSupervisorID int,
in pUserID text,
in pOrgID int,
in pDeptID int
)
BEGIN
    DECLARE i,NOOFU int;
    if pDeptID = 0 then
		Select @vDeptID := D.DeptID from department D inner join deptmanager DM on D.DeptID = DM.DeptID 
		Where DM.DeptManagerID = pSupervisorID and D.OrgID = pOrgID limit 0,1;
    else
		Select @vDeptID := pDeptID;
    end if;
    
    call splitter(pUserID,',');
    select count(SplitValue) INTO NOOFU from splitResultsTmpTable;
	set i = 1;
	WHILE i <= NOOFU DO 
		Update userpersonalinfo set DeptID = @vDeptID where UserID = (select SplitValue from splitResultsTmpTable where TmpID = i);
        SET i = i + 1;
	END WHILE;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_ShowEarlyCheckoutOld` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_ShowEarlyCheckoutOld`(
		in pSupUserID int(11),
		in pOrgID int(11),
		in  pStartDate date,
		in  pEndDate date,
		IN  pFlag char(4)
     )
BEGIN
 if pFlag= 'ARR' Then
	select ECOA.*,CONCAT(UP.FName,' ',UP.LName) as UserName,UP.EmployeeID as UserEmployeeID,UP.UserPicture,
	Time(A.CheckInTime) as CheckInTime, 
	Time(A.CheckOutTime) CheckOutTime,
	 (TIMESTAMPDIFF(Second, A.CheckInTime, A.CheckOutTime)) TotalWorkedHours
	from earlycheckoutapproval ECOA
	LEFT JOIN attendance A ON ECOA.AttendanceID = A.AttendanceID
	LEFT JOIN userpersonalinfo UP ON ECOA.UserID = UP.UserID
	where ECOA.SupervisorUserID = pSupUserID 
	AND ECOA.OrgID = pOrgID
	AND  (DATE_FORMAT(ECOA.AppliedDate, "%Y-%m-%d") >= pStartDate AND DATE_FORMAT(ECOA.AppliedDate, "%Y-%m-%d") <= pEndDate) 
	AND ECOA.RequestStatus IN('Approved','Rejected')
	ORDER BY ECOA.AppliedDate DESC;
    End If;
 commit;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_Show_Attendance` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_Show_Attendance`(
	in	pUserID	int(11),
	in 	pType Char(1),
    in 	pStartDate date,
    in 	pEndDate date
)
BEGIN
	if isNull(pStartDate) Then
		Set pStartDate = Date_Add(Now(), Interval -6 day);
	End if;
    
	if isNull(pEndDate) Then
		Set pEndDate = date(Now());
	End if;
    if pType='S' Then
        Select A.UserId  as UserID, 
        /*date(CheckInTime) as AttnDate,*/
        date(LogTime) as AttnDate,
        Time(CheckInTime) as CheckInTime, 
        Time(CheckOutTime) CheckOutTime, 
        (TIMESTAMPDIFF(Second, CheckInTime, CheckOutTime)) TotalHours,
        CheckInLocation, CheckOutLocation,AutoCheckOut
		from Attendance ATT inner join userpersonalinfo UP on ATT.UserID = UP.UserID
        inner join department D on UP.orgID = D.OrgID
		Inner join deptmanager DM on D.DeptID = DM.DeptID
		Where DM.DeptManagerID = pUserID
        and ATT.UserId<> pUserID
        /*and CheckInTime>= pStartDate and CheckInTime< Date_Add(pEndDate, interval 1 day)*/
		and date(A.LogTime) >= pStartDate and date(A.LogTime) <= pEndDate
        Order by date(CheckInTime); 
    End If;
    if pType='U' Then
        Select A.UserId as UserID, 
        /*date(CheckInTime) as AttnDate,*/
        date(LogTime) as AttnDate,
        Time(CheckInTime) as CheckInTime, 
        Time(CheckOutTime) CheckOutTime,
        (TIMESTAMPDIFF(Second, CheckInTime, CheckOutTime)) TotalHours,
        CheckInLocation, CheckOutLocation,AutoCheckOut,
        ECOA.WorkDuration ECWorkDuration,ECOA.LessDuration ECLessDuration,ECOA.RequestStatus ECRequestStatus 
		from attendance A LEFT JOIN earlycheckoutapproval ECOA ON A.AttendanceID=ECOA.AttendanceID
		Where A.UserID = pUserID 
        /*and CheckInTime>= pStartDate and CheckInTime< Date_Add(pEndDate, interval 1 day)*/
        and date(A.LogTime) >= pStartDate and date(A.LogTime) <= pEndDate
        Order by date(CheckInTime);
    End If;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_Show_CompoffListofdept` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_Show_CompoffListofdept`(
		IN pUserID int,
        in pDeptID text,
		in pStartDate date,
        in pEndDate date,
        in pFlag char(4)
     )
BEGIN
	DECLARE DeptMngUserID INT;
    DECLARE UserRole varchar(10);
	DECLARE SelDeptID text;
    
    SELECT group_concat(DM.DeptManagerID) INTO DeptMngUserID from deptmanager DM where DM.DeptID IN (pDeptID);
    
    Select IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur INNER JOIN userworkinfo uwi on ur.roleID = uwi.roleID 
    where uwi.UserID = U.UserID), 'EMPLOYEE') into UserRole from userpersonalinfo U where U.UserID = pUserID;
    
    
	/*Get all hierarchy sub department ids*/
	if UserRole = 'ADMIN' then
		CALL nex_GetDeptTree(pDeptID,@AllHrcyDept);
		SELECT @AllHrcyDept INTO SelDeptID;
	else
		SELECT pDeptID INTO SelDeptID;
	end if;
    
    CREATE TEMPORARY TABLE temp_AllDept
    SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
	  FROM (select pDeptID as Dept_Id) t CROSS JOIN
	  (
	   SELECT a.N + b.N * 10 + 1 n
		 FROM
		(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
	   ,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
		ORDER BY n
	   ) n
	WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));
    
	if pFlag = 'A' then 
		SELECT U.UserID,U.FName,U.LName,U.EmployeeID,U.UserPicture,D.DepartmentName,
		CMOF.CompOffID,CMOF.UserID,CMOF.CompOffDate,CMOF.RequestType as OrigRequestType,if(CMOF.RequestType='Leave','CO Request','Off Day Present') as RequestType,CMOF.AppliedDate,CMOF.RequestStatus,
		CMOF.StatusUpdateDate,CMOF.StatusUpdteBy
		FROM compoffapplied CMOF
		LEFT JOIN userpersonalinfo U ON CMOF.UserID = U.UserID
		LEFT JOIN department D ON U.DeptID = D.DeptID
        WHERE CMOF.RequestStatus != 'Applied'
        AND CMOF.CompOffDate BETWEEN pStartDate AND pEndDate
		AND U.DeptID IN (select * from temp_AllDept)
		AND CMOF.UserID NOT IN (DeptMngUserID)
		ORDER BY CMOF.CompOffDate DESC;
	elseif pFlag = 'APPV' then 
		/*Thuis is using for Report*/
        SELECT U.UserID,U.FName,U.LName,U.EmployeeID,U.UserPicture,D.DepartmentName,
		CMOF.CompOffID,CMOF.UserID,CMOF.CompOffDate,CMOF.RequestType as OrigRequestType,if(CMOF.RequestType='Leave','CO Request','Off Day Present') as RequestType,CMOF.AppliedDate,CMOF.RequestStatus,
		CMOF.StatusUpdateDate,CMOF.StatusUpdteBy
		FROM compoffapplied CMOF
		LEFT JOIN userpersonalinfo U ON CMOF.UserID = U.UserID
		LEFT JOIN department D ON U.DeptID = D.DeptID
        WHERE CMOF.RequestStatus = 'Approved'
        AND (
        CMOF.CompOffDate BETWEEN pStartDate AND pEndDate
        OR
        date(CMOF.StatusUpdateDate) BETWEEN pStartDate AND pEndDate
        )
		AND U.DeptID IN (select * from temp_AllDept)
		AND CMOF.UserID NOT IN (DeptMngUserID)
		ORDER BY CMOF.CompOffDate DESC;    
	else
		SELECT U.UserID,U.FName,U.LName,U.EmployeeID,U.UserPicture,D.DepartmentName,
		CMOF.CompOffID,CMOF.UserID,CMOF.CompOffDate,CMOF.RequestType as OrigRequestType,if(CMOF.RequestType='Leave','CO Request','Off-day Working') as RequestType,CMOF.AppliedDate,CMOF.RequestStatus,
		CMOF.StatusUpdateDate,CMOF.StatusUpdteBy
		FROM compoffapplied CMOF
		LEFT JOIN userpersonalinfo U ON CMOF.UserID = U.UserID
		LEFT JOIN department D ON U.DeptID = D.DeptID
		WHERE CMOF.RequestStatus = 'Applied'
		AND U.DeptID IN (select * from temp_AllDept)
		AND CMOF.UserID NOT IN (DeptMngUserID)
		ORDER BY CMOF.CompOffDate DESC;
	end if;
	DROP TEMPORARY TABLE temp_AllDept;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_Show_DeptAttendanceHrs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_Show_DeptAttendanceHrs`(
        IN pDeptID text,
        IN pStartDate date,
        IN pEndDate date
     )
BEGIN
		
		/*Get all hierarchy sub department ids*/
		CALL nex_GetDeptTree(pDeptID,@AllHrcyDept);
		CREATE TEMPORARY TABLE temp_AllDept
		SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
		FROM (select @AllHrcyDept as Dept_Id) t CROSS JOIN
		(
		SELECT a.N + b.N * 10 + 1 n
		 FROM
		(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
		,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
		ORDER BY n
		) n
		WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));
        
        SELECT A.UserID,U.FName,U.LName,U.EmployeeID,U.UserPicture,D.DepartmentName,
		SUM(TIMESTAMPDIFF(MINUTE,A.CheckInTime,A.CheckOutTime)) WorkedTime, 
		count(A.AttendanceID) NoOfAttn
		FROM attendance A
		LEFT JOIN userpersonalinfo U ON A.UserID = U.UserID
        LEFT JOIN department D ON D.DeptID = U.DeptID 
		WHERE U.DeptID IN (select * from temp_AllDept) AND DATE(A.LogTime) BETWEEN pStartDate AND pEndDate
		GROUP BY A.UserID
		ORDER BY U.FName;
        
        DROP TEMPORARY TABLE temp_AllDept;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_Show_LeaveCountCalender` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_Show_LeaveCountCalender`(
		in  pUserID int,
		in  pDeptID text,
        in	pStartDate date,
        in	pEndDate date
)
BEGIN
DECLARE DeptMngUserID,TeamSize INT;
DECLARE UserRole varchar(10);
DECLARE SelDeptID text;

SELECT group_concat(DM.DeptManagerID) INTO DeptMngUserID from deptmanager DM where DM.DeptID IN (pDeptID);

Select IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur INNER JOIN userworkinfo uwi on ur.roleID = uwi.roleID 
where uwi.UserID = U.UserID), 'EMPLOYEE') into UserRole from userpersonalinfo U where U.UserID = pUserID;

/*Get all hierarchy sub department ids*/
if UserRole = 'ADMIN' then
	CALL nex_GetDeptTree(pDeptID,@AllHrcyDept);
	SELECT @AllHrcyDept INTO SelDeptID;
else
	SELECT pDeptID INTO SelDeptID;
end if;

CREATE TEMPORARY TABLE temp_AllDept
SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
  FROM (select SelDeptID as Dept_Id) t CROSS JOIN
  (
   SELECT a.N + b.N * 10 + 1 n
	 FROM
	(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
   ,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
	ORDER BY n
   ) n
WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));

CREATE TEMPORARY TABLE temp_AllDept2
SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
  FROM (select SelDeptID as Dept_Id) t CROSS JOIN
  (
   SELECT a.N + b.N * 10 + 1 n
	 FROM
	(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
   ,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
	ORDER BY n
   ) n
WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));

CREATE TEMPORARY TABLE temp_AllDept3
SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
  FROM (select SelDeptID as Dept_Id) t CROSS JOIN
  (
   SELECT a.N + b.N * 10 + 1 n
	 FROM
	(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
   ,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
	ORDER BY n
   ) n
WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));

SELECT count(U.UserID) INTO TeamSize from userpersonalinfo U where U.DeptID IN (select * from temp_AllDept);
select a.Date,
(
	select count(LA.UserID) from leaveapplied LA
	LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
	LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
	where LS.LeaveMasterStatusID = 2 AND a.Date BETWEEN StartDate AND EndDate
	AND U.DeptID IN (select * from temp_AllDept) AND LA.UserID NOT IN (DeptMngUserID)
) as NoOfEmpOnLev
, IF(
	(
		select count(LA.UserID) from leaveapplied LA
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
		LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
		where LS.LeaveMasterStatusID = 2 AND a.Date BETWEEN StartDate AND EndDate
		AND U.DeptID IN (select * from temp_AllDept2) AND LA.UserID NOT IN (DeptMngUserID)
	)>= (TeamSize*0.10),'#fb0013',
	IF(
	(
		select count(LA.UserID) from leaveapplied LA
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
		LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
		where LS.LeaveMasterStatusID = 2 AND a.Date BETWEEN StartDate AND EndDate
		AND U.DeptID IN (select * from temp_AllDept3) AND LA.UserID NOT IN (DeptMngUserID)
	)= ((TeamSize*0.10)-1),'#f89e00',''
	)
)
 as ThresholdFlag,TeamSize
from 
(select pEndDate - INTERVAL (a.a + (10 * b.a) + (100 * c.a)) DAY as Date from 
	(select 0 as a union all select 1 union all select 2 union all select 3 union all 
	select 4 union all select 5 union all select 6 union all select 7 union all 
	select 8 union all select 9) as a cross join (select 0 as a union all select 1 union all 
	select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all 
	select 7 union all select 8 union all select 9) as b cross join 
	(select 0 as a union all select 1 union all select 2 union all 
	select 3 union all select 4 union all select 5 union all select 6 union all select 7 
	union all select 8 union all select 9) as c 
) a 
where a.Date between pStartDate and pEndDate;

DROP TEMPORARY TABLE temp_AllDept;
DROP TEMPORARY TABLE temp_AllDept2;
DROP TEMPORARY TABLE temp_AllDept3;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_Show_LeaveListofdept` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_Show_LeaveListofdept`(
        IN pUserID int,
        IN pDeptID text,
        IN pStartDate date,
        IN pEndDate date,
        IN pFlag char(4)
     )
BEGIN
	DECLARE DeptMngUserID INT;
	DECLARE UserRole varchar(10);
    DECLARE SelDeptID text;
    
    SELECT group_concat(DM.DeptManagerID) INTO DeptMngUserID from deptmanager DM where DM.DeptID IN (pDeptID);
    
	Select IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur INNER JOIN userworkinfo uwi on ur.roleID = uwi.roleID  
	where uwi.UserID = U.UserID), 'EMPLOYEE') into UserRole from userpersonalinfo U where U.UserID = pUserID;
    
    /*Get all hierarchy sub department ids*/
    if UserRole = 'ADMIN' then
		CALL nex_GetDeptTree(pDeptID,@AllHrcyDept);
        SELECT @AllHrcyDept INTO SelDeptID;
    else
		SELECT pDeptID INTO SelDeptID;
    end if;
    
    CREATE TEMPORARY TABLE temp_AllDept
    SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
	  FROM (select SelDeptID as Dept_Id) t CROSS JOIN
	  (
	   SELECT a.N + b.N * 10 + 1 n
		 FROM
		(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
	   ,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
		ORDER BY n
	   ) n
	WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));
    
    
    If pFlag = 'DLL' Then
		SELECT U.UserID,U.EmployeeID,U.DeptID,U.FName,U.LName,U.UserPicture,D.DepartmentName,
		LA.LeavAppID,LA.LeaveTypeID,LA.LeaveStatusID,LA.StatusUpdteBy,LA.StartDate,LA.EndDate,LA.AppliedDate,
        LA.NoOfDays,LA.PolicyType,
		LA.IsHalfDay,LA.WhichHalf,LA.LeaveReason,LS.LeaveStatusText,LT.LeaveTypeText
		FROM leaveapplied LA
        LEFT JOIN leaveappliedstatuslog LLOG ON LLOG.LeavAppID = LA.LeavAppID
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
		LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
		LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
        LEFT JOIN department D ON U.DeptID = D.DeptID
		WHERE LA.LeaveStatusID = LLOG.LeaveStatusID 
        AND U.DeptID IN (select * from temp_AllDept)
		AND (
			 (LA.StartDate >= pStartDate and LA.EndDate <= pEndDate) 
			 OR 
			 (LA.EndDate >= pStartDate and LA.StartDate <= pEndDate)
		)
        AND LA.UserID NOT IN (DeptMngUserID)
		AND LS.LeaveMasterStatusID != 1 ORDER BY LA.StartDate DESC;
    elseif pFlag = 'DALL' Then
        SELECT U.UserID,U.EmployeeID,U.DeptID,U.FName,U.LName,U.UserPicture,D.DepartmentName,
		LA.LeavAppID,LA.LeaveTypeID,LA.LeaveStatusID,LA.StatusUpdteBy,LA.StartDate,LA.EndDate,LA.AppliedDate,
		LA.NoOfDays,LA.PolicyType,
		LA.IsHalfDay,LA.WhichHalf,LA.LeaveReason,LS.LeaveStatusText,LT.LeaveTypeText,LMT.LeaveMasterType,LLOG.StatusNote
		FROM leaveapplied LA
        LEFT JOIN leaveappliedstatuslog LLOG ON LLOG.LeavAppID = LA.LeavAppID
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
		LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
        LEFT JOIN leavemastertype LMT ON LMT.LeaveMasterTypeID = LT.LeaveMasterTypeID
		LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
		LEFT JOIN department D ON U.DeptID = D.DeptID
		WHERE LA.LeaveStatusID = LLOG.LeaveStatusID
        AND U.DeptID IN (select * from temp_AllDept)  
		AND (
			 (LA.StartDate >= pStartDate and LA.EndDate <= pEndDate) 
			 OR 
			 (LA.EndDate >= pStartDate and LA.StartDate <= pEndDate)
		)
        AND LA.UserID NOT IN (DeptMngUserID)
		AND LS.LeaveMasterStatusID = 2 ORDER BY LA.StartDate DESC;
	else
		SELECT U.UserID,U.EmployeeID,U.DeptID,U.FName,U.LName,U.UserPicture,D.DepartmentName,
		LA.LeavAppID,LA.LeaveTypeID,LA.LeaveStatusID,LA.StatusUpdteBy,LA.StartDate,LA.EndDate,LA.AppliedDate,
		LA.NoOfDays,LA.PolicyType,
		LA.IsHalfDay,LA.WhichHalf,LA.LeaveReason,LS.LeaveStatusText,LT.LeaveTypeText,LLOG.StatusNote
		FROM leaveapplied LA
		LEFT JOIN leaveappliedstatuslog LLOG ON LLOG.LeavAppID = LA.LeavAppID
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
		LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
		LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
		LEFT JOIN department D ON U.DeptID = D.DeptID
		WHERE LA.LeaveStatusID = LLOG.LeaveStatusID
        AND U.DeptID IN (select * from temp_AllDept)
        AND LA.UserID NOT IN (DeptMngUserID)
		AND LS.LeaveMasterStatusID = 1 ORDER BY LA.StartDate DESC;
	END if;
    
    DROP TEMPORARY TABLE temp_AllDept;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_Show_LeaveListofdept_BKP` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_Show_LeaveListofdept_BKP`(
        IN pDeptID text,
        IN pStartDate date,
        IN pEndDate date,
        IN pFlag char(4)
     )
BEGIN
	DECLARE DeptMngUserID INT;
    SELECT group_concat(DM.DeptManagerID) INTO DeptMngUserID from deptmanager DM where DM.DeptID IN (pDeptID);
    
    /*Get all hierarchy sub department ids*/
    CALL nex_GetDeptTree(pDeptID,@AllHrcyDept);
    CREATE TEMPORARY TABLE temp_AllDept
    SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
	  FROM (select @AllHrcyDept as Dept_Id) t CROSS JOIN
	  (
	   SELECT a.N + b.N * 10 + 1 n
		 FROM
		(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
	   ,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
		ORDER BY n
	   ) n
	WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));
    
    
    If pFlag = 'DLL' Then
		SELECT U.UserID,U.EmployeeID,U.DeptID,U.FName,U.LName,U.UserPicture,D.DepartmentName,
		LA.LeavAppID,LA.LeaveTypeID,LA.LeaveStatusID,LA.StatusUpdteBy,LA.StartDate,LA.EndDate,LA.AppliedDate,
        IF(LA.IsHalfDay = 'Y','0.5', (DATEDIFF(LA.EndDate,LA.StartDate)+1)) as NoOfDays,
		LA.IsHalfDay,LA.WhichHalf,LA.LeaveReason,LS.LeaveStatusText,LT.LeaveTypeText
		FROM leaveapplied LA
        LEFT JOIN leaveappliedstatuslog LLOG ON LLOG.LeavAppID = LA.LeavAppID
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
		LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
		LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
        LEFT JOIN department D ON U.DeptID = D.DeptID
		WHERE LA.LeaveStatusID = LLOG.LeaveStatusID 
        AND U.DeptID IN (select * from temp_AllDept)
		AND (
			 (LA.StartDate >= pStartDate and LA.EndDate <= pEndDate) 
			 OR 
			 (LA.EndDate >= pStartDate and LA.StartDate <= pEndDate)
		)
        AND LA.UserID NOT IN (DeptMngUserID)
		AND LS.LeaveMasterStatusID != 1 ORDER BY LA.StartDate DESC;
    elseif pFlag = 'DALL' Then
        SELECT U.UserID,U.EmployeeID,U.DeptID,U.FName,U.LName,U.UserPicture,D.DepartmentName,
		LA.LeavAppID,LA.LeaveTypeID,LA.LeaveStatusID,LA.StatusUpdteBy,LA.StartDate,LA.EndDate,LA.AppliedDate,
        IF(LA.IsHalfDay = 'Y','0.5', (DATEDIFF(LA.EndDate,LA.StartDate)+1)) as NoOfDays,
		LA.IsHalfDay,LA.WhichHalf,LA.LeaveReason,LS.LeaveStatusText,LT.LeaveTypeText,LMT.LeaveMasterType,LLOG.StatusNote
		FROM leaveapplied LA
        LEFT JOIN leaveappliedstatuslog LLOG ON LLOG.LeavAppID = LA.LeavAppID
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
		LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
        LEFT JOIN leavemastertype LMT ON LMT.LeaveMasterTypeID = LT.LeaveMasterTypeID
		LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
		LEFT JOIN department D ON U.DeptID = D.DeptID
		WHERE LA.LeaveStatusID = LLOG.LeaveStatusID
        AND U.DeptID IN (select * from temp_AllDept)  
		AND (
			 (LA.StartDate >= pStartDate and LA.EndDate <= pEndDate) 
			 OR 
			 (LA.EndDate >= pStartDate and LA.StartDate <= pEndDate)
		)
        AND LA.UserID NOT IN (DeptMngUserID)
		AND LS.LeaveMasterStatusID = 2 ORDER BY LA.StartDate DESC;
	else
		SELECT U.UserID,U.EmployeeID,U.DeptID,U.FName,U.LName,U.UserPicture,D.DepartmentName,
		LA.LeavAppID,LA.LeaveTypeID,LA.LeaveStatusID,LA.StatusUpdteBy,LA.StartDate,LA.EndDate,LA.AppliedDate,
        IF(LA.IsHalfDay = 'Y','0.5', (DATEDIFF(LA.EndDate,LA.StartDate)+1)) as NoOfDays,
		LA.IsHalfDay,LA.WhichHalf,LA.LeaveReason,LS.LeaveStatusText,LT.LeaveTypeText,LLOG.StatusNote
		FROM leaveapplied LA
		LEFT JOIN leaveappliedstatuslog LLOG ON LLOG.LeavAppID = LA.LeavAppID
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
		LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
		LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
		LEFT JOIN department D ON U.DeptID = D.DeptID
		WHERE LA.LeaveStatusID = LLOG.LeaveStatusID
        AND U.DeptID IN (select * from temp_AllDept)
        AND LA.UserID NOT IN (DeptMngUserID)
		AND LS.LeaveMasterStatusID = 1 ORDER BY LA.StartDate DESC;
	END if;
    
    DROP TEMPORARY TABLE temp_AllDept;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_Show_Leavemaster` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_Show_Leavemaster`(

        in	pTypeFlg int(11)

     )
BEGIN

    if pTypeFlg= 1 Then

		Select * from leavemasterstatus order by leaveMasterStatus;	

	elseif pTypeFlg= 2 Then

		Select * from leavemastertype order by leaveMasterType;

    End If;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_Show_Leaveofdept` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_Show_Leaveofdept`(
        IN pUserID int,
        IN pDeptID text,
        IN pDate datetime,
        OUT OnLeave smallint(5),
        OUT TotalPresent smallint(5),
		OUT OnOD smallint(5),
        OUT LevPndRqst smallint(5),
		OUT ODPndRqst smallint(5),
		OUT CompOffPndRqst smallint(5)
     )
BEGIN
    DECLARE DeptMngUserID INT;
    DECLARE pDeptIDAll text;
    DECLARE UserRole varchar(10);
	DECLARE SelDeptID text;
    
    call splitter(pDeptID,',');
    select group_concat(SplitValue) INTO pDeptIDAll from splitResultsTmpTable;
    
    SELECT group_concat(DM.DeptManagerID) INTO DeptMngUserID from deptmanager DM where DM.DeptID IN (pDeptIDAll);
    
    Select IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur INNER JOIN userworkinfo uwi on ur.roleID = uwi.roleID 
    where uwi.UserID = U.UserID), 'EMPLOYEE') into UserRole from userpersonalinfo U where U.UserID = pUserID;
    
    /*Get all hierarchy sub department ids*/
	if UserRole = 'ADMIN' then
		CALL nex_GetDeptTree(pDeptID,@AllHrcyDept);
		SELECT @AllHrcyDept INTO SelDeptID;
	else
		SELECT pDeptID INTO SelDeptID;
	end if;
    
    CREATE TEMPORARY TABLE temp_AllDept
    SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
	  FROM (select pDeptID as Dept_Id) t CROSS JOIN
	  (
	   SELECT a.N + b.N * 10 + 1 n
		 FROM
		(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
	   ,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
		ORDER BY n
	   ) n
	WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));
    
    
    /*In Office Count*/
	SELECT count(DISTINCT A.AttendanceID) INTO TotalPresent from attendance A
    LEFT JOIN userpersonalinfo U ON A.UserID = U.UserID
    LEFT JOIN checkindetailsmore CDM ON A.UserID = CDM.UserID and CDM.TypeFlg = 'O' and DATE(CONVERT_TZ(CDM.CheckIntime,'+00:00','+05:30')) = date(pDate)
    where U.DeptID IN (select * from temp_AllDept) and U.Deactivated = 'N'
    AND DATE(CONVERT_TZ(A.LogTime,'+00:00','+05:30')) = date(pDate)
    AND 
    (
		pDate >= CONVERT_TZ(CDM.CheckIntime,'+00:00','+05:30')
        AND
        ((A.CheckOutTime IS NULL) OR (A.CheckOutTime < CDM.CheckIntime))
	);
    
    
    /*In Leave Count*/
    create TEMPORARY TABLE temp_AllDept2 like temp_AllDept;
    insert temp_AllDept2 select * from temp_AllDept;
    SELECT count(LA.LeavAppID) INTO OnLeave 
    FROM leaveapplied LA
    LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
    LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
    WHERE  U.DeptID IN (select * from temp_AllDept) and U.Deactivated = 'N' AND (date(pDate) >= LA.StartDate AND date(pDate) <= LA.EndDate)
    AND LA.UserID NOT IN (DeptMngUserID)
    AND LS.LeaveMasterStatusID = 2
    AND LA.UserID NOT IN (
		SELECT A.UserID from attendance A
		LEFT JOIN userpersonalinfo U ON A.UserID = U.UserID
		LEFT JOIN checkindetailsmore CDM ON A.UserID = CDM.UserID and CDM.TypeFlg = 'O' and DATE(CONVERT_TZ(CDM.CheckIntime,'+00:00','+05:30')) = date(pDate)
		where U.DeptID IN (select * from temp_AllDept2) and U.Deactivated = 'N'
		AND DATE(CONVERT_TZ(A.LogTime,'+00:00','+05:30')) = date(pDate)
		AND 
		(
		pDate >= CONVERT_TZ(CDM.CheckIntime,'+00:00','+05:30')
		AND
		((A.CheckOutTime IS NULL) OR (A.CheckOutTime < CDM.CheckIntime))
		)
    );
    DROP TEMPORARY TABLE temp_AllDept2;
    
    
    /*In OD Count*/
    create TEMPORARY TABLE temp_AllDept3 like temp_AllDept;
    insert temp_AllDept3 select * from temp_AllDept;
	SELECT count(OD.OdID) INTO OnOD from odapplied OD
	LEFT JOIN userpersonalinfo U ON OD.UserID = U.UserID
	WHERE OD.OdDate = date(pDate)
	AND OD.RequestStatus = 'Approved'
	AND 
    (
		pDate >= OD.OdStartTime AND pDate <= OD.OdEndTime
	)
    AND U.DeptID IN (select * from temp_AllDept) and U.Deactivated = 'N'
    AND OD.UserID NOT IN (DeptMngUserID)
	AND OD.UserID NOT IN (
		SELECT A.UserID from attendance A
		LEFT JOIN userpersonalinfo U ON A.UserID = U.UserID
		LEFT JOIN checkindetailsmore CDM ON A.UserID = CDM.UserID and CDM.TypeFlg = 'O' and DATE(CONVERT_TZ(CDM.CheckIntime,'+00:00','+05:30')) = date(pDate)
		where U.DeptID IN (select * from temp_AllDept3) and U.Deactivated = 'N'
		AND DATE(CONVERT_TZ(A.LogTime,'+00:00','+05:30')) = date(pDate)
		AND 
		(
		pDate >= CONVERT_TZ(CDM.CheckIntime,'+00:00','+05:30')
		AND
		((A.CheckOutTime IS NULL) OR (A.CheckOutTime < CDM.CheckIntime))
		)
    );
    DROP TEMPORARY TABLE temp_AllDept3;
    
    
    
    SELECT count(LA.LeavAppID) INTO LevPndRqst 
    FROM leaveapplied LA
    LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
    LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
    WHERE  U.DeptID IN (select * from temp_AllDept) and U.Deactivated = 'N'
    AND LA.UserID NOT IN (DeptMngUserID)
    AND LS.LeaveMasterStatusID = 1;
    
	SELECT count(OD.OdID) INTO ODPndRqst from odapplied OD
    LEFT JOIN userpersonalinfo U ON OD.UserID = U.UserID
	WHERE OD.RequestStatus = 'Applied'
    AND U.DeptID IN (select * from temp_AllDept) and U.Deactivated = 'N'
    AND OD.UserID NOT IN (DeptMngUserID);
    
    SELECT count(COMP.CompOffID) INTO CompOffPndRqst
    FROM compoffapplied COMP
    LEFT JOIN userpersonalinfo U ON COMP.UserID = U.UserID
    WHERE COMP.RequestStatus = 'Applied'
    AND U.DeptID IN (select * from temp_AllDept) and U.Deactivated = 'N'
	AND COMP.UserID NOT IN (DeptMngUserID);
    
    
   
    
    DROP TEMPORARY TABLE temp_AllDept;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_Show_MyLeaves` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_Show_MyLeaves`(
        IN	pUserID	int(11),
        IN  pDeptID int(11),
        IN  pEffcDate date,
        IN  pFlag char(10)
     )
BEGIN
    DECLARE i,NoOFTmpRecords INT DEFAULT 5;
	DECLARE tmpStartDate,tmpEndDate DATE;
    DECLARE UserDebitLeaveHld float;
    
	DECLARE CheckExists int;
	SET CheckExists = 0;
    
	If pFlag = 'C' Then
		select ULC.LeaveTypeID, LT.LeaveTypeText, SUM(ULC.CreditLeave) CreditLeave
		from userleavecredit ULC
		LEFT JOIN leavetype LT ON ULC.LeaveTypeID = LT.LeaveTypeID
		Where ULC.UserID = pUserID and date(CreditDate) <= pEffcDate AND ULC.IsCountable='Y'
        group by ULC.LeaveTypeID
		order by ULC.LeaveTypeID;
    elseif pFlag = 'D' Then
		select LA.LeaveTypeID, LT.LeaveTypeText,
        SUM(LA.NoOfDays) DebitLeave 
        from leaveapplied LA 
        LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID 
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
        Where LA.UserID = pUserID AND LS.LeaveMasterStatusID IN (1,2) AND LA.IsCountable='Y'
        group by LA.LeaveTypeID order by LA.LeaveTypeID;
	elseif pFlag = 'D2' Then
		select LA.LeaveTypeID, LT.LeaveTypeText,
        SUM(LA.NoOfDays) DebitLeave 
        from leaveapplied LA 
        LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID 
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
        Where LA.UserID = pUserID AND LS.LeaveMasterStatusID IN (2)  AND LA.IsCountable='Y'
        group by LA.LeaveTypeID order by LA.LeaveTypeID;
     elseif pFlag = 'D2-RPT' Then
		select LA.LeaveTypeID, LT.LeaveTypeText,
        SUM(LA.NoOfDays) DebitLeave 
        from leaveapplied LA 
        LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID 
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
        Where LA.UserID = pUserID AND LS.LeaveMasterStatusID IN (2)
        AND (LA.EndDate <= pEffcDate OR LA.StartDate <= pEffcDate)  AND LA.IsCountable='Y'
        group by LA.LeaveTypeID order by LA.LeaveTypeID;      
     /*
	 elseif pFlag = 'DOH' Then
		CREATE TEMPORARY TABLE DebitLeaveHolidayTmpTable (
			TmpID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
			StartDate  date NOT NULL,
			EndDate  date NOT NULL,
            LeaveTypeID int NOT NULL,
			LeavesInHoliday float NULL
		);
		INSERT INTO DebitLeaveHolidayTmpTable (StartDate,EndDate,LeaveTypeID) 
        select LA.StartDate,LA.EndDate,LA.LeaveTypeID
		from leaveapplied LA 
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
		Where LA.UserID = pUserID AND LS.LeaveMasterStatusID IN (1,2) AND LA.IsCountable='Y' order by LA.LeaveTypeID;
        
        select count(TmpID) INTO NoOFTmpRecords from DebitLeaveHolidayTmpTable;
		
        set i = 1;
		WHILE i <= NoOFTmpRecords DO
			set UserDebitLeaveHld = 0.0;
			select StartDate,EndDate INTO tmpStartDate,tmpEndDate from DebitLeaveHolidayTmpTable
			where TmpID = i;
			call nex_GetLeaveInHolidayOrWeekend(pUserID,tmpStartDate,tmpEndDate,@DaysInHolidayOrWeekend);
			select @DaysInHolidayOrWeekend into UserDebitLeaveHld;
			update DebitLeaveHolidayTmpTable set LeavesInHoliday = UserDebitLEaveHld where TmpID = i;
			SET i = i + 1;
		END WHILE;
		select LeaveTypeID,sum(LeavesInHoliday) DebitHolidayLeave 
        from DebitLeaveHolidayTmpTable group by LeaveTypeID order by LeaveTypeID;
		drop TABLE DebitLeaveHolidayTmpTable;
	*/	
     /*
	 elseif pFlag = 'DOH-RPT' Then
		CREATE TEMPORARY TABLE DebitLeaveHolidayTmpTable (
			TmpID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
			StartDate  date NOT NULL,
			EndDate  date NOT NULL,
            LeaveTypeID int NOT NULL,
			LeavesInHoliday float NULL
		);
		INSERT INTO DebitLeaveHolidayTmpTable (StartDate,EndDate,LeaveTypeID) 
        select LA.StartDate,LA.EndDate,LA.LeaveTypeID
		from leaveapplied LA 
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
		Where LA.UserID = pUserID AND LS.LeaveMasterStatusID IN (1,2)
        AND (LA.EndDate <= pEffcDate OR LA.StartDate <= pEffcDate) 
        AND LA.IsCountable='Y'
        order by LA.LeaveTypeID;
        
        select count(TmpID) INTO NoOFTmpRecords from DebitLeaveHolidayTmpTable;
		
        set i = 1;
		WHILE i <= NoOFTmpRecords DO
			set UserDebitLeaveHld = 0.0;
			select StartDate,EndDate INTO tmpStartDate,tmpEndDate from DebitLeaveHolidayTmpTable
			where TmpID = i;
			call nex_GetLeaveInHolidayOrWeekend(pUserID,tmpStartDate,tmpEndDate,@DaysInHolidayOrWeekend);
			select @DaysInHolidayOrWeekend into UserDebitLeaveHld;
			update DebitLeaveHolidayTmpTable set LeavesInHoliday = UserDebitLEaveHld where TmpID = i;
			SET i = i + 1;
		END WHILE;
		select LeaveTypeID,sum(LeavesInHoliday) DebitHolidayLeave 
        from DebitLeaveHolidayTmpTable group by LeaveTypeID order by LeaveTypeID;
		drop TABLE DebitLeaveHolidayTmpTable; 
     */		
     elseif pFlag = 'ISL' Then
		select LA.LeavAppID,LA.StartDate,LA.EndDate,LA.IsHalfDay from leaveapplied LA
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
        where LS.LeaveMasterStatusID = 2 and LA.UserID = pUserID 
        and pEffcDate between LA.StartDate and LA.EndDate
        AND LA.IsCountable='Y';
     else
        /*
        Select count(LA.LeavAppID) INTO CheckExists
		from leaveapplied LA
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
		where LA.UserID = pUserID AND LS.LeaveMasterStatusID = 2 AND LA.StartDate >= pEffcDate AND LA.IsCountable='Y';
        
        If (CheckExists > 0) THEN 
			Select LA.LeavAppID,LA.UserID,U.DeptID,LA.LeaveTypeID,LA.LeaveStatusID,LA.StartDate,LA.EndDate,
			IF(LA.IsHalfDay = 'Y','0.5', (DATEDIFF(LA.EndDate,LA.StartDate)+1)) as NoOfDays,
			LT.LeaveTypeText,LS.LeaveStatusText 
			from leaveapplied LA
			LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
			LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
			LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
			where LA.UserID = pUserID AND LS.LeaveMasterStatusID = 2 AND LA.StartDate >= pEffcDate
            AND LA.IsCountable='Y'
			order by LA.StartDate asc LIMIT 0,1;
        Else
			Select LA.LeavAppID,LA.UserID,U.DeptID,LA.LeaveTypeID,LA.LeaveStatusID,LA.StartDate,LA.EndDate,
            IF(LA.IsHalfDay = 'Y','0.5', (DATEDIFF(LA.EndDate,LA.StartDate)+1)) as NoOfDays,
			LT.LeaveTypeText,LS.LeaveStatusText 
			from leaveapplied LA
			LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
			LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
			LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
			where LA.UserID = pUserID AND LS.LeaveMasterStatusID = 2 AND LA.StartDate <= pEffcDate
            AND LA.IsCountable='Y'
			order by LA.StartDate desc LIMIT 0,1;
        End if;
        */
        /*
        Select 'Leave' as `Type`,LA.StartDate,LA.EndDate,IF(LA.IsHalfDay = 'Y','0.5', (DATEDIFF(LA.EndDate,LA.StartDate)+1)) as NoOfDays,LT.LeaveTypeText
		from leaveapplied LA
		LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
		where LA.UserID = pUserID AND LS.LeaveMasterStatusID = 2 AND LA.StartDate >= pEffcDate
        AND LA.IsCountable='Y'
		order by LA.StartDate asc LIMIT 0,1;
        */
		(Select 'Leave' as `Type`,LA.LeavAppID,LA.UserID,LA.LeaveTypeID,LA.LeaveStatusID,LA.StartDate,LA.EndDate,LA.NoOfDays,LT.LeaveTypeText,LS.LeaveStatusText
		from leaveapplied LA
		LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
		where LA.UserID = pUserID AND LS.LeaveMasterStatusID = 2 AND LA.StartDate >= pEffcDate
        AND LA.IsCountable='Y'
		order by LA.StartDate asc LIMIT 0,1)
        UNION 
        (
		select 'Holiday' as `Type`,H.HolidayID as LeavAppID,0 as UserID,0 as LeaveTypeID,0 as LeaveStatusID,
        H.StartDate,H.EndDate,(DATEDIFF(H.EndDate,H.StartDate)+1) as NoOfDays,H.HolidayName,'' as LeaveStatusText
		from holiday H  
		LEFT JOIN calendarholiday CH ON CH.HolidayID = H.HolidayID and H.StartDate >= pEffcDate
		where CH.CalendarID = (select UC.CalendarID from usercalendar UC where UC.EffectedFrom <= pEffcDate and UC.UserID = pUserID order by UC.EffectedFrom desc limit 1)
		order by H.StartDate asc LIMIT 0,1
        ) 
        order by StartDate asc limit 0,1;
        
    End If;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_Show_MyLeaves_BKP` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_Show_MyLeaves_BKP`(
        IN	pUserID	int(11),
        IN  pDeptID int(11),
        IN  pEffcDate date,
        IN  pFlag char(10)
     )
BEGIN
    DECLARE i,NoOFTmpRecords INT DEFAULT 5;
	DECLARE tmpStartDate,tmpEndDate DATE;
    DECLARE UserDebitLeaveHld float;
    
	DECLARE CheckExists int;
	SET CheckExists = 0;
    
	If pFlag = 'C' Then
		select ULC.LeaveTypeID, LT.LeaveTypeText, SUM(ULC.CreditLeave) CreditLeave
		from userleavecredit ULC
		LEFT JOIN leavetype LT ON ULC.LeaveTypeID = LT.LeaveTypeID
		Where ULC.UserID = pUserID and date(CreditDate) <= pEffcDate AND ULC.IsCountable='Y' 
        group by ULC.LeaveTypeID
		order by ULC.LeaveTypeID;
    elseif pFlag = 'D' Then
		select LA.LeaveTypeID, LT.LeaveTypeText,
        SUM(IF(LA.IsHalfDay = 'Y',0.5,(DATEDIFF(LA.EndDate,LA.StartDate)+1))) DebitLeave 
        from leaveapplied LA 
        LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID 
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
        Where LA.UserID = pUserID AND LS.LeaveMasterStatusID IN (1,2)  AND LA.IsCountable='Y'
        group by LA.LeaveTypeID order by LA.LeaveTypeID;
	elseif pFlag = 'D2' Then
		select LA.LeaveTypeID, LT.LeaveTypeText,
        SUM(IF(LA.IsHalfDay = 'Y',0.5,(DATEDIFF(LA.EndDate,LA.StartDate)+1))) DebitLeave 
        from leaveapplied LA 
        LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID 
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
        Where LA.UserID = pUserID AND LS.LeaveMasterStatusID IN (2)  AND LA.IsCountable='Y' 
        group by LA.LeaveTypeID order by LA.LeaveTypeID;
     elseif pFlag = 'D2-RPT' Then
		select LA.LeaveTypeID, LT.LeaveTypeText,
        SUM(IF(LA.IsHalfDay = 'Y',0.5,(DATEDIFF(LA.EndDate,LA.StartDate)+1))) DebitLeave 
        from leaveapplied LA 
        LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID 
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
        Where LA.UserID = pUserID AND LS.LeaveMasterStatusID IN (2)
        AND (LA.EndDate <= pEffcDate OR LA.StartDate <= pEffcDate) AND LA.IsCountable='Y'
        group by LA.LeaveTypeID order by LA.LeaveTypeID;      
     elseif pFlag = 'DOH' Then
		CREATE TEMPORARY TABLE DebitLeaveHolidayTmpTable (
			TmpID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
			StartDate  date NOT NULL,
			EndDate  date NOT NULL,
            LeaveTypeID int NOT NULL,
			LeavesInHoliday float NULL
		);
		INSERT INTO DebitLeaveHolidayTmpTable (StartDate,EndDate,LeaveTypeID) 
        select LA.StartDate,LA.EndDate,LA.LeaveTypeID
		from leaveapplied LA 
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
		Where LA.UserID = pUserID AND LS.LeaveMasterStatusID IN (1,2) AND LA.IsCountable='Y' order by LA.LeaveTypeID;
        
        select count(TmpID) INTO NoOFTmpRecords from DebitLeaveHolidayTmpTable;
		
        set i = 1;
		WHILE i <= NoOFTmpRecords DO
			set UserDebitLeaveHld = 0.0;
			select StartDate,EndDate INTO tmpStartDate,tmpEndDate from DebitLeaveHolidayTmpTable
			where TmpID = i;
			call nex_GetLeaveInHolidayOrWeekend(pUserID,tmpStartDate,tmpEndDate,@DaysInHolidayOrWeekend);
			select @DaysInHolidayOrWeekend into UserDebitLeaveHld;
			update DebitLeaveHolidayTmpTable set LeavesInHoliday = UserDebitLEaveHld where TmpID = i;
			SET i = i + 1;
		END WHILE;
		select LeaveTypeID,sum(LeavesInHoliday) DebitHolidayLeave 
        from DebitLeaveHolidayTmpTable group by LeaveTypeID order by LeaveTypeID;
		drop TABLE DebitLeaveHolidayTmpTable;
     elseif pFlag = 'DOH-RPT' Then
		CREATE TEMPORARY TABLE DebitLeaveHolidayTmpTable (
			TmpID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
			StartDate  date NOT NULL,
			EndDate  date NOT NULL,
            LeaveTypeID int NOT NULL,
			LeavesInHoliday float NULL
		);
		INSERT INTO DebitLeaveHolidayTmpTable (StartDate,EndDate,LeaveTypeID) 
        select LA.StartDate,LA.EndDate,LA.LeaveTypeID
		from leaveapplied LA 
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID 
		Where LA.UserID = pUserID AND LS.LeaveMasterStatusID IN (1,2)
        AND (LA.EndDate <= pEffcDate OR LA.StartDate <= pEffcDate) 
        AND LA.IsCountable='Y'
        order by LA.LeaveTypeID;
        
        select count(TmpID) INTO NoOFTmpRecords from DebitLeaveHolidayTmpTable;
		
        set i = 1;
		WHILE i <= NoOFTmpRecords DO
			set UserDebitLeaveHld = 0.0;
			select StartDate,EndDate INTO tmpStartDate,tmpEndDate from DebitLeaveHolidayTmpTable
			where TmpID = i;
			call nex_GetLeaveInHolidayOrWeekend(pUserID,tmpStartDate,tmpEndDate,@DaysInHolidayOrWeekend);
			select @DaysInHolidayOrWeekend into UserDebitLeaveHld;
			update DebitLeaveHolidayTmpTable set LeavesInHoliday = UserDebitLEaveHld where TmpID = i;
			SET i = i + 1;
		END WHILE;
		select LeaveTypeID,sum(LeavesInHoliday) DebitHolidayLeave 
        from DebitLeaveHolidayTmpTable group by LeaveTypeID order by LeaveTypeID;
		drop TABLE DebitLeaveHolidayTmpTable;   
     elseif pFlag = 'ISL' Then
		select LA.LeavAppID,LA.StartDate,LA.EndDate,LA.IsHalfDay from leaveapplied LA
        LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
        where LS.LeaveMasterStatusID = 2 and LA.UserID = pUserID 
        and pEffcDate between LA.StartDate and LA.EndDate
        AND LA.IsCountable='Y';
     else
        /*
        Select count(LA.LeavAppID) INTO CheckExists
		from leaveapplied LA
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
		where LA.UserID = pUserID AND LS.LeaveMasterStatusID = 2 AND LA.StartDate >= pEffcDate AND LA.IsCountable='Y';
        
        If (CheckExists > 0) THEN 
			Select LA.LeavAppID,LA.UserID,U.DeptID,LA.LeaveTypeID,LA.LeaveStatusID,LA.StartDate,LA.EndDate,
			IF(LA.IsHalfDay = 'Y','0.5', (DATEDIFF(LA.EndDate,LA.StartDate)+1)) as NoOfDays,
			LT.LeaveTypeText,LS.LeaveStatusText 
			from leaveapplied LA
			LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
			LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
			LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
			where LA.UserID = pUserID AND LS.LeaveMasterStatusID = 2 AND LA.StartDate >= pEffcDate
            AND LA.IsCountable='Y'
			order by LA.StartDate asc LIMIT 0,1;
        Else
			Select LA.LeavAppID,LA.UserID,U.DeptID,LA.LeaveTypeID,LA.LeaveStatusID,LA.StartDate,LA.EndDate,
            IF(LA.IsHalfDay = 'Y','0.5', (DATEDIFF(LA.EndDate,LA.StartDate)+1)) as NoOfDays,
			LT.LeaveTypeText,LS.LeaveStatusText 
			from leaveapplied LA
			LEFT JOIN userpersonalinfo U ON LA.UserID = U.UserID
			LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
			LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
			where LA.UserID = pUserID AND LS.LeaveMasterStatusID = 2 AND LA.StartDate <= pEffcDate
			AND LA.IsCountable='Y'
			order by LA.StartDate desc LIMIT 0,1;
        End if;
        */
        /*
        Select 'Leave' as `Type`,LA.StartDate,LA.EndDate,IF(LA.IsHalfDay = 'Y','0.5', (DATEDIFF(LA.EndDate,LA.StartDate)+1)) as NoOfDays,LT.LeaveTypeText
		from leaveapplied LA
		LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
		where LA.UserID = pUserID AND LS.LeaveMasterStatusID = 2 AND LA.StartDate >= pEffcDate
        AND LA.IsCountable='Y'
		order by LA.StartDate asc LIMIT 0,1;
        */
		(Select 'Leave' as `Type`,LA.LeavAppID,LA.UserID,LA.LeaveTypeID,LA.LeaveStatusID,LA.StartDate,LA.EndDate,IF(LA.IsHalfDay = 'Y','0.5', (DATEDIFF(LA.EndDate,LA.StartDate)+1)) as NoOfDays,LT.LeaveTypeText,LS.LeaveStatusText
		from leaveapplied LA
		LEFT JOIN leavetype LT ON LA.LeaveTypeID = LT.LeaveTypeID
		LEFT JOIN leavestatus LS ON LA.LeaveStatusID = LS.LeaveStatusID
		where LA.UserID = pUserID AND LS.LeaveMasterStatusID = 2 AND LA.StartDate >= pEffcDate
        AND LA.IsCountable='Y'
		order by LA.StartDate asc LIMIT 0,1)
        UNION 
        (
		select 'Holiday' as `Type`,H.HolidayID as LeavAppID,0 as UserID,0 as LeaveTypeID,0 as LeaveStatusID,
        H.StartDate,H.EndDate,(DATEDIFF(H.EndDate,H.StartDate)+1) as NoOfDays,H.HolidayName,'' as LeaveStatusText
		from holiday H  
		LEFT JOIN calendarholiday CH ON CH.HolidayID = H.HolidayID and H.StartDate >= pEffcDate
		where CH.CalendarID = (select UC.CalendarID from usercalendar UC where UC.EffectedFrom <= pEffcDate and UC.UserID = pUserID order by UC.EffectedFrom desc limit 1)
		order by H.StartDate asc LIMIT 0,1
        ) 
        order by StartDate asc limit 0,1;
        
    End If;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_Show_OdListofdept` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_Show_OdListofdept`(
        in pUserID int,
        in pDeptID text,
        in pStartDate date,
        in pEndDate date,
        in pFlag char(3)
     )
BEGIN
	DECLARE DeptMngUserID INT;
    DECLARE UserRole varchar(10);
	DECLARE SelDeptID text;
    SELECT group_concat(DM.DeptManagerID) INTO DeptMngUserID from deptmanager DM where DM.DeptID IN (pDeptID);
    
    Select IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur INNER JOIN userworkinfo uwi on ur.roleID = uwi.roleID  
	where uwi.UserID = U.UserID), 'EMPLOYEE') into UserRole from userpersonalinfo U where U.UserID = pUserID;
    
    /*Get all hierarchy sub department ids*/
    if UserRole = 'ADMIN' then
		CALL nex_GetDeptTree(pDeptID,@AllHrcyDept);
		SELECT @AllHrcyDept INTO SelDeptID;
    else
		SELECT pDeptID INTO SelDeptID;
    end if;    
    
	CREATE TEMPORARY TABLE temp_AllDept
	SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
	  FROM (select SelDeptID as Dept_Id) t CROSS JOIN
	  (
	   SELECT a.N + b.N * 10 + 1 n
		 FROM
		(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
	   ,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
		ORDER BY n
	   ) n
	WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));
    
    
	if pFlag = 'ALL' then 
		SELECT U.UserID,U.FName,U.LName,U.EmployeeID,U.UserPicture,D.DepartmentName,
		OD.OdID,OD.UserID,OD.OdDate,OdStartTime,OdEndTime,
        (TIMESTAMPDIFF(Second,OD.OdStartTime, OD.OdEndTime)) TotalHours,
        OD.OdReason,OD.OdLocation,OD.AppliedDate,OD.RequestStatus
		FROM odapplied OD
		LEFT JOIN userpersonalinfo U ON OD.UserID = U.UserID
		LEFT JOIN department D ON U.DeptID = D.DeptID
		where OD.ODDate BETWEEN pStartDate AND pEndDate
        AND U.DeptID IN (select * from temp_AllDept)
		AND OD.UserID NOT IN (DeptMngUserID)
		AND OD.RequestStatus!='Applied'
		ORDER BY OD.OdDate DESC;
    elseif pFlag = 'PND' then 
		SELECT U.UserID,U.FName,U.LName,U.EmployeeID,U.UserPicture,D.DepartmentName,
		OD.OdID,OD.UserID,OD.OdDate,OdStartTime,OdEndTime,
		(TIMESTAMPDIFF(Second,OD.OdStartTime, OD.OdEndTime)) TotalHours,
        OD.OdReason,OD.OdLocation,
        OD.AppliedDate,OD.RequestStatus
		FROM odapplied OD
		LEFT JOIN userpersonalinfo U ON OD.UserID = U.UserID
		LEFT JOIN department D ON U.DeptID = D.DeptID
        where U.DeptID IN (select * from temp_AllDept)
		AND OD.UserID NOT IN (DeptMngUserID)
		AND OD.RequestStatus='Applied'
		ORDER BY OD.OdDate DESC;    
	else
		SELECT U.UserID,U.FName,U.LName,U.EmployeeID,U.UserPicture,D.DepartmentName,
		OD.OdID,OD.UserID,OD.OdDate,OdStartTime,OdEndTime,
        (TIMESTAMPDIFF(Second,OD.OdStartTime, OD.OdEndTime)) TotalHours,
        OD.OdReason,OD.OdLocation,OD.AppliedDate
		FROM odapplied OD
		LEFT JOIN userpersonalinfo U ON OD.UserID = U.UserID
		LEFT JOIN department D ON U.DeptID = D.DeptID
		where OD.OdDate > pStartDate
		AND U.DeptID IN (select * from temp_AllDept)
		AND OD.UserID NOT IN (DeptMngUserID)
		ORDER BY OD.OdDate DESC;
	end if;
    DROP TEMPORARY TABLE temp_AllDept;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_Show_OrgDetails` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_Show_OrgDetails`(
        In	pOrgID	int(11),
        In  pUserID int(11),
        in	pTypeFlg varchar(255)
     )
BEGIN

	Declare UserRole varchar(10);
    Declare UserDept text;
	Select IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur INNER JOIN userworkinfo uwi on ur.roleID = uwi.roleID  
	where uwi.UserID = U.UserID), 'EMPLOYEE') into UserRole from userpersonalinfo U where U.UserID = pUserID;
    
    CASE pTypeFlg
        WHEN 'U' THEN
            if UserRole = 'SUPERVISOR' then
				/*Get all hierarchy sub department ids*/
                Select GROUP_CONCAT(DeptID) into UserDept from deptmanager where DeptManagerID = pUserID;
				CALL nex_GetDeptTree(UserDept,@AllHrcyDept);
             
				CREATE TEMPORARY TABLE temp_AllDept
				SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
				FROM (select @AllHrcyDept as Dept_Id) t CROSS JOIN
				(
				SELECT a.N + b.N * 10 + 1 n
				FROM
				(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
				,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
				ORDER BY n
				) n
				WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));
                
                
                select UP.*,D.DepartmentName,IFNULL(UR.RoleName,'EMPLOYEE') Role
				from userpersonalinfo UP 
				LEFT JOIN department D ON D.DeptID = UP.DeptID
				LEFT JOIN userworkinfo UWI ON UP.UserID = UWI.USERID
				LEFT JOIN userrole UR ON UR.RoleID = UWI.RoleID
				where UP.OrgID = pOrgID and UP.DeptID IN (select * from temp_AllDept) and UP.UserID != pUserID
                ORDER BY concat(UP.FName,' ',LName);
            elseif UserRole = 'ADMIN' then
				select UP.*,D.DepartmentName,IFNULL(UR.RoleName,'EMPLOYEE') Role
				from userpersonalinfo UP 
				LEFT JOIN department D ON D.DeptID = UP.DeptID
				LEFT JOIN userworkinfo UWI ON UP.UserID = UWI.USERID
				LEFT JOIN userrole UR ON UR.RoleID = UWI.RoleID
				where UP.OrgID = pOrgID ORDER BY concat(UP.FName,' ',LName);
            else
				select UP.*,D.DepartmentName,IFNULL(UR.RoleName,'EMPLOYEE') Role
				from userpersonalinfo UP 
				LEFT JOIN department D ON D.DeptID = UP.DeptID
				LEFT JOIN userworkinfo UWI ON UP.UserID = UWI.USERID
				LEFT JOIN userrole UR ON UR.RoleID = UWI.RoleID
				where UP.OrgID = pOrgID and UP.UserID = pUserID ORDER BY concat(UP.FName,' ',LName);
            end if;
            
            /*select UP.* ,
            IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') 
            from userrole ur inner join userworkinfo uwi on ur.roleID = uwi.roleID where uwi.UserID = UP.UserID), 'EMPLOYEE') as Role,
            D.DepartmentName
            from userpersonalinfo UP LEFT JOIN department D ON D.DeptID = UP.DeptID
            where UP.OrgID = pOrgID ORDER BY UP.UserID DESC;*/
		WHEN 'UC' THEN
            select count(*) as NoOfUsers from userpersonalinfo where OrgID = pOrgID;    
        WHEN 'D' THEN
			if UserRole = 'SUPERVISOR' then
				/*Get all hierarchy sub department ids*/
				Select GROUP_CONCAT(DeptID) into UserDept from deptmanager where DeptManagerID = pUserID;
				CALL nex_GetDeptTree(UserDept,@AllHrcyDept);

				CREATE TEMPORARY TABLE temp_AllDept
				SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
				FROM (select @AllHrcyDept as Dept_Id) t CROSS JOIN
				(
				SELECT a.N + b.N * 10 + 1 n
				FROM
				(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
				,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
				ORDER BY n
				) n
				WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));
                
                select D.DeptID,D.DeptPrtID,D.DepartmentName,D.DepartmentDesc,D.OrgID,
				DM.DeptManagerID,U.Email,concat(U.FName,' ',U.LName) as UName from department D 
				LEFT JOIN deptmanager DM ON D.DeptID = DM.DeptID
				LEFT JOIN userpersonalinfo U ON U.UserID = DM.DeptManagerID
				where D.OrgID = pOrgID and D.DeptID IN (select * from temp_AllDept) order by D.DepartmentName;
            elseif UserRole = 'ADMIN' then
				select D.DeptID,D.DeptPrtID,D.DepartmentName,D.DepartmentDesc,D.OrgID,
				DM.DeptManagerID,U.Email,concat(U.FName,' ',U.LName) as UName from department D 
				LEFT JOIN deptmanager DM ON D.DeptID = DM.DeptID
				LEFT JOIN userpersonalinfo U ON U.UserID = DM.DeptManagerID
				where D.OrgID = pOrgID order by D.DepartmentName;
            else
				select D.DeptID,D.DeptPrtID,D.DepartmentName,D.DepartmentDesc,D.OrgID,
				DM.DeptManagerID,U.Email,concat(U.FName,' ',U.LName) as UName from department D 
				LEFT JOIN deptmanager DM ON D.DeptID = DM.DeptID
				LEFT JOIN userpersonalinfo U ON U.UserID = DM.DeptManagerID
				where D.OrgID = pOrgID and U.UserID = pUserID order by D.DepartmentName;
			end if;
				
		
           
         WHEN 'H' THEN
            select * from holiday where OrgID = pOrgID;
		 WHEN 'L' THEN
			if UserRole = 'SUPERVISOR' then
				/*Get all hierarchy sub department ids*/
				Select GROUP_CONCAT(DeptID) into UserDept from deptmanager where DeptManagerID = pUserID;
				CALL nex_GetDeptTree(UserDept,@AllHrcyDept);

				CREATE TEMPORARY TABLE temp_AllDept
				SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
				FROM (select @AllHrcyDept as Dept_Id) t CROSS JOIN
				(
				SELECT a.N + b.N * 10 + 1 n
				FROM
				(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
				,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
				ORDER BY n
				) n
				WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));
                
                select U.SiteLocation from userpersonalinfo U 
				where  U.DeptID IN (select * from temp_AllDept) group by U.SiteLocation order by U.SiteLocation;
            elseif UserRole = 'ADMIN' then
				select U.SiteLocation from  userpersonalinfo U 
				where U.OrgID = pOrgID group by U.SiteLocation order by U.SiteLocation;
            else
				select U.SiteLocation  from  userpersonalinfo U 
				where U.OrgID = pOrgID and U.UserID = pUserID group by U.SiteLocation order by U.SiteLocation;
			end if;
         WHEN 'W' THEN
			 select * from weekends where OrgID = pOrgID;
		 ELSE
            select * from userpersonalinfo where OrgID = pOrgID;
    END CASE;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UpdateAttendance` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UpdateAttendance`(

        IN  pUserID                     VARCHAR(15)  



        

     )
BEGIN



	SELECT @vCheckIntime := min(CIN.CheckIntime) 

    FROM nexat.checkindetails CIN

    Where CIN.UserID=pUserID

    and Date(CIN.CheckIntime)= Date(Now());

        

	SELECT @vCheckInLocation := CIN.Location

    FROM nexat.checkindetails CIN

    Where CIN.UserID=pUserID

    and CIN.CheckIntime= @vCheckIntime;

        

    

    

    

	SELECT @vCheckOuttime := max(COUT.CheckOuttime)  

    FROM nexat.checkoutdetails COUT

    Where COUT.UserID=pUserID

    and Date(COUT.CheckOuttime)= Date(Now());

    

	SELECT @vCheckOutLocation := COUT.Location

    FROM nexat.checkoutdetails COUT

    Where COUT.UserID=pUserID

    and COUT.CheckOuttime= @vCheckOuttime;

    

    

    

	Select @vLogInTime := min(LIN.LogInTime) LIN 

    from logindetails LIN

    Where LIN.UserID=pUserID

    and Date(LIN.LogInTime)= Date(Now());

    

	SELECT @vLogInLocation := LIN.Location

    from logindetails LIN

    Where LIN.UserID=pUserID

    and LIN.LogInTime= @vLogInTime;

 

    

    

	Select @vLogOuttime := max(LOUT.LogOuttime) 

    from logoutdetails LOUT

	Where LOUT.UserID=pUserID

    and Date(LOUT.LogOuttime)= Date(Now())

    group by LOUT.UserID;

    

 	SELECT @vLogOutLocation= LOUT.Location

    from logoutdetails LOUT

	Where LOUT.UserID=pUserID

    and LOUT.LogOuttime= @vLogOuttime;

    

    Select @vCtr := ISNULL(NULLIF(Count(AttendanceID),0)) from nexat.attendance 

    Where UserID= pUserID and Date(LogTime)=Date(Now());

    

    

    If @vCtr = 1 Then

		Select @vMaxID := ISNULL(NULLIF(Max(AttendanceID),0)) + 1 from nexat.attendance;

    

			INSERT INTO attendance

				(

					AttendanceID	,

					UserID			,

					LogInTime		,

					CheckInTime		,

					CheckOutTime	,

					LogOutTime		,

					LogInLocation	,

					CheckInLocation	,

					CheckOutLocation,

					LogOutLocation	,

					LogTime			

				)

				VALUES

				(

					@vMaxID			,

					pUserID			,

					@vLogInTime		,

					@vCheckIntime	,

					@vCheckOuttime	,

					@vLogOuttime		,

					@vLogInLocation	,

					@vCheckInLocation,

					@vCheckOutLocation,

					@vLogOutLocation	,

					Now()

				);

    

    Else

		Update attendance Set 

        CheckInTime= @vCheckIntime, 

        CheckOutTime= @vCheckOuttime,

		LogInTime= @vLogInTime, 

        LogOutTime= @vLogOuttime,

        LogInLocation= @vLogInLocation,

        LogOutLocation= @vLogOutLocation,

        CheckInLocation= @vCheckInLocation,

        CheckOutLocation= @vCheckOutLocation

        Where UserID= pUserID

        and Date(LogTime)=Date(Now());

	End IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UpdateAttendanceAndCheckIn` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UpdateAttendanceAndCheckIn`(

        IN  pUserID  	VARCHAR(15),

        IN	pOrigID		int(11),

        in	pLocation	varchar(145),

        in	pUserHost	varchar(155),

		in	pSessionAuthID	varchar(250)

        

     )
BEGIN

	start transaction;

			INSERT INTO checkindetails

				(

					UserID,

					OrgID,

					Location,

					CheckIntime,

					UserHost,

                    SessionAuthID

				)

				VALUES

				(

					pUserID			,

					pOrigID			,

					pLocation		,

					Now()			,

					pUserHost		,

					pSessionAuthID	

					

				);



		Select @vCtr := ISNULL(NULLIF(Count(AttendanceID),0)) from nexat.attendance

		Where UserID= pUserID and Date(LogTime)=Date(Now());

    

			If @vCtr = 1 Then

					INSERT INTO attendance

						(

							UserID			,

							CheckInTime		,

							CheckInLocation	,

							LogTime			

						)

						VALUES

						(



							pUserID			,

							Now()			,

							pLocation		,

							Now()			

						);

			

			Else

            

				SELECT @vCheckIntime := min(CIN.CheckIntime) 

				FROM nexat.checkindetails CIN

				Where CIN.UserID=pUserID

				and Date(CIN.CheckIntime)= Date(Now());

					

				SELECT @vCheckInLocation := CIN.Location

				FROM nexat.checkindetails CIN

				Where CIN.UserID=pUserID

				and CIN.CheckIntime= @vCheckIntime;

    

				Update attendance Set 

				CheckInTime= @vCheckIntime, 

				CheckInLocation= @vCheckInLocation

				Where UserID= pUserID

				and Date(LogTime)=Date(Now());

			

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UpdateAttendanceAndCheckInDetailsMore` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UpdateAttendanceAndCheckInDetailsMore`(
        IN  pUserID  	VARCHAR(15),
        IN	pOrigID		int(11),
        in	pLocation	varchar(145),
        in	pUserHost	varchar(155),
		in	pSessionAuthID	varchar(250),
        in	pTypeFlg	Char(1),
        in	pQRCode		varchar(1000),
        in	pOTPCode		varchar(20),
        in  pCheckINTime varchar(20),
        in  pLocalCheckINTime varchar(20),
        in	pLocationLatLong varchar(255),
        in  pUserImage text,
        in  pOutdoorAttn varchar(1)
     )
BEGIN
	
    DECLARE vCtr1, vMoreCheckInID,vCtr2,vOTPID,vCtr int;
    DECLARE vCheckIntime datetime;
    DECLARE vCheckInLocation,attendanceLogTime,attendanceLogTimeType varchar(255);
    DECLARE FirstCheckIn char(1);
    
    /*SKIP the  Cannot add or update a child row: a foreign key constraint fails ERROR*/
    DECLARE CONTINUE HANDLER FOR 1452  
    SELECT 'Cannot add foreign key constraint';
    
    
    SET FirstCheckIn = '';
    
    
	start transaction;

						INSERT INTO checkindetailsmore
				(
					UserID,
					OrgID,
                    UserImage,
					Location,
                    LocationLatLong,
					CheckIntime,
					UserHost,
                    SessionAuthID,
                    TypeFlg,
                    QRCode,
                    OutDoorAttn,
                    IsActive
				)
				VALUES
				(
					pUserID			,
					pOrigID			,
                    pUserImage      ,
					pLocation		,
                    pLocationLatLong,
					if(pCheckINTime='',Now(),CAST(pCheckINTime as DATETIME)),
					pUserHost		,
					pSessionAuthID	,
                    pTypeFlg		,
					pQRCode         ,
                    pOutdoorAttn    ,
                    'Y'
				);

		Select @vCtr1 := Count(MoreCheckInID),@vMoreCheckInID := Max(MoreCheckInID)
        INTO vCtr1,vMoreCheckInID
        from checkindetailsmore 
		Where UserID= pUserID and Date(CheckIntime)=Date(CAST(pCheckINTime as DATETIME)) and TypeFlg='O';
        
	if (pTypeFlg = 'O') then
        
					Insert into checkinotpdetails
						(
							OTPCode,
							UserID,
							OTPTime,
							MoreCheckInID,
                            OTPverified
						)
						Values
						(
							pOTPCode,
							pUserID,
							CAST(pCheckINTime as DATETIME),
							vMoreCheckInID,
                            'N'
						);
                        
		
	ElseIf (pTypeFlg = 'V') Then
		
			/*
            Select @vCtr2 := ISNULL(NULLIF(Count(OTPID),0)),@vOTPID := OTPID
            INTO vCtr2,vOTPID
			from checkinotpdetails O
			Inner Join checkindetailsmore M on O.MoreCheckInID= M.MoreCheckInID
			Where M.UserID= pUserID and Date(O.OTPTime)=Date(CAST(pCheckINTime as DATETIME)) 
			and O.OTPCode=pOTPCode and O.OTPverified='N';
            */
		
			INSERT INTO checkindetails
				(
					UserID,
					OrgID,
					Location,
					CheckIntime,
					UserHost,
					SessionAuthID
				)
				VALUES
				(
					pUserID				,
					pOrigID				,
					pLocation			,
					CAST(pCheckINTime as DATETIME)				,
					pUserHost			,
					pSessionAuthID
				);
		  
                
                /*Decision taking - check attendance Log time with GMT time or Local time*/
                If(Date(CAST(pCheckINTime as DATETIME)) = Date(CAST(pLocalCheckINTime as DATETIME))) then
					Select @vCtr := ISNULL(NULLIF(Count(AttendanceID),0))
					INTO vCtr
					from attendance
					Where UserID= pUserID and Date(LogTime)=Date(CAST(pCheckINTime as DATETIME));
                    
                    set attendanceLogTime = pCheckINTime;
                    set attendanceLogTimeType = 'GMT';
                Else
					Select @vCtr := ISNULL(NULLIF(Count(AttendanceID),0))
					INTO vCtr
					from attendance
					Where UserID= pUserID and Date(LogTime)=Date(CAST(pLocalCheckINTime as DATETIME));
                    
					set attendanceLogTime = pLocalCheckINTime;
					set attendanceLogTimeType = 'LOCAL';
                End If;
				
                /*
				SELECT @vCheckIntime := min(CIN.CheckIntime) 
                INTO vCheckIntime
				FROM checkindetailsmore CIN
				Where CIN.UserID=pUserID and TypeFlg = 'O'
				and Date(CIN.CheckIntime)= Date(CAST(pCheckINTime as DATETIME));
					
				SELECT @vCheckInLocation := CIN.Location
                INTO vCheckInLocation
				FROM checkindetailsmore CIN
				Where CIN.UserID=pUserID and TypeFlg = 'O'
				and DATe(CIN.CheckIntime)= Date(CAST(pCheckINTime as DATETIME))
				Order by CIN.CheckIntime
				LIMIT 1;
                */
                set vCheckIntime = CAST(pCheckINTime as DATETIME);
                set vCheckInLocation = pLocation;
				
				If vCtr = 1 Then
					INSERT INTO attendance
						(
							UserID			,
							CheckInTime		,
							CheckInLocation	,
							LogTime,
                            LogTimeType
						)
						VALUES
						(

							pUserID			,
							vCheckIntime			,
							vCheckInLocation		,
							CAST(attendanceLogTime as DATETIME),
                            attendanceLogTimeType
						);
                        
                        SET FirstCheckIn = 'Y';
                        
				/*else
						Update attendance Set 
						CheckInTime= vCheckIntime, 
						CheckInLocation= vCheckInLocation
						Where UserID= pUserID
						and Date(LogTime)=Date(CAST(attendanceLogTime as DATETIME));
                        */
				End If;
						
					/*Update checkinotpdetails set OTPverified='Y' Where OTPID= vOTPID;*/
	Else
				
			SELECT @vCheckIntime := min(CIN.CheckIntime) 
            INTO vCheckIntime
			FROM checkindetailsmore CIN
			Where CIN.UserID=pUserID
			and Date(CIN.CheckIntime)= Date(CAST(pCheckINTime as DATETIME));
				
			SELECT @vCheckInLocation := CIN.Location 
            INTO vCheckInLocation
			FROM checkindetailsmore CIN
			Where CIN.UserID=pUserID
			and CIN.CheckIntime= @vCheckIntime;
			
			update checkindetails set
			Location= vCheckInLocation,
			CheckIntime= vCheckIntime
			Where UserID= pUserID
			and Date(CheckIntime)=Date(CAST(pCheckINTime as DATETIME));
	End if;
			
	commit;
			Select A.AttendanceID,pTypeFlg,FirstCheckIn from attendance A where A.UserID = pUserID order by A.AttendanceID desc limit 0,1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UpdateAttendanceAndCheckOut` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UpdateAttendanceAndCheckOut`(

        IN  pUserID  	VARCHAR(15),

        IN	pOrigID		int(11),

        in	pLocation	varchar(145),

        in	pUserHost	varchar(155),

		in	pSessionAuthID	varchar(250)

        

     )
BEGIN

	start transaction;

			INSERT INTO checkoutdetails

				(

					UserID,

					OrgID,

					Location,

					CheckOuttime,

					UserHost,

                    SessionAuthID

				)

				VALUES

				(

					pUserID			,

					pOrigID			,

					pLocation		,

					Now()			,

					pUserHost		,

					pSessionAuthID	

					

				);



		Select @vCtr := ISNULL(NULLIF(Count(AttendanceID),0)) from nexat.attendance

		Where UserID= pUserID and Date(LogTime)=Date(Now());

    

			If @vCtr = 1 Then

					INSERT INTO attendance

						(

							UserID			,

							CheckOutTime		,

							CheckOutLocation	,

							LogTime			

						)

						VALUES

						(



							pUserID			,

							Now()			,

							pLocation		,

							Now()			

						);

			

			Else

            

				SELECT @vCheckOuttime := max(COUT.CheckOuttime)  

				FROM nexat.checkoutdetails COUT

				Where COUT.UserID=pUserID

				and Date(COUT.CheckOuttime)= Date(Now());

				

				SELECT @vCheckOutLocation := COUT.Location

				FROM nexat.checkoutdetails COUT

				Where COUT.UserID=pUserID

				and COUT.CheckOuttime= @vCheckOuttime;

    

				Update attendance Set 

				CheckOutTime= @vCheckOuttime, 

				CheckOutLocation= @vCheckOutLocation

				Where UserID= pUserID

				and Date(LogTime)=Date(Now());

			

            End If;

	commit;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UpdateAttendanceAndCheckOutMore` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UpdateAttendanceAndCheckOutMore`(
        IN  pUserID  	VARCHAR(15),
        IN	pOrigID		int(11),
        in	pLocation	varchar(145),
        in	pUserHost	varchar(155),
		in	pSessionAuthID	varchar(250),
        in	pTypeFlg		Char(1),
        in	pQRCode			varchar(500),
        in	pPurpose		varchar(50),
        in  pCheckOutTime varchar(20),
		in	pLocationLatLong varchar(255),
        in  pUserImage text,
        in  pOutdoorAttn varchar(1)
     )
BEGIN
	declare LastRecentCheckIn INT;
    DECLARE CONTINUE HANDLER FOR 1452  
    SELECT 'Cannot add foreign key constraint';
    start transaction;
						INSERT INTO checkoutdetailsmore
				(
					UserID,
					OrgID,
                    UserImage,
					Location,
                    LocationLatLong,
					Checkouttime,
					UserHost,
                    SessionAuthID,
                    TypeFlg,
                    QRCode,
                    Purpose,
                    OutDoorAttn,
                    IsActive
				)
				VALUES
				(
					pUserID			,
					pOrigID			,
                    pUserImage      ,
					pLocation		,
                    pLocationLatLong,
                    if(pCheckOutTime='',Now(),CAST(pCheckOutTime as DATETIME)),
					pUserHost		,
					pSessionAuthID	,
                    pTypeFlg		,
					pQRCode         ,
                    pPurpose        ,
                    pOutdoorAttn    ,
                    'Y'
				);   
        /*Select @vCtr1 := Count(MoreCheckoutID),
		@vCheckouttime := Max(Checkouttime) from checkoutdetailsmore 
		Where UserID= pUserID and Date(Checkouttime)=Date(if(pCheckOutTime='',Now(),CAST(pCheckOutTime as DATETIME)));*/
        if (pTypeFlg = 'F') then
                select IFNULL(A.AttendanceID,0) into LastRecentCheckIn from attendance A 
                where A.UserID= pUserID 
                and A.CheckInTime >= DATE_SUB(CAST(pCheckOutTime as DATETIME), INTERVAL 1 DAY) and A.CheckInTime <= CAST(pCheckOutTime as DATETIME)
                order by A.CheckInTime desc limit 0,1;
                if LastRecentCheckIn > 0 then 
					Update attendance Set 
					CheckOutTime= pCheckOutTime, 
					CheckOutLocation= pLocation,
					AutoCheckOut= NULL
					Where UserID= pUserID
					and AttendanceID = LastRecentCheckIn;
                end if; 
		End if;
        select 1;
	commit;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UpdateAttendanceAndLogkIn` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UpdateAttendanceAndLogkIn`(

        IN  pUserID  	VARCHAR(15),

        IN	pOrigID		int(11),

        in	pLocation	varchar(145),

        in	pUserHost	varchar(155)

     )
BEGIN

	start transaction;

			INSERT INTO logindetails

				(

					UserID,

					OrgID,

					Location,

					LogInTime,

					UserHost

				)

				VALUES

				(

					pUserID			,

					pOrigID			,

					pLocation		,

					Now()			,

					pUserHost		

				);



		Select @vCtr := ISNULL(NULLIF(Count(AttendanceID),0)) from nexat.attendance

		Where UserID= pUserID and Date(LogTime)=Date(Now());

    

			If @vCtr = 1 Then

					INSERT INTO attendance

						(

							UserID			,

							LogInTime		,

							LogInLocation	,

							LogTime			

						)

						VALUES

						(



							pUserID			,

							Now()			,

							pLocation		,

							Now()			

						);

			

			Else

            

				Select @vLogInTime := min(LIN.LogInTime) LIN 

				from logindetails LIN

				Where LIN.UserID=pUserID

				and Date(LIN.LogInTime)= Date(Now());

				

				SELECT @vLogInLocation := LIN.Location

				from logindetails LIN

				Where LIN.UserID=pUserID

				and LIN.LogInTime= @vLogInTime;

				

				Update attendance Set 

				LogInTime= @vLogInTime, 

				LogInLocation= @vLogInLocation

				Where UserID= pUserID

				and Date(LogTime)=Date(Now());

			

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UpdateAttendanceAndLogkOut` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UpdateAttendanceAndLogkOut`(

        IN  pUserID  	VARCHAR(15),

        IN	pOrigID		int(11),

        in	pLocation	varchar(145),

        in	pUserHost	varchar(155)

     )
BEGIN

	start transaction;

			INSERT INTO logoutdetails

				(

					UserID,

					OrgID,

					Location,

					LogOuttime,

					UserHost

				)

				VALUES

				(

					pUserID			,

					pOrigID			,

					pLocation		,

					Now()			,

					pUserHost		

				);



		Select @vCtr := ISNULL(NULLIF(Count(AttendanceID),0)) from nexat.attendance

		Where UserID= pUserID and Date(LogTime)=Date(Now());

    

			If @vCtr = 1 Then

					INSERT INTO attendance

						(

							UserID			,

							LogOutTime		,

							LogOutLocation	,

							LogTime			

						)

						VALUES

						(



							pUserID			,

							Now()			,

							pLocation		,

							Now()			

						);

			

			Else

            

				Select @vLogOuttime := max(LOUT.LogOuttime) 

				from logoutdetails LOUT

				Where LOUT.UserID=pUserID

				and Date(LOUT.LogOuttime)= Date(Now())

				group by LOUT.UserID;

				

				SELECT @vLogOutLocation= LOUT.Location

				from logoutdetails LOUT

				Where LOUT.UserID=pUserID

				and LOUT.LogOuttime= @vLogOuttime;

				

				Update attendance Set 

				LogOutTime= @vLogOuttime, 

				LogOutLocation= @vLogOutLocation

				Where UserID= pUserID

				and Date(LogTime)=Date(Now());

			

            End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UserAllOfOrg` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UserAllOfOrg`(
in pOrgID int,
in pDeptID int
)
BEGIN
	if pDeptID = 0 then
    Select UP.UserID,UP.EmployeeID,UP.EmploymentType,CONCAT(UP.FName,' ',UP.LName)as FullName,UP.SiteLocation,UP.Deactivated,UP.DeactivatedOn,
    IFNULL(UWI.Designation, '') as Designation
	from userpersonalinfo UP LEFT OUTER join userworkinfo UWI on UP.UserID = UWI.UserID 
	where UP.DeptID IS NULL and UP.OrgID = pOrgID
    order by UP.EmployeeID,FullName;
    else
     Select UP.UserID,UP.EmployeeID,UP.EmploymentType,CONCAT(UP.FName,' ',UP.LName)as FullName,UP.SiteLocation,UP.Deactivated,UP.DeactivatedOn,
     IFNULL(UWI.Designation, '') as Designation,D.DepartmentName,
     (Select CONCAT(Fname, ' ', LName) from userpersonalinfo where UserID = DPM.DeptManagerID) as Supervisor
	from userpersonalinfo UP LEFT OUTER join userworkinfo UWI on UP.UserID = UWI.UserID
    LEFT JOIN department D ON D.DeptID = UP.DeptID
    LEFT JOIN deptmanager DPM on D.DeptID = DPM.DeptID
	where UP.DeptID = pDeptID and UP.OrgID = pOrgID
    order by UP.EmployeeID,FullName;
    end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UserAssignAdmin` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UserAssignAdmin`(

        in  pOrgID int(11),

        in	pUserID	int(11),

        in  pAssignType char(1)

     )
BEGIN

	DECLARE AdminRoleID,SupervisorRoleID,IsAlreadyAdmin,IsAlreadySupervisor int;

    

    select RoleID into AdminRoleID from userrole where OrgID = pOrgID and RoleName = 'ADMIN';
    select RoleID into SupervisorRoleID from userrole where OrgID = pOrgID and RoleName = 'SUPERVISOR'; 

            

	select count(UserWorkInfoID) into IsAlreadyAdmin from userworkinfo 

	where UserID = pUserID and RoleId = AdminRoleID;
    
    Select count(DeptID) into IsAlreadySupervisor from deptmanager 
    where DeptManagerID = pUserID limit 1;

    

    start transaction;

    if pAssignType= 'Y' Then

		if IsAlreadyAdmin = 0 then 

			 if IsAlreadySupervisor >0 then 
				UPDATE userworkinfo SET RoleID = AdminRoleID WHERE UserID = pUserID;
             else   
					INSERT INTO userworkinfo

					(

						UserID,

						RoleID,

						TeamID

					)

					VALUES

					(

						pUserID,

						AdminRoleID,

						0

					);
			  end if;

		end if; 

	else

		if IsAlreadyAdmin > 0 then 
            if IsAlreadySupervisor >0 then 
				UPDATE userworkinfo SET RoleID = SupervisorRoleID WHERE UserID = pUserID;
            else
				DELETE from userworkinfo where UserID = pUserID and RoleID = AdminRoleID;
            end if;

        end if;    

	End If;

	commit;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UserAssignRole` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UserAssignRole`(
        in  pOrgID int(11),
        in	pUserID	int(11),
        in  pAssignType char(1)
     )
BEGIN
	DECLARE AdminRoleID,SupervisorRoleID,SecurityRoleID,IsAlreadyAdmin,IsAlreadySupervisor,IsAlreadySecurity int;
    
    select RoleID into AdminRoleID from userrole where OrgID = pOrgID and RoleName = 'ADMIN';
    select RoleID into SupervisorRoleID from userrole where OrgID = pOrgID and RoleName = 'SUPERVISOR'; 
	
	
            
	select count(UserWorkInfoID) into IsAlreadyAdmin from userworkinfo 
	where UserID = pUserID and RoleID = AdminRoleID;
	
	Select count(DeptID) into IsAlreadySupervisor from deptmanager 
    where DeptManagerID = pUserID limit 1;
	
	SELECT RoleID into SecurityRoleID from userrole where OrgID = pOrgID and RoleName = 'SECURITY';
	   IF SecurityRoleID IS NULL THEN
			INSERT INTO userrole(RoleName,OrgID) VALUES ('SECURITY', pOrgID);
			SET SecurityRoleID = LAST_INSERT_ID();
	   END IF;
	   
	   SELECT count(UserWorkInfoID) into IsAlreadySecurity FROM userworkinfo 
		 WHERE UserID = pUserID and RoleID = SecurityRoleID;
		 
    start transaction;
    CASE pAssignType
		WHEN 'A' THEN
			IF IsAlreadyAdmin > 0 OR IsAlreadySupervisor > 0 OR IsAlreadySecurity>0 THEN 
					UPDATE userworkinfo SET RoleID = AdminRoleID,Designation='Admin' WHERE UserID = pUserID;
				 ELSE   
						INSERT INTO userworkinfo
						(
							UserID,
							RoleID,
							TeamID,
							Designation
							
						)
						VALUES
						(
							pUserID,
							AdminRoleID,
							0,
							'Admin'
						);
			END IF; 
	WHEN 'E' THEN
				DELETE from userworkinfo where UserID = pUserID;
	ELSE
	   IF IsAlreadyAdmin > 0 Or IsAlreadySupervisor > 0 OR IsAlreadySecurity >0 THEN 
				UPDATE userworkinfo SET RoleID = SecurityRoleID,Designation='Security' WHERE UserID = pUserID;
        ELSE
				INSERT INTO userworkinfo
					(
						UserID,
						RoleID,
						TeamID,
						Designation
					)
					VALUES
					(
						pUserID,
						SecurityRoleID,
						0,
						'Security'
					);
        END IF;
	END CASE;
 commit;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UserByDepartment` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UserByDepartment`(
 in pDepartmentName varchar (50),
 in pOrgID int
)
BEGIN
	Select U.UserID,U.FName,U.LName,U.EmployeeID,U.Email,U.UserPicture,U.WorkPhone,U.CellNo,D.DepartmentName
	from userpersonalinfo U left join department D ON U.DeptId = D.DeptID  
	where D.DepartmentName like CONCAT('%',pDepartmentName,'%') and U.OrgID = pOrgID and U.Deactivated='N';
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UserByDeptLocation` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UserByDeptLocation`(
	in pDeptID text,
    in pLocationName text,
	in pOrgID int,
    in pUserID int,
    in pTypeFlg int(1)
)
BEGIN

	Declare UserRole varchar(10);
    Declare UserDept int;
	Select IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur INNER JOIN userworkinfo uwi on ur.roleID = uwi.roleID  
	where uwi.UserID = U.UserID), 'EMPLOYEE') into UserRole from userpersonalinfo U where U.UserID = pUserID;
	
	if pTypeFlg = 1 then
		select DISTINCT U.SiteLocation
        from userpersonalinfo U where U.OrgID = pOrgID and U.SiteLocation IS NOT NULL;
    elseif pTypeFlg= 2 then
		if pDeptID!='' and pLocationName!='' then
			call splitter(pDeptID,',');
            CREATE TEMPORARY TABLE IF NOT EXISTS splitResultsTmpTable2 AS (SELECT * FROM splitResultsTmpTable);
            call splitter(pLocationName,',');
            select U.UserID,U.FName,U.LName,concat(U.FName,' ',U.LName) as UserName,U.Email,U.EmployeeID,U.UserPicture,U.Deactivated,
            U.DeptID,U.SiteLocation,DP.DepartmentName,
            IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur inner join userworkinfo uwi on ur.roleID = uwi.roleID where uwi.UserID = U.UserID), 'EMPLOYEE') as Role
			from userpersonalinfo U LEFT JOIN department DP on U.DeptID = DP.DeptID
            where U.OrgID = pOrgID and U.Deactivated='N'
            and U.DeptID IN (select SplitValue from splitResultsTmpTable2) and U.SiteLocation IN (select SplitValue from splitResultsTmpTable);
			DROP TABLE splitResultsTmpTable2;
        elseif pDeptID!='' and pLocationName='' then
			call splitter(pDeptID,',');
            select U.UserID,U.FName,U.LName,concat(U.FName,' ',U.LName) as UserName,U.Email,U.EmployeeID,U.UserPicture,U.Deactivated,
            U.DeptID,U.SiteLocation,DP.DepartmentName,
            IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur inner join userworkinfo uwi on ur.roleID = uwi.roleID where uwi.UserID = U.UserID), 'EMPLOYEE') as Role
			from userpersonalinfo U LEFT JOIN department DP on U.DeptID = DP.DeptID
            where U.OrgID = pOrgID and U.Deactivated='N' 
            and U.DeptID IN (select SplitValue from splitResultsTmpTable);
        elseif pDeptID='' and pLocationName!='' then
			
            /*Get all hierarchy sub department ids*/
			Select DeptID into UserDept from deptmanager where DeptManagerID = pUserID;
			CALL nex_GetDeptTree(UserDept,@AllHrcyDept);

			CREATE TEMPORARY TABLE temp_AllDept
			SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(t.Dept_Id, ',', n.n), ',', -1) value
			FROM (select @AllHrcyDept as Dept_Id) t CROSS JOIN
			(
			SELECT a.N + b.N * 10 + 1 n
			FROM
			(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
			,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
			ORDER BY n
			) n
			WHERE n.n <= 1 + (LENGTH(t.Dept_Id) - LENGTH(REPLACE(t.Dept_Id, ',', '')));
            
            
            call splitter(pLocationName,',');
            select U.UserID,U.FName,U.LName,concat(U.FName,' ',U.LName) as UserName,U.Email,U.EmployeeID,U.UserPicture,U.Deactivated,
            U.DeptID,U.SiteLocation,DP.DepartmentName,
            IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur inner join userworkinfo uwi on ur.roleID = uwi.roleID where uwi.UserID = U.UserID), 'EMPLOYEE') as Role
			from userpersonalinfo U LEFT JOIN department DP on U.DeptID = DP.DeptID
            where U.OrgID = pOrgID and U.Deactivated='N' and U.DeptID IN (select * from temp_AllDept)
            and U.SiteLocation IN (select SplitValue from splitResultsTmpTable);
        end if;
    end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UserByEmail` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UserByEmail`(

	in pUserEmail varchar (50),

	in pOrgID int

)
BEGIN



if pOrgID = 0 then

	Select OrgID,UserID,EmployeeID,FName,LName,Email,Pwd,Deactivated from userpersonalinfo where Email=pUserEmail;

else

	Select * from userpersonalinfo where Email=pUserEmail and OrgID = pOrgID;

end if;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UserByEmpID` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UserByEmpID`(
	in pEmpID varchar(50),
	in pOrgID int
)
BEGIN
	Select UserID,FName,LName,Email,DeptID,EmployeeID from userpersonalinfo U 
    where U.EmployeeID= pEmpID and U.OrgID = pOrgID;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UserByMobile` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UserByMobile`(

	in pMobileNo varchar (50),

    in pName varchar (50),

	in pOrgID int

)
BEGIN

	if pName!='' and pMobileNo!='' then 

		

        Select U.UserID,U.FName,U.LName,U.EmployeeID,U.Email,U.UserPicture,U.WorkPhone,U.CellNo,D.DepartmentName

		from userpersonalinfo U 

		left join department D ON U.DeptId = D.DeptID

		where 

		((U.CellNo = pMobileNo or U.WorkPhone = pMobileNo) 

		or (CONCAT(U.FName,' ',U.LName) like CONCAT('%',pName,'%')))

		and U.OrgID = pOrgID and U.Deactivated='N';

        

	elseif  pName!='' and pMobileNo='' then

		

        Select U.UserID,U.FName,U.LName,U.EmployeeID,U.Email,U.UserPicture,U.WorkPhone,U.CellNo,D.DepartmentName

		from userpersonalinfo U 

		left join department D ON U.DeptId = D.DeptID

		where 

		(CONCAT(U.FName,' ',U.LName) like CONCAT('%',pName,'%'))

		and U.OrgID = pOrgID and U.Deactivated='N';

        

	elseif  pName='' and pMobileNo!='' then

		

        Select U.UserID,U.FName,U.LName,U.EmployeeID,U.Email,U.UserPicture,U.WorkPhone,U.CellNo,D.DepartmentName

		from userpersonalinfo U 

		left join department D ON U.DeptId = D.DeptID

		where 

		(U.CellNo = pMobileNo or U.WorkPhone = pMobileNo)

		and U.OrgID = pOrgID and U.Deactivated='N';

        

	end if;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UserByTenure` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UserByTenure`(
	in pOrgID int(11),
    in pEffectiveDate date,
    in pMinYear varchar(5),
	in pMaxYear varchar(5)
)
BEGIN
	SELECT U.UserID,U.FName,U.LName,concat(U.FName,' ',U.LName) as UserName,
    U.Email,U.EmployeeID,U.DateOfJoining,
    DATEDIFF(pEffectiveDate,DateOfJoining) as TenureDays,
    FLOOR(DATEDIFF(pEffectiveDate,DateOfJoining)/365) as TenureYears
	FROM userpersonalinfo U where OrgID = pOrgID 
    and (FLOOR(DATEDIFF(pEffectiveDate,DateOfJoining)/365) >= pMinYear and FLOOR(DATEDIFF(pEffectiveDate,DateOfJoining)/365) < pMaxYear);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UserCalendars` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UserCalendars`(
	in pUserID int,
	in porgID int
)
BEGIN
	select C.CalendarName,C.CalendarDesc,UC.EffectedFrom 
    from usercalendar UC 
    LEFT JOIN calendar C ON UC.CalendarID = C.CalendarID
    where UC.UserID = pUserID and C.OrgID = porgID
    order by UC.EffectedFrom desc;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UserDetails` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UserDetails`(
in pUserEmail 	VARCHAR(100),
in porgID int
)
BEGIN
    Select UP.*, DP.DepartmentName as DeptName,
    (Select DeptID from deptmanager where DeptManagerID = UP.UserID limit 1) as MngrOfDept,
	(Select CONCAT(Fname, ' ', LName) from userpersonalinfo where UserID = DPM.DeptManagerID) as Supervisor,
	IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur inner join userworkinfo uwi on ur.roleID = uwi.roleID where uwi.UserID = UP.UserID), 'EMPLOYEE') as Role,
	IFNULL(UWI.Designation, '') as Designation
	from userpersonalinfo UP LEFT OUTER Join department DP on UP.DeptID = DP.DeptID
	LEFT OUTER join deptmanager DPM on DP.DeptID = DPM.DeptID
	LEFT OUTER join userworkinfo UWI on UP.UserID = UWI.UserID 
	where Email = pUserEmail and UP.OrgID = porgID;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UserDetailsByID` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`111.93.226.178` PROCEDURE `nex_UserDetailsByID`(
in pUserID 	VARCHAR(100),
in porgID int
)
BEGIN
    if porgID > 0 then 
		Select UP.UserID,UP.FName,UP.LName,UP.Email,UP.EmployeeID,UP.UserPicture,UP.DeptID,UP.DateOfJoining,UP.ResignationDate,UP.ReleaseDate,UP.ReleaseType,UP.EmploymentType,UP.Address,UP.SiteLocation,UP.CellNo,UP.WorkPhone,
		DP.DepartmentName as DeptName,
		(Select GROUP_CONCAT(DeptID) from deptmanager where DeptManagerID = UP.UserID) as MngrOfDept,
		(Select CONCAT(Fname, ' ', LName) from userpersonalinfo where userID = DPM.DeptManagerID) as Supervisor,
		IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur inner join userworkinfo uwi on ur.roleID = uwi.roleID where uwi.userID = UP.UserID), 'EMPLOYEE') as Role,
		IFNULL(UWI.Designation, '') as Designation,
		DPM.DeptManagerID
		from userpersonalinfo UP LEFT OUTER Join department DP on UP.DeptID = DP.DeptID
		LEFT OUTER join deptmanager DPM on DP.DeptID = DPM.DeptID
		LEFT OUTER join userworkinfo UWI on UP.UserID = UWI.UserID 
		where UP.UserID = pUserID and UP.OrgID = porgID;
    else
		Select UP.UserID,UP.FName,UP.LName,UP.Email,UP.EmployeeID,UP.UserPicture,UP.DeptID,UP.DateOfJoining,UP.ResignationDate,UP.ReleaseDate,UP.ReleaseType,UP.EmploymentType,UP.Address,UP.SiteLocation,UP.CellNo,UP.WorkPhone,
		DP.DepartmentName as DeptName,
		(Select GROUP_CONCAT(DeptID) from deptmanager where DeptManagerID = UP.UserID) as MngrOfDept,
		(Select CONCAT(Fname, ' ', LName) from userpersonalinfo where UserID = DPM.DeptManagerID) as Supervisor,
		IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur inner join userworkinfo uwi on ur.roleID = uwi.roleID where uwi.UserID = UP.UserID), 'EMPLOYEE') as Role,
		IFNULL(UWI.Designation, '') as Designation,
		DPM.DeptManagerID
		from userpersonalinfo UP LEFT OUTER Join department DP on UP.DeptID = DP.DeptID
		LEFT OUTER join deptmanager DPM on DP.DeptID = DPM.DeptID
		LEFT OUTER join userworkinfo UWI on UP.UserID = UWI.UserID 
		where UP.UserID = pUserID;

    end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UserLogin` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UserLogin`(



in pUserEmail varchar (50),



in pPassword   varchar (50)



)
BEGIN

/*

Select UP.*, DP.DepartmentName as DeptName, 

(Select CONCAT(Fname, ' ', LName) from userpersonalInfo where DeptID = UP.DeptID and UserID = DPM.DeptManagerID) as Supervisor,

IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur inner join userworkinfo uwi on ur.roleID = uwi.roleID where uwi.UserID = UP.UserID), 'EMPLOYEE') as Role,

IFNULL(UWI.Designation, '') as Designation

from userpersonalinfo UP LEFT OUTER Join department DP on UP.DeptID = DP.DeptID

LEFT OUTER join deptmanager DPM on DP.DeptID = DPM.DeptID

LEFT OUTER join UserworkInfo UWI on UP.UserID = UWI.UserID

where Email=pUserEmail and Pwd=pPassword and deleted=0;

*/



Select UP.UserID,UP.OrgID,UP.FName,UP.LName,UP.Email,UP.UserPicture,UP.WorkPhone,UP.CellNo,UP.EmployeeID,UP.DeptID,

UP.PwdResetrequired,UP.Deactivated,

DP.DepartmentName as DeptName,

(Select GROUP_CONCAT(DeptID) from deptmanager where DeptManagerID = UP.UserID) as MngrOfDept, 

(Select CONCAT(Fname, ' ', LName) from userpersonalinfo where UserID = DPM.DeptManagerID) as Supervisor,

IFNULL((Select IFNULL(ur.rolename, 'EMPLOYEE') from userrole ur INNER JOIN userworkinfo uwi on ur.roleID = uwi.roleID where uwi.UserID = UP.UserID), 'EMPLOYEE') as Role,

IFNULL(UWI.Designation, '') as Designation,
concat(SAPUP.FName,' ',SAPUP.LName) as RequestToSupervisor, SAP.RequestStatus as RequestToSupervisorStatus 

from userpersonalinfo UP LEFT JOIN department DP on UP.DeptID = DP.DeptID

LEFT JOIN deptmanager DPM on DP.DeptID = DPM.DeptID

LEFT JOIN userworkinfo UWI on UP.UserID = UWI.UserID
LEFT JOIN supervisorapproval SAP on UP.UserID = SAP.UserID
LEFT JOIN userpersonalinfo SAPUP on SAP.SupervisorID = SAPUP.UserID

where UP.Email=pUserEmail and UP.Pwd like binary pPassword and UP.deleted=0
order by SAP.AppliedDate desc
limit 1;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UserLogout` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UserLogout`(
	in pUserID int(11)
)
BEGIN
 UPDATE userdevices SET IsLoggedIn='N' WHERE UserID = pUserID; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UserRecentAttendance` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UserRecentAttendance`(

in pUserID 	int(11),

in currentDate date,

in pFlag varchar(20)

)
BEGIN

	if pFlag = 'AFTER-CHECKOUT' then 

		Select UP.UserID,UP.FName,UP.LName,UP.Email,UP.EmployeeID,UP.OrgID,DPM.DeptManagerID,

		A.AttendanceID,

		date(A.CheckInTime) as AttnDate, 

		Time(A.CheckInTime) as CheckInTime, 

		Time(A.CheckOutTime) CheckOutTime,

		/*(TIMESTAMPDIFF(Hour, A.CheckInTime, A.CheckOutTime) + (TIMESTAMPDIFF(Minute, A.CheckInTime, A.CheckOutTime) - ((TIMESTAMPDIFF(Hour, A.CheckInTime, A.CheckOutTime))  * 60)) *.01) TotalHours*/

		(TIMESTAMPDIFF(Second, CheckInTime, CheckOutTime)) TotalHours
        from userpersonalinfo UP 

		LEFT OUTER Join department DP on UP.DeptID = DP.DeptID

		LEFT OUTER join deptmanager DPM on DP.DeptID = DPM.DeptID

		LEFT OUTER join attendance A on UP.UserID = A.UserID

		where UP.UserID = pUserID and date(A.LogTime) = currentDate;

    elseif pFlag = 'BEFORE-CHECKOUT' then

		Select 

		A.AttendanceID,A.UserID,

		date(A.CheckInTime) as AttnDate, 

		Time(A.CheckInTime) as CheckInTime, 

		Time(A.CheckOutTime) CheckOutTime,

		(TIMESTAMPDIFF(Second, CheckInTime, NOW())) TotalHours
        from attendance A 

		where A.UserID = pUserID 
        and A.CheckInTime >= DATE_SUB(CAST(NOW() as DATETIME), INTERVAL 1 DAY) and A.CheckInTime <= CAST(NOW() as DATETIME)
		order by A.CheckInTime desc limit 0,1;

    end if;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `nex_UserShifts` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `nex_UserShifts`(
	in pUserID int,
	in porgID int
)
BEGIN
	select S.ShiftTitle,S.Description,S.StartTime,S.EndTime,S.isActive,US.EffectedFrom 
    from usershift US 
    LEFT JOIN shift S ON US.ShiftID = S.ShiftID
    where US.UserID = pUserID and S.OrgID = porgID
    order by US.EffectedFrom desc;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `splitter` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `splitter`(x TEXT, delim varchar(12))
BEGIN
	SET @Valcount = substrCount(x,delim)+1;
	SET @v1=0;
	drop table if exists splitResultsTmpTable;
	create temporary
	table splitResultsTmpTable (TmpID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,SplitValue varchar(255));
	WHILE (@v1 < @Valcount) DO
		set @val = stringSplit(x,delim,@v1+1);
		INSERT INTO splitResultsTmpTable (SplitValue) VALUES (@val);
		SET @v1 = @v1 + 1;
	END WHILE;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-08-03 11:06:23
